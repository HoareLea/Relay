{
  "Uuid": "f0eae0ae-aa61-484a-9cf0-0baccb79f36c",
  "IsCustomNode": false,
  "Description": null,
  "Name": "Foul Drainage Systems_Pipe Numbering v.1.4",
  "ElementResolver": {
    "ResolutionMap": {
      "CurveByPoints.By": {
        "Key": "Revit.Elements.CurveByPoints",
        "Value": "RevitNodes.dll"
      },
      "DSCore.List.Empty": {
        "Key": "DSCore.List",
        "Value": "DSCoreNodes.dll"
      },
      "DSCore.List": {
        "Key": "DSCore.List",
        "Value": "DSCoreNodes.dll"
      },
      "Category": {
        "Key": "Revit.Elements.Category",
        "Value": "RevitNodes.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\n# Angled branching network evaluator by Jared Linden jaredlindena@hoarelea.com \r\n\r\ndataEnteringNode = UnwrapElement(IN[0])\r\n\r\ndebug = []\r\n\r\nclass Run:\r\n\r\n\tdef __init__(self, _number, _parent, _start_id):\r\n\t\tself.parent = _parent\r\n\t\tself.start_id = _start_id\r\n\t\tself.number = _number\r\n\t\tself.__branches = 0\r\n\t\t\r\n\tdef depth(self):\r\n\t\treturn self.parent.depth() + 1 if self.parent else 1\r\n\t\t\r\n\tdef runString(self):\r\n\t\treturn str(self.number) if self.parent is None else self.parent.runString() + \".\" + str(self.number)\r\n\t\t\r\n\tdef branch(self, start_id):\r\n\t\tself.__branches += 1\r\n\t\treturn Run(self.__branches, self, start_id)\r\n\t\t\r\n\tdef __eq__(self, other):\r\n\t\tif not isinstance(other, Run): \r\n\t\t\treturn False\r\n\t\treturn self.number == other.number and self.depth() == other.depth() if self.parent == other.parent else False\r\n\t\t\r\n\tdef __lt__(self, other):\r\n\t\tif self.depth() == other.depth() and self.number == other.number:\r\n\t\t\treturn self.parent < other.parent if self.parent else - 1\r\n\t\telse:\r\n\t\t\treturn self.number < other.number if self.depth() == other.depth() else self.depth() < other.depth()\r\n\t\r\n\tdef __hash__(self):\r\n\t\treturn self.number * 31 + self.depth()\r\n\t\r\n\r\nclass Edge:\r\n\t\r\n\tdef __init__(self, _run, _start_connector):\r\n\t\tself.run = _run\r\n\t\tself.end = None\r\n\t\tself.start = _start_connector.node\r\n\t\tself.__connector = _start_connector\r\n\t\t\r\n\tdef evaluate(self):\r\n\t\tcurrent = self.__connector.connectedElement()\r\n\t\twhile(isinstance(current, SectionElement)):\r\n\t\t\tcurrent = current.nextElement()\r\n\t\tself.end = current\r\n\t\t\r\nclass ConnectorHelper:\r\n\t\r\n\tdef __init__(self, _node, _connector, _element_container):\r\n\t\tself.node = _node\r\n\t\tself.id = connected(_connector).Owner.Id.IntegerValue\r\n\t\tself.direction = _connector.CoordinateSystem.BasisZ\r\n\t\tself.edge = None\r\n\t\tself.__connector = _connector\r\n\t\tself.__element_container = _element_container\r\n\t\t\r\n\tdef setEdge(self, _edge):\r\n\t\tself.edge = _edge\r\n\t\t\r\n\tdef hasEvaluated(self):\r\n\t\treturn self.edge is not None\r\n\t\t\r\n\tdef evaluateEdge(self, run):\r\n\t\tself.edge = Edge(run, self)\r\n\t\tself.edge.evaluate()\r\n\r\n\t\t\r\n\tdef connectedElement(self):\r\n\t\treturn self.__element_container.getNetworkElement(connected(self.__connector).Owner, self.node, self.edge)\r\n\r\nclass SectionElement:\r\n\r\n\tdef __init__(self, _elem, _edge, _prev_id, _source, _added):\r\n\t\tself.edge = _edge\r\n\t\tself.added = _added\r\n\t\tself.prev_id = _prev_id\r\n\t\tself.element = _elem\r\n\t\tself.source = _source\r\n\t\tself.id = _elem.Id.IntegerValue\r\n\t\tself.main_run = _edge.run\r\n\t\t\r\n\tdef getMainRun(self):\r\n\t\treturn self.edge.run\r\n\t\t\r\n\tdef nextElement(self):\r\n\t\ttry:\r\n\t\t\tnext_elem = next(iter(y.Owner for y in [connected(x) for x in getNodeConnectors(self.element)] if y.Owner.Id.IntegerValue != self.prev_id))\r\n\t\texcept:\r\n\t\t\tnext_elem = next(iter(y.Owner for y in [connected(x) for x in getAllConnectors(self.element)] if y.Owner.Id.IntegerValue != self.prev_id))\r\n\t\treturn self.source.getNetworkElement(next_elem, self, self.edge)\r\n\r\n\r\nclass TerminalElement:\r\n\tdef __init__(self, _element, _edge, _added):\r\n\t\tself.element = _element\r\n\t\tself.added = _added\r\n\t\tself.edge = _edge\r\n\t\tself.id = _element.Id.IntegerValue\r\n\t\t\r\n\tdef getMainRun(self):\r\n\t\treturn self.edge.run\r\n\r\n\r\nclass BranchElement(object):\r\n\t\r\n\tdef __init__(self, element):\r\n\t\tself.id = element.Id.IntegerValue\r\n\r\n\r\nclass StartElement(BranchElement):\r\n\t\r\n\tdef __init__(self, _element, _run, _element_source, _added):\r\n\t\tself.element = _element\r\n\t\tself.__source = _element_source\r\n\t\tself.added = _added\r\n\t\tself.main_run = _run\r\n\t\tself.paused = False\r\n\t\tself.id = _element.Id.IntegerValue\r\n\t\tself.__connectors = [ConnectorHelper(self, x, _element_source) for x in getAllConnectors(_element)]\r\n\t\tif len(self.__connectors) != 0:\r\n\t\t\tself.__out1 = self.__connectors[0]\r\n\t\t\tself.__out2 = None\r\n\t\t\tif len(self.__connectors) > 1:\r\n\t\t\t\tself.__out2 = self.__connectors[1]\r\n\t\tsuper(StartElement, self).__init__(_element)\r\n\t\t\r\n\tdef getMainRun(self):\r\n\t\treturn self.main_run\r\n\r\n\tdef hasMainNext(self):\r\n\t\treturn True\r\n\t\r\n\tdef evaluateMain(self):\r\n\t\tif not self.__out1.hasEvaluated():\r\n\t\t\treturn self.__out1.evaluateEdge(self.main_run)\r\n\t\telif self.__out2 is not None and not self.__out2.hasEvaluated():\r\n\t\t\treturn self.__out2.evaluateEdge(self.main_run)\r\n\t\telse:\r\n\t\t\treturn self.__out1.evaluateEdge(self.main_run)\r\n\t\t\t\r\n\tdef evaluateNextBranch(self):\r\n\t\tcon = sorted((x for x in self.__connectors if not x.hasEvaluated()), key = lambda x: self.__out1.direction.AngleTo(x.direction))[0]\r\n\t\tcon.evaluateEdge(self.getMainRun().branch(self.id))\r\n\t\t\r\n\tdef hasEvaluated(self):\r\n\t\treturn all(x.hasEvaluated() for x in self.__connectors)\r\n\t\t\r\n\tdef hasEvaluatedMain(self):\r\n\t\treturn self.__out1.hasEvaluated() and (self.__out2 is None or self.__out2.hasEvaluated())\r\n\t\t\r\n\tdef setIncomingEdge(self, connector_id, edge):\r\n\t\t[x for x in self.__connectors if x.id == connector_id][0].setEdge(edge)\r\n\t\t\t\r\n\r\nclass NodeElement(BranchElement):\r\n\r\n\tdef __init__(self, _element, _edge, _prev_id, _source, _added):\r\n\t\tself.element = _element\r\n\t\tself.__source = _source\r\n\t\tself.__prev_id = _prev_id\r\n\t\tself.id = _element.Id.IntegerValue\r\n\t\tself.added = _added\r\n\t\tself.__connectors = [ConnectorHelper(self, x, _source) for x in getAllConnectors(_element)]\r\n\t\tself.paused = False\r\n\t\tnext(iter(x for x in self.__connectors if x.id == _prev_id)).setEdge(_edge)\r\n\t\tself.paused = not self.hasMainNext()\r\n\t\tsuper(NodeElement, self).__init__(_element)\r\n\t\t\r\n\tdef inConnectors(self):\r\n\t\treturn (x for x in self.__connectors if x.edge is not None and x.edge.start.id != self.id)\r\n\t\t\r\n\tdef getInMain(self):\r\n\t\treturn sorted(self.inConnectors(), key = lambda x: x.edge.run)[0]\r\n\t\t\r\n\tdef getMainRun(self):\r\n\t\treturn sorted((x for x in self.__connectors if x.hasEvaluated()), key = lambda x: x.edge.run)[0].edge.run\r\n\t\t\r\n\tdef hasMainNext(self):\r\n\t\tmain_in_dir = self.getInMain().direction.Negate()\r\n\t\treturn len([x for x in self.__connectors if not x.hasEvaluated()]) == 1 or any(x for x in self.__connectors if x.direction.AngleTo(main_in_dir) < 0.05 and not x.hasEvaluated())\r\n\t\t\r\n\tdef evaluateMain(self):\r\n\t\tself.paused = False\r\n\t\tmain_in_dir = self.getInMain().direction.Negate()\r\n\t\tsorted((x for x in self.__connectors if not x.hasEvaluated()), key = lambda x: main_in_dir.AngleTo(x.direction))[0].evaluateEdge(self.getMainRun())\r\n\t\t\r\n\tdef evaluateNextBranch(self):\r\n\t\tmain_in_dir = self.getInMain().direction.Negate()\r\n\t\tcon = sorted((x for x in self.__connectors if not x.hasEvaluated()), key = lambda x: main_in_dir.AngleTo(x.direction))[0]\r\n\t\tcon.evaluateEdge(self.getMainRun().branch(self.id))\r\n\t\t\r\n\tdef hasEvaluated(self):\r\n\t\treturn all(x.hasEvaluated() for x in self.__connectors)\r\n\t\t\r\n\tdef hasEvaluatedMain(self):\r\n\t\treturn len([x for x in self.__connectors if x.hasEvaluated() and x.edge.run == self.getMainRun()]) == 2\r\n\t\t\r\n\tdef setIncomingEdge(self, connector_id, edge):\r\n\t\tnext(iter(x for x in self.__connectors if x.id == connector_id)).setEdge(edge)\r\n\t\t\r\n\t\t\t\r\nclass ElementContainer:\r\n\r\n\tdef __init__(self):\r\n\t\tself.__elems = {}\r\n\t\tself.__number = 1\r\n\t\t\r\n\tdef getNetworkElement(self, element, prev, edge):\r\n\t\tid = element.Id.IntegerValue\r\n\t\tif id in self.__elems:\r\n\t\t\telem = self.__elems[id]\r\n\t\t\tif isinstance(elem, NodeElement):\r\n\t\t\t\telem.setIncomingEdge(prev.id, edge)\r\n\t\t\treturn elem\r\n\t\telse:\r\n\t\t\tif isNodeElement(element):\r\n\t\t\t\tnew = NodeElement(element, edge, prev.id, self, self.__number)\r\n\t\t\telif isSectionElement(element):\r\n\t\t\t\tnew = SectionElement(element, edge, prev.id, self, self.__number)\r\n\t\t\telif isTermainalElement(element):\r\n\t\t\t\tnew = TerminalElement(element, edge, self.__number)\r\n\t\t\telse:\r\n\t\t\t\traise Exception(\"Unknow element type connected to network\")\r\n\t\t\tself.__elems[id] = new\r\n\t\t\tself.__number += 1\r\n\t\t\treturn new\r\n\t\t\t\r\n\tdef networkElements(self):\r\n\t\treturn sorted(sorted(self.__elems.values(), key = lambda x:x.getMainRun()), key = lambda y:y.added)\r\n\t\t\r\n\tdef setStart(self, start_node):\r\n\t\tself.__elems[start_node.id] = start_node\r\n\t\t\r\n\tdef nodes(self):\r\n\t\treturn (x for x in self.__elems.values() if isinstance(x, BranchElement)) #or isinstance(x, NodeElement))\r\n\r\n\r\ndef isValidConnector(connector):\r\n\treturn (connector.ConnectorType == ConnectorType.End or connector.ConnectorType == ConnectorType.Curve) and connector.IsConnected and (isinstance(connector.Owner, MEPCurve) or isinstance(connector.Owner, FamilyInstance))\r\n\r\n#Return Connector\r\ndef connected(connector):\r\n\ttry:\r\n\t\treturn [x for x in connector.AllRefs if isValidConnector(x) and x.Owner.Id.IntegerValue != connector.Owner.Id.IntegerValue][0]\r\n\texcept:\r\n\t\traise Exception(\"Connector not connected\")\r\n\t\r\ndef connectedId(connector):\r\n\treturn connected(connector).Owner.Id.IntegerValue\r\n\t\r\ndef getAllConnectors(element):\r\n\ttry:\r\n\t\tconnectors = element.MEPModel.ConnectorManager.Connectors\r\n\texcept:\r\n\t\tconnectors = element.ConnectorManager.Connectors\r\n\treturn [x for x in connectors if isValidIterableConnector(x)]\r\n\t\r\ndef isValidIterableConnector(connector):\r\n\treturn isValidConnector(connector) and len([x for x in connected(connector).ConnectorManager.Connectors]) > 1\r\n\t\r\ndef getNodeConnectors(element):\r\n\treturn [x for x in getAllConnectors(element) if not isPipeConnectedToCap(connected(x).Owner)]\r\n\t\r\ndef isPipeConnectedToCap(elem):\r\n\ttry:\r\n\t\tlength = elem.Location.Curve.Length\r\n\texcept:\r\n\t\tlength = 10\r\n\tif length > 1.5:\r\n\t\treturn False\r\n\ttry:\r\n\t\tconnectors = elem.MEPModel.ConnectorManager.Connectors\r\n\texcept:\r\n\t\tconnectors = elem.ConnectorManager.Connectors\r\n\treturn any(len([y for y in connected(x).ConnectorManager.Connectors if isValidConnector(y)]) < 2 for x in [z for z in connectors if isValidConnector(z)])\r\n\t\r\ndef isSectionElement(element):\r\n\treturn len(getAllConnectors(element)) == 2 or len(getNodeConnectors(element)) == 2\r\n\t\r\ndef isNodeElement(element):\r\n\treturn len(getNodeConnectors(element)) > 2\r\n\t\r\ndef isTermainalElement(element):\r\n\treturn len(getAllConnectors(element)) == 1 or len(getNodeConnectors(element)) == 1\r\n\t\r\ndef firstOrNone(list):\r\n\treturn next(iter(list), None)\r\n\t\r\ndef mainLoop(root_element):\r\n\r\n\telement_container = ElementContainer()\r\n\troot_run = Run(1, None, root_element.Id.IntegerValue)\r\n\tstart_node = StartElement(root_element, root_run, element_container, 0)\r\n\telement_container.setStart(start_node)\r\n\t\r\n\tsafety = 0\r\n\twhile firstOrNone(x for x in element_container.nodes() if not x.hasEvaluated()) is not None:\r\n\t\tordered_unevaluated = sorted(sorted((x for x in element_container.nodes() if not x.hasEvaluated()), key = lambda x: x.getMainRun()), key = lambda y:y.added)\r\n\t\tsafety +=1\r\n\t\tif safety > 999:\r\n\t\t\traise Exception(\"To many loops\")\r\n\t\tfirst_with_next = firstOrNone((x for x in ordered_unevaluated if not x.hasEvaluatedMain() and not x.paused and x.hasMainNext()))\r\n\t\tif first_with_next is not None:\r\n\t\t\tfirst_with_next.evaluateMain()\r\n\t\t\tcontinue\r\n\t\t\t\r\n\t\tfirst_with_branch = firstOrNone((x for x in ordered_unevaluated if x.hasEvaluatedMain() and not x.paused))\r\n\t\tif first_with_branch is not None:\r\n\t\t\tfirst_with_branch.evaluateNextBranch()\r\n\t\t\tcontinue\r\n\t\t\t\r\n\t\tfirst_paused_with_main = firstOrNone((x for x in ordered_unevaluated if x.hasMainNext() and x.paused and not x.hasEvaluatedMain()))\r\n\t\tif first_paused_with_main is not None:\r\n\t\t\tfirst_paused_with_main.evaluateMain()\r\n\t\t\tcontinue\r\n\t\t\t\r\n\t\tfirst_paused_branch = firstOrNone((x for x in ordered_unevaluated if not x.hasEvaluatedMain() and x.paused))\r\n\t\tif first_paused_branch is not None:\r\n\t\t\tfirst_paused_branch.evaluateMain()\r\n\t\t\tcontinue\r\n\t\t\t\r\n\t\traise Exception(\"Unknown state\")\r\n\treturn element_container.networkElements()\r\n\r\n\r\n\t\r\nin_elements = dataEnteringNode\r\n\r\n\r\noutput = []\r\n\r\n\r\ndef addToRunsDict(elem, runsdict):\r\n\trun = elem.getMainRun()\r\n\trunstart = run.start_id\r\n\trunstring = run\r\n\tif runstart not in runsdict:\r\n\t\trunsdict[runstart] = {}\r\n\tif runstring not in runsdict[runstart]:\r\n\t\trunsdict[runstart][runstring] = []\r\n\trunsdict[runstart][runstring].append(elem)\r\n\t\r\nsafe1 = 0\r\n\r\ndef getRunElements(elems, runsdict):\r\n\tlist = []\r\n\tglobal safe1\r\n\tsafe1 +=1\r\n\tif safe1 > 5000:\r\n\t\traise Exception(\"Too many recursions\")\r\n\tsorted_elems = sorted(elems, key = lambda x:x.added)\r\n\tfor x in sorted_elems:\r\n\t\tlist.append(x.element)\r\n\t\tif x.id in runsdict:\r\n\t\t\tfor key in sorted(runsdict[x.id].keys()):\r\n\t\t\t\tsubl = runsdict[x.id].pop(key)\r\n\t\t\t\tlist.append(getRunElements(subl, runsdict))\r\n\treturn list\r\n\t\r\nnetworks = []\r\nall_done =[]\r\nfor element in (me for me in in_elements if me.Id.IntegerValue not in all_done):\r\n\trunsdict = {}\r\n\toutput = []\r\n\tnetwork = mainLoop(element)\r\n\tfor x in network:\r\n\t\taddToRunsDict(x, runsdict)\r\n\t\r\n\t#done_list.append(element.Id.IntegerValue)\r\n\tfirst = runsdict[element.Id.IntegerValue].keys()[0]\r\n\tlems = runsdict[element.Id.IntegerValue].pop(first)\r\n\tnetworks.append(getRunElements(lems, runsdict))\r\n\tall_done.extend([x.id for x in network])\r\n#debug = [[x.getMainRun().runString(), x.element, x.added, x] for x in network]\r\n\r\nOUT = networks#, debug",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "741b8db565c2402db7daabd08688e034",
      "Inputs": [
        {
          "Id": "649b2634433c4b109ea374b4704afc64",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7e0c71a4240347d0b5f7411b5574f471",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "072cff5cd25d463ba7383d9e5a9bda0b",
      "Inputs": [
        {
          "Id": "34dcf02086de4c9f8034f98b18489287",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99dc7bc4b0ed4594adcfeade92a97584",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "541c2e1bc92740d29d28805fe8978e17",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "862022e3e9624c1da7f2f8f7ace1c876",
      "Inputs": [
        {
          "Id": "e512bc2ef81f49f89580664ab8e88cc6",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1cf32f3d288f464a8d6434adc9ffd27c",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f9590aec3ecc403f9e41ec8e72fe456b",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.MinimumItem@var[]",
      "Id": "1524d320b2794f9ab13d3bb61caa29ff",
      "Inputs": [
        {
          "Id": "bc5d660e0768475e87cd924870ed109e",
          "Name": "list",
          "Description": "List of comparable items to take the minimum value from\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b901bbf4eadb42da8844c8d8f63f8597",
          "Name": "item",
          "Description": "Minimum item from the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Returns the minimum value from a list.\n\nList.MinimumItem (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "30b18c11f2e44a238ef24586aa68f679",
      "Inputs": [
        {
          "Id": "c5946c6e64b540428dc31901ce8d6f5e",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff75bd914fe04a368e052c517ee7af66",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "959f94d300224c5c98c512ca6e33fed8",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "9847fa9577c446cf8548deb8be618f12",
      "Inputs": [
        {
          "Id": "a82585e30755400cb2083ff50cae54ea",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0ead15d95c574016a41db7ad35506775",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bf468bf97d9a4bb4ab43e9d7043ebbbf",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Invert Elevation\";",
      "Id": "b309d44e0e254ae0bd5230e94e5c49a8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "336c90898c3641878689a9241b391136",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "491b1033204442939af888f485007a1a",
      "Inputs": [
        {
          "Id": "c162cac2c9f44ac18fbe55fe9772a784",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9c238cfb5b4c45dfb95cf11217148964",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "1fa9323ced9f4739bab2e04b67701d6e",
      "Inputs": [
        {
          "Id": "ac201a556c124de4bec0f70396cd5550",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b7e37ad3931c488e99eac80f3a363cfa",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ecff2ade16d44871bbc55951c5c4351c",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b05c3717c5534942b725cd1bfc0a801c",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Pipes\";",
      "Id": "bbdf05e9c5cc41b2a08322a0a0c77423",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5f527e2aff134f61bd2b38f98001604e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "6d9406cabacd40918a038ab3d22deac7",
      "Inputs": [
        {
          "Id": "f00bcf2a58bb4d67b848db8389f68573",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "73907943b9d9490bade771bb70ad6726",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4f81644cf269415ba23afd857c768ae0",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8684bf41381e47ae8efecc6344fc04db",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetCategory",
      "Id": "76753667f0c54435b01236ac8f8ee67d",
      "Inputs": [
        {
          "Id": "ca8a15e957514ca78d3f9e74b565a16e",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0b2cb20580e8477ea8583ed8eb74c17f",
          "Name": "Category",
          "Description": "Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get Element Category\n\nElement.GetCategory: Category"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\n\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\ndoc = DocumentManager.Instance.CurrentDBDocument\n\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\nclr.ImportExtensions(Revit.GeometryConversion)\n\n#Many thanks to Konrad K Sobon for his awesome ProcessList function!\ndef Unwrap(item):\n\treturn UnwrapElement(item)\n\ndef ProcessList(_func, _list):\n    return map( lambda x: ProcessList(_func, x) if type(x)==list else _func(x), _list )\n\nif isinstance(IN[0], list):\n\tsystems = ProcessList(Unwrap, IN[0])\nelse:\n\tsystems = [Unwrap(IN[0])]\n\t\n\t\ndef getNetwork(system):\n\tnetwork = None\n\ttry:\n\t\tnetwork = [x.ToDSType(True) for x in system.PipingNetwork]\n\texcept:\n\t\tpass\n\treturn network\n\n\t\t\t\n#Assign your output to the OUT variable.\n\nOUT = ProcessList(getNetwork, systems)",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "9befcabe9f0544bbbd9c9c69e6512308",
      "Inputs": [
        {
          "Id": "ebb12ff593e646fc835e2d228a4701e9",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f08e4e2b5d3f49f49d1934fa12cf93ae",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "InputNumber[3];",
      "Id": "c4e8c475ff6e402191fab867512f5dbb",
      "Inputs": [
        {
          "Id": "81954d4a8c9f41669ee81763321450db",
          "Name": "InputNumber",
          "Description": "InputNumber",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2d045ae322bc41e7bb59aee5eb48e1b7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "fb359cef925046c4acdd7c6df0aae2da",
      "Inputs": [
        {
          "Id": "5caea4754da44b71b03b714d930e0f54",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "179551541b484c4a92df8fc43951840d",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7185709f5a084694a279b10078b3167f",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b628c8aacb1445e19d9273640ae190d8",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "6dcfb5ba15c74e41b3eae92bf39a27d9",
      "Inputs": [
        {
          "Id": "7c8972a3a1ed42d59f4c422461acfa04",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0718f329745c4a9db69f70737f31c598",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "361885926f9c4b9ea0fdf71c4ab102ab",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7d4dab77c37e438f9954e350caa97d7d",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "14eadfb5b1f44de99addf4a55f760cc2",
      "Inputs": [
        {
          "Id": "a1810095159d49ac964f7953d5a85778",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e75cc34bc91d4d7b935875c7658a47b0",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "095421e791f44b0185707913d47d79ab",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Sanitary\";",
      "Id": "ed7150baf51d46a896d81b6239b6c86e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "57628a7d9aa24e589988d0d4abfe1f98",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.ElementType",
      "Id": "87748a604995420d83b7373bda163ac2",
      "Inputs": [
        {
          "Id": "67736fd8afde47e7912db363275a5fbf",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "764559ed85aa47c2b28f53d62fab227c",
          "Name": "ElementType",
          "Description": "Element Type or Null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the ElementType for this Element. Returns null if the Element cannot have an ElementType assigned.\n\nElement.ElementType: ElementType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"System Classification\";",
      "Id": "f8b899350d9c4cf99a1efd15bec560c0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d790f95fc1404730a86d8f78c7097579",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "e9c5528e536745e587269f8a50897cd0",
      "Inputs": [
        {
          "Id": "b141c52c788a4a73874f48f214e0a5de",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "998fcb1237cb4562b6e2f91994ec1026",
          "Name": "Elements",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "out;",
      "Id": "d81d37d533604842ab1f16ed0a8eac67",
      "Inputs": [
        {
          "Id": "7e2b219552a948bf80ce72cd80b1736e",
          "Name": "out",
          "Description": "out",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "97738e0a939a458f87d522d00ddcbf26",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Manual System Name",
      "Id": "aa54890d5d2c40d7b8e79f2eba380665",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fff72d48f2ff4050b2758c0e0ec33d45",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "110cedca1834491592e4ee421147fea2",
      "Inputs": [
        {
          "Id": "566301d8549949919081db48df61b22f",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2481cfb06206480db5767f43440513b2",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "353640572a6e4752b617f43c0c4b5ede",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c2e29f6f9cdc4051afcd7999be10faa6",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "f66db0919aea47f1aee1f0df637ac861",
      "Inputs": [
        {
          "Id": "df7fde13c26649e4afcffa6ad2afdc1d",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d840269409c84258bcc7b90a480fdb08",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "56938ecaa636476f96d6100fa9accbce",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"System Abbreviation\";",
      "Id": "df5b69d2846047bf9a0e4228607ff535",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a32b7c250e304ef6a8752a231cc868e5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x + \" \" + y;",
      "Id": "2e609d0c44d34684b12f3333795a3b5e",
      "Inputs": [
        {
          "Id": "fac73fd6b4b64cd48419bdf3252508e1",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac0c1f677f82499fbef92bc676a0e97d",
          "Name": "y",
          "Description": "y",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "05ee9cf8bfd94b96883793e13579c44f",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "ffa04dda9505454b831da12dcc1613d1",
      "Inputs": [
        {
          "Id": "946a807c5af94e779788f616f1354281",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "35961235e04c49369d831f24ec2e8e9b",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ed65e81d6cb14485961e789a2e5140f3",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n#By Jared Linden jaredlinden@hoarela.com\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\nnumber = IN[1]\r\n\r\noutput = []\r\n\r\n#Sweet sweet recursion\r\ndef GetTagRecursive(item, current_branch):\r\n\t\t\r\n\titem_tags = []\r\n\t\r\n\tnext_branches = current_branch[:]+[0]\r\n\tfor x in item:\r\n\t\t#Check iterable\r\n\t\tif isinstance(x,list):\r\n\t\t\tnext_branches[-1] = next_branches[-1] + 1\r\n\t\t\titem_tags.append(GetTagRecursive(x, next_branches))\r\n\t\telse:\r\n\t\t\tst = str(current_branch[0])\r\n\t\t\tfor i in current_branch[1:]:\r\n\t\t\t\tst += \".\" + str(i)\r\n\t\t\titem_tags.append(st)\r\n\treturn item_tags\t\r\n\t\r\n\r\nblobs = GetTagRecursive(dataEnteringNode, [number])\r\nfor x in blobs:\r\n\toutput.append(x)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = output",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "8db4076d042f44dbb596dfb7420c9557",
      "Inputs": [
        {
          "Id": "3eb64a59c9174e418451fa57460b5512",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7ba7f66e3a3f4d3bba8eb90c9f98e765",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8491f7f670fa4880bf31487ed0b1f065",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "ElementTree;\nTreeNumber;",
      "Id": "9b3601965b3b4a9394893979c46d3918",
      "Inputs": [
        {
          "Id": "f3d9d10eb8134d38b82ce226ec206a9c",
          "Name": "ElementTree",
          "Description": "ElementTree",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf91a6841a584759a40a9eda9b725e06",
          "Name": "TreeNumber",
          "Description": "TreeNumber",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "547cb56561c84643970bdf5d54ec643c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "28bdcbe8e9314515b96698880cb236b2",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "6c6e2e77af8d46f39c3b523323ec529d",
      "Inputs": [
        {
          "Id": "ad3bc26348824b859d44f73b41f9ea32",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf499bf708a143279cd85efe0f5c1b21",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "240e5afa0ea34d4597538adecc531ac0",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Ceiling@double",
      "Id": "c2785c43c16c46a29aba09a0b23abbf9",
      "Inputs": [
        {
          "Id": "85ae4e541634494e9adb89d32c23e626",
          "Name": "number",
          "Description": "Number to round up.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e442165e9fb49f79ed50208df259ccc",
          "Name": "int",
          "Description": "First integer greater than the number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the first integer greater than the number\n\nMath.Ceiling (number: double): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "7071b39974fd45c0b682b4453953013d",
      "Inputs": [
        {
          "Id": "50a4c5235dbc4f3eb54e320b4ad3cd41",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa32c39880314584b68c17b0a48d4536",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0843ed426ea2411faad3a2438ffac9b8",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "aec3fe30a9994fa5a843d672f836135e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0ba90f3d9de3402ebf82b23ef04e474d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import re\r\n\r\nlist = IN[0]\r\n\r\ndef natural_sort(l): \r\n    convert = lambda text: int(text) if text.isdigit() else text.lower() \r\n    alphanum_key = lambda key: [ convert(c) for c in re.split('([0-9]+)', key) ] \r\n    return sorted(l, key = alphanum_key)\r\n\r\nOUT = natural_sort(list)",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "cdc0c0774d4d46ee8db6f16bcbc5fff4",
      "Inputs": [
        {
          "Id": "43b6dc8cf961464a8be2d5dc139afcc2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5b36c38ee6ed4571b6b2f4215dab4d34",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "992d4c758ba6439eb9a3bee484bf2613",
      "Inputs": [
        {
          "Id": "faffb7113bf842d9a1913c1b9ed9eca1",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d8d70f7aff454945aa36a5ad1324713c",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3fdcc7be21d4a7aa1fa57b9f331479a",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "9cd07072e0ed4db0a397210a2b594f8b",
      "Inputs": [
        {
          "Id": "7cf96266a68747c1ab58ade0bc20dce2",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cded09ec1d7a4ea48c8beeef710ef2b5",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "421bfe035d6547ffb1870ede27a63991",
      "Inputs": [
        {
          "Id": "643468d3613342dd8688eb7947d73d5c",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b0e139842c694ff7a6fe7b74f1a72d15",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "59a5b459fb0a4452ab86f49bae0210bf",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "85b4aeea21f44529b706b1b2d9d9e50c",
      "Inputs": [
        {
          "Id": "6fc460130da441469c0256b12e034164",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1f38d4b1a98d4069b95b4034bf6a6635",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c8c8b18d93804b659401cf1bdc3abafb",
          "Name": "list",
          "Description": "A list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "c70a326c6e0d42fdad27a9868b891509",
      "Inputs": [
        {
          "Id": "dc6bf311be7b42ad9db3133b1f599de6",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e1be62fef87040aeb8b39a67bbb11bb9",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d8ae860c49104b468a24ec838ed71d0d",
          "Name": "list",
          "Description": "A list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Method == \"Pipe\"? [1] : [2];",
      "Id": "1211f3494e094e108928914be7771278",
      "Inputs": [
        {
          "Id": "c9666232ff4648b4b8c62a4515a40200",
          "Name": "Method",
          "Description": "Method",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "defafa92a6384f4ab47ef7a91623076c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "e6e57904210c46c5b92b7835ed52fc41",
      "Inputs": [
        {
          "Id": "4c2fb48b38864aa98f07b80cc0a7ade0",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2567d3b2a0a04cdcb863c1d78f2843c9",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb27f52780224dbc9e466e8707d89e0f",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "dc8ff24cc8694f2ca2adb2e385da9c9a",
      "Inputs": [
        {
          "Id": "30e0acfe6e2d47678761603e193b18c8",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4df556ec824447ccae8c9cf7830776d4",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ed9389a80a8741dc81fa5596fd4bd9cf",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"System Name\";",
      "Id": "cbaa3716731443cfbdd77638e5cd56e3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "71e3b34cc56e4151af1ae30992ac4c89",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "f8b7b25aa1624daa8ec5102f003d7e1e",
      "Inputs": [
        {
          "Id": "d1d52069e8904c96a34d7406d2bcc76a",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e0a171c9407e4c73980ba5f990837c7f",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0f934cedcfa449b0a0986058351f61e5",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "02d55eef55dd410da13398cf38a4f1cd",
      "Inputs": [
        {
          "Id": "6b9f3fb386c048b0af97f97d66979d19",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dd085888227845fb8d13c84f97558dec",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "98f6c49b853d410d8bb0a57c072a076e",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Category.ByName@string",
      "Id": "611cda5cc53742a98b36a4e8fa7b24cd",
      "Inputs": [
        {
          "Id": "38fc9749cfab46c390511e024f70ffb2",
          "Name": "name",
          "Description": "The built in category name.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "664a69cf0a3c4235aeb76baa66220a4c",
          "Name": "Category",
          "Description": "Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a Revit category by the built-in category name.\n\nCategory.ByName (name: string): Category"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Pipes\";",
      "Id": "13f53e15e64441898ba2f9a2e1d5c8d4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ea157f60267844f3bb98889501fbe360",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Piping Systems\";",
      "Id": "1fa2d538045942428a88c7a439c82778",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3c9580899dd842a989a2925850481c48",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Category.ByName@string",
      "Id": "414fc6fc2ed24bfa89df2556881a624c",
      "Inputs": [
        {
          "Id": "cc9ef033a8b4436eb7a06e4bb4bb1af8",
          "Name": "name",
          "Description": "The built in category name.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd4277f21382462ea0e025fee5eacb03",
          "Name": "Category",
          "Description": "Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a Revit category by the built-in category name.\n\nCategory.ByName (name: string): Category"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "b409775c-5d88-4d47-96a3-5135c775d26a",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "019666ee6a644974bf02f571ec543dc2",
      "Inputs": [
        {
          "Id": "a73d475618074bffb861c915df417515",
          "Name": "InputName",
          "Description": "string\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c566308301f24da9886b67a4adc8f813",
          "Name": "Keys_",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a69f483322bf4707bb1ba8439c70224c",
          "Name": "Values_",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0948b2e570984b80bcdec1e3e944d76b",
          "Name": "DefaultValueIndex",
          "Description": "int\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6884f0b634c0434bb305d180edf574db",
          "Name": "Sorted_optional",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd880129065940b88cee8b2470cf3b8e",
          "Name": "DropDown input",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create data for DropDown input in UI.MultiInputForm ++ . Check out www.data-shapes.net for more infos."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Select System\";",
      "Id": "73130e7aae9946939a544d7a8c678259",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e5d76fc1f6514911a44304059e16c2ee",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "3b9477d12fcc45cab61bf0087f8de06f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "331b6c4c6c2f417a94f035a1ceaf3c65",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "7804e3b4-a95a-4ca5-a391-fd9d10566b40",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "0cdf76a986974df8b26b78de6a3022e2",
      "Inputs": [
        {
          "Id": "43d974729b8a473abd7911784dfc948b",
          "Name": "InputName_",
          "Description": "string\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7174e6c260d5458bb0e2e8198c87ceaa",
          "Name": "ButtonText_",
          "Description": "string\nDefault value : \"Select Model Element(s)\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a0214f8d02574a3ca3f44e38a0236a73",
          "Name": "CategoryFilter_",
          "Description": "var[]\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5f5afa2c39704664bbfe6913ebba9166",
          "Name": "SelectSingleElement_",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2f28294b02fd4fac814a00183b50cd4c",
          "Name": "SelectModelElements input",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a Revit element selection input for UI.MultipleInputForm++ . Check out www.data-shapes.net for more infos!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Select Pipe\";\n\"Select\";",
      "Id": "72d0f1e9514d4d4d89bb178f8dc03a55",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b3384a1c6c9548a384ff0a3837254bbc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00c874937b41439a9a54418f70b26402",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "157fcff531804686a251704c618b095c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fe9e1981f07849e8a2f35ddda9f321d9",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "557b8803-4f27-44c8-ac3d-c6d8439c1e51",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "3b0689dbed90421da1b2eb9d4c6b66d6",
      "Inputs": [
        {
          "Id": "ba35d37f5f14480fa6aa03977853de11",
          "Name": "Options_",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "23d9672cdb4b4d9aa7a689a3bc1860a9",
          "Name": "InputGroups_by_Option",
          "Description": "var[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d118b556e4214dfa95961f4ed58942a2",
          "Name": "DefaultOptionIndex",
          "Description": "int\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "892cd6285abb4d2da67dc3ffff7b5062",
          "Name": "ConditionalInput Data ",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Allows to create inputs that are enabled/disabled by a condition dor UI.MultipleInputForm++. "
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"Pipe\",\"System\"];",
      "Id": "15d20d94bf304cd2977b882c431f5d71",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "52de9629942949e8894b737ade990376",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "928e40a7-91ac-45c3-8d59-4d899fc49b83",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "28be17d1c0a1428f87547b48930d9298",
      "Inputs": [
        {
          "Id": "197f1e1e59484bae948b714a5851d03d",
          "Name": "InputName",
          "Description": "string\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d02ed7a216ee496e95dda373485ab4e1",
          "Name": "DefaultText",
          "Description": "string\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "faf5e70f96fb403da869154f9fc7137e",
          "Name": "IsNumberEntry",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7495df87452d4640b4c4dcbaa2e4ad94",
          "Name": "TextBox input",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create Data for TextBox input in UI.MultipleInputForm ++ . Check out www.data-shapes.net for more informations"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "7877475cb7e84e94bdce88ab3f180f31",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1483e146e1d54a309a2f2ae2ae938ef0",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Choose Number\";",
      "Id": "6c176b576dca48b9966efae264abb31c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7bf4a68a78da4063afb47b6844194d18",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "9fbd05c0-ec1f-4bd3-bf37-969a1552eab8",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "eb375f132f604a42bce751e93eb5c4b4",
      "Inputs": [
        {
          "Id": "9e3f503a9a994612be2acc5d23d213c2",
          "Name": "Description_optional",
          "Description": "string\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "955988e75560494886e5a2fc5b42a26d",
          "Name": "Logo_optional",
          "Description": "var\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8cf512b33e2c47cdb4286b3132538d4e",
          "Name": "ButtonText_optional",
          "Description": "string\nDefault value : \"Set Values\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "910466e746934dc2b6aaa1a5c8004b38",
          "Name": "Inputs",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3ee9481d99b94cae9e75c17baae072d1",
          "Name": "Toggle",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3f23a53a88e94858a8b97c5031ae54b7",
          "Name": "LinkToHelp_optional",
          "Description": "string\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c163849b44f4ade8238752f449efc74",
          "Name": "CancelButtonText_optional",
          "Description": " Cancel button will only be displayed if a label text is entered here\n\nstring\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4fbbd4c58a9a436e8cfa3cb3b27d7d11",
          "Name": "MaxHeight_optional",
          "Description": "int\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0372770975e4446fb2739923100403b9",
          "Name": "Width_optional",
          "Description": "int\nDefault value : 400",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d21487abe94b423397417ae6ce3ad447",
          "Name": "LabelWidth_optional",
          "Description": "int\nDefault value : 140",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b386e87e3af49af8b88a6b1772a62e7",
          "Name": "User Inputs",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4af184bd75ba4ccba1b226cdfe9b1558",
          "Name": "Was Run ",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6f3261209e7f46dea5556d9f08e68a27",
          "Name": "Was Cancelled",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a form with multiple inputs. \r\nsee www.data-shapes.net for tutorials and infos!"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "f084f6ba488b42918c9de1182048c377",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8295b1a0b33640e08c87de7ba1b532cb",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Set Foul Drainage System Number\";\nnull;\n\"Proceed\";\n\"Cancel\";\n800;\n700;\n300;",
      "Id": "7ee6268c170d40e49266248947eba39f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "016b3ab94e174333aea3d2fadcc99ddb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2ddbc04dcc94b49b9dc918009c3cda3",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e8fc8b032e3745a596c0805a25d21531",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7d3868e62d1c448091a11073d0c9dee6",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "385104659f214ad89d30d987796d4858",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "163b113c760e4d67850bc724167f0e27",
          "Name": "",
          "Description": "Value of expression at line 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cbc3f829831a4674bd6c77ed187d4dd0",
          "Name": "",
          "Description": "Value of expression at line 7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    }
  ],
  "Connectors": [
    {
      "Start": "7e0c71a4240347d0b5f7411b5574f471",
      "End": "7e2b219552a948bf80ce72cd80b1736e",
      "Id": "a091c02736fc4363bace7d2ae57b163d",
      "IsHidden": "False"
    },
    {
      "Start": "541c2e1bc92740d29d28805fe8978e17",
      "End": "649b2634433c4b109ea374b4704afc64",
      "Id": "b2306065def94beeaf6d68de68d7ad89",
      "IsHidden": "False"
    },
    {
      "Start": "f9590aec3ecc403f9e41ec8e72fe456b",
      "End": "34dcf02086de4c9f8034f98b18489287",
      "Id": "00906f6977144c5d95fd94195cdbd884",
      "IsHidden": "False"
    },
    {
      "Start": "b901bbf4eadb42da8844c8d8f63f8597",
      "End": "ff75bd914fe04a368e052c517ee7af66",
      "Id": "b854a3e1638f4b4197f11b5cca63384b",
      "IsHidden": "False"
    },
    {
      "Start": "959f94d300224c5c98c512ca6e33fed8",
      "End": "1cf32f3d288f464a8d6434adc9ffd27c",
      "Id": "367ae8e484cc4fb4bb47963e44063cc0",
      "IsHidden": "False"
    },
    {
      "Start": "bf468bf97d9a4bb4ab43e9d7043ebbbf",
      "End": "bc5d660e0768475e87cd924870ed109e",
      "Id": "e77a5608b376495083ae25eb21267989",
      "IsHidden": "False"
    },
    {
      "Start": "bf468bf97d9a4bb4ab43e9d7043ebbbf",
      "End": "c5946c6e64b540428dc31901ce8d6f5e",
      "Id": "d48b6e6a4eef4679928171fad6f40585",
      "IsHidden": "False"
    },
    {
      "Start": "336c90898c3641878689a9241b391136",
      "End": "0ead15d95c574016a41db7ad35506775",
      "Id": "1da319e10a2d4780b557fb07b6691c11",
      "IsHidden": "False"
    },
    {
      "Start": "9c238cfb5b4c45dfb95cf11217148964",
      "End": "ac201a556c124de4bec0f70396cd5550",
      "Id": "bd436ea9a5884edd92b9175dd84a3d05",
      "IsHidden": "False"
    },
    {
      "Start": "b05c3717c5534942b725cd1bfc0a801c",
      "End": "73907943b9d9490bade771bb70ad6726",
      "Id": "3b9ec502a47c4852a29f9e470e62abaa",
      "IsHidden": "False"
    },
    {
      "Start": "5f527e2aff134f61bd2b38f98001604e",
      "End": "b7e37ad3931c488e99eac80f3a363cfa",
      "Id": "efdcac1910334351b3207f30b0bc88bd",
      "IsHidden": "False"
    },
    {
      "Start": "4f81644cf269415ba23afd857c768ae0",
      "End": "e512bc2ef81f49f89580664ab8e88cc6",
      "Id": "8c4685d3170e44989db6037ee46aeb2d",
      "IsHidden": "False"
    },
    {
      "Start": "4f81644cf269415ba23afd857c768ae0",
      "End": "a82585e30755400cb2083ff50cae54ea",
      "Id": "dfde5479a0ae430bb0ab4d41f5e64bd0",
      "IsHidden": "False"
    },
    {
      "Start": "0b2cb20580e8477ea8583ed8eb74c17f",
      "End": "c162cac2c9f44ac18fbe55fe9772a784",
      "Id": "b5007c4e6ce64f3db398be2660201133",
      "IsHidden": "False"
    },
    {
      "Start": "f08e4e2b5d3f49f49d1934fa12cf93ae",
      "End": "ca8a15e957514ca78d3f9e74b565a16e",
      "Id": "44a060baeaad41e69167a38b034a9531",
      "IsHidden": "False"
    },
    {
      "Start": "f08e4e2b5d3f49f49d1934fa12cf93ae",
      "End": "f00bcf2a58bb4d67b848db8389f68573",
      "Id": "a47fff84cebb4c19bdc54de84aa6e030",
      "IsHidden": "False"
    },
    {
      "Start": "2d045ae322bc41e7bb59aee5eb48e1b7",
      "End": "85ae4e541634494e9adb89d32c23e626",
      "Id": "88706a74787041b1bed64f5aa1b4def2",
      "IsHidden": "False"
    },
    {
      "Start": "7185709f5a084694a279b10078b3167f",
      "End": "7cf96266a68747c1ab58ade0bc20dce2",
      "Id": "d63c7e2d980f4b338ce9d93b494adea1",
      "IsHidden": "False"
    },
    {
      "Start": "7185709f5a084694a279b10078b3167f",
      "End": "643468d3613342dd8688eb7947d73d5c",
      "Id": "46090d890ac448129b9116ac530b7a14",
      "IsHidden": "False"
    },
    {
      "Start": "7d4dab77c37e438f9954e350caa97d7d",
      "End": "179551541b484c4a92df8fc43951840d",
      "Id": "0e4f4be60d704068866fb8113dbf8c74",
      "IsHidden": "False"
    },
    {
      "Start": "095421e791f44b0185707913d47d79ab",
      "End": "7c8972a3a1ed42d59f4c422461acfa04",
      "Id": "c4ca3fa01c384fdcbb3885a74a3f5c91",
      "IsHidden": "False"
    },
    {
      "Start": "57628a7d9aa24e589988d0d4abfe1f98",
      "End": "0718f329745c4a9db69f70737f31c598",
      "Id": "626e7932d9c94abdb2cffb0a889bd3c0",
      "IsHidden": "False"
    },
    {
      "Start": "764559ed85aa47c2b28f53d62fab227c",
      "End": "a1810095159d49ac964f7953d5a85778",
      "Id": "ba746f8275d2499bbb062bd9dfb09043",
      "IsHidden": "False"
    },
    {
      "Start": "d790f95fc1404730a86d8f78c7097579",
      "End": "e75cc34bc91d4d7b935875c7658a47b0",
      "Id": "412327444c0f418cbf18d7f9d98ea8f6",
      "IsHidden": "False"
    },
    {
      "Start": "998fcb1237cb4562b6e2f91994ec1026",
      "End": "5caea4754da44b71b03b714d930e0f54",
      "Id": "042ef6e2e84d4d41ae21078e37b3d095",
      "IsHidden": "False"
    },
    {
      "Start": "998fcb1237cb4562b6e2f91994ec1026",
      "End": "67736fd8afde47e7912db363275a5fbf",
      "Id": "de26a0ce7395471a8720b8322ee1bd03",
      "IsHidden": "False"
    },
    {
      "Start": "97738e0a939a458f87d522d00ddcbf26",
      "End": "50a4c5235dbc4f3eb54e320b4ad3cd41",
      "Id": "f5d16280d68a416783c0400ba4daad05",
      "IsHidden": "False"
    },
    {
      "Start": "fff72d48f2ff4050b2758c0e0ec33d45",
      "End": "2481cfb06206480db5767f43440513b2",
      "Id": "fc50c88945d94676b9c9aec18ed620de",
      "IsHidden": "False"
    },
    {
      "Start": "56938ecaa636476f96d6100fa9accbce",
      "End": "fac73fd6b4b64cd48419bdf3252508e1",
      "Id": "3dd255b9e6f446cbad33ed40b7605b41",
      "IsHidden": "False"
    },
    {
      "Start": "a32b7c250e304ef6a8752a231cc868e5",
      "End": "d840269409c84258bcc7b90a480fdb08",
      "Id": "0a2a13c9ff27400c89475442c4d8ed2f",
      "IsHidden": "False"
    },
    {
      "Start": "05ee9cf8bfd94b96883793e13579c44f",
      "End": "353640572a6e4752b617f43c0c4b5ede",
      "Id": "d0474da09ae348c7b285618dc2e408eb",
      "IsHidden": "False"
    },
    {
      "Start": "ed65e81d6cb14485961e789a2e5140f3",
      "End": "ac0c1f677f82499fbef92bc676a0e97d",
      "Id": "15e1dd557b7d49618c1f10e52190a191",
      "IsHidden": "False"
    },
    {
      "Start": "8491f7f670fa4880bf31487ed0b1f065",
      "End": "946a807c5af94e779788f616f1354281",
      "Id": "be789561586342b39cf33732350f3d46",
      "IsHidden": "False"
    },
    {
      "Start": "547cb56561c84643970bdf5d54ec643c",
      "End": "3eb64a59c9174e418451fa57460b5512",
      "Id": "a068bdbefcfe40e98adb80a2b539a111",
      "IsHidden": "False"
    },
    {
      "Start": "28bdcbe8e9314515b96698880cb236b2",
      "End": "7ba7f66e3a3f4d3bba8eb90c9f98e765",
      "Id": "0d7b8257c06a40e1a80e6107d0890bb7",
      "IsHidden": "False"
    },
    {
      "Start": "240e5afa0ea34d4597538adecc531ac0",
      "End": "df7fde13c26649e4afcffa6ad2afdc1d",
      "Id": "113fa4a7df5a415aa75b03b1c9de6bfa",
      "IsHidden": "False"
    },
    {
      "Start": "240e5afa0ea34d4597538adecc531ac0",
      "End": "566301d8549949919081db48df61b22f",
      "Id": "5355919d0a6547bbb39a6bad3ac91af2",
      "IsHidden": "False"
    },
    {
      "Start": "4e442165e9fb49f79ed50208df259ccc",
      "End": "cf91a6841a584759a40a9eda9b725e06",
      "Id": "063084d0ecdf4b528446d1c818e74c7e",
      "IsHidden": "False"
    },
    {
      "Start": "0843ed426ea2411faad3a2438ffac9b8",
      "End": "f3d9d10eb8134d38b82ce226ec206a9c",
      "Id": "d3934ef36c4e407eba678f282f028bdd",
      "IsHidden": "False"
    },
    {
      "Start": "0843ed426ea2411faad3a2438ffac9b8",
      "End": "ad3bc26348824b859d44f73b41f9ea32",
      "Id": "b84cbefcf2784b5fbad5a08dad9d83d3",
      "IsHidden": "False"
    },
    {
      "Start": "0ba90f3d9de3402ebf82b23ef04e474d",
      "End": "fa32c39880314584b68c17b0a48d4536",
      "Id": "796a376692d549c78ff2e53d9c8b2dcb",
      "IsHidden": "False"
    },
    {
      "Start": "5b36c38ee6ed4571b6b2f4215dab4d34",
      "End": "d8d70f7aff454945aa36a5ad1324713c",
      "Id": "0c6dce09e2fe4e4485d7355d29842f3a",
      "IsHidden": "False"
    },
    {
      "Start": "5b36c38ee6ed4571b6b2f4215dab4d34",
      "End": "d1d52069e8904c96a34d7406d2bcc76a",
      "Id": "e85c574ace2c4fdb915490f5ccbd9fea",
      "IsHidden": "False"
    },
    {
      "Start": "5b36c38ee6ed4571b6b2f4215dab4d34",
      "End": "c566308301f24da9886b67a4adc8f813",
      "Id": "a5cb5fd14f1d4d648a7f9bfbee47c3cc",
      "IsHidden": "False"
    },
    {
      "Start": "e3fdcc7be21d4a7aa1fa57b9f331479a",
      "End": "b0e139842c694ff7a6fe7b74f1a72d15",
      "Id": "e355ef7348374b59924839f0d15a6aeb",
      "IsHidden": "False"
    },
    {
      "Start": "cded09ec1d7a4ea48c8beeef710ef2b5",
      "End": "43b6dc8cf961464a8be2d5dc139afcc2",
      "Id": "32ef467a1b264107a63adfc4f34265f8",
      "IsHidden": "False"
    },
    {
      "Start": "cded09ec1d7a4ea48c8beeef710ef2b5",
      "End": "faffb7113bf842d9a1913c1b9ed9eca1",
      "Id": "c42eee5567dc46aca8c1a4a0cd06bea8",
      "IsHidden": "False"
    },
    {
      "Start": "59a5b459fb0a4452ab86f49bae0210bf",
      "End": "6b9f3fb386c048b0af97f97d66979d19",
      "Id": "63e4c3daccb642b1bd648d8074e262dc",
      "IsHidden": "False"
    },
    {
      "Start": "59a5b459fb0a4452ab86f49bae0210bf",
      "End": "a69f483322bf4707bb1ba8439c70224c",
      "Id": "1afe53a6186a4aee960d2a70a13e6da2",
      "IsHidden": "False"
    },
    {
      "Start": "c8c8b18d93804b659401cf1bdc3abafb",
      "End": "23d9672cdb4b4d9aa7a689a3bc1860a9",
      "Id": "27ac2abaf99e46d9b60f13e275d1287f",
      "IsHidden": "False"
    },
    {
      "Start": "d8ae860c49104b468a24ec838ed71d0d",
      "End": "910466e746934dc2b6aaa1a5c8004b38",
      "Id": "5efe307418cd481ebe6685bfed2537f4",
      "IsHidden": "False"
    },
    {
      "Start": "defafa92a6384f4ab47ef7a91623076c",
      "End": "2567d3b2a0a04cdcb863c1d78f2843c9",
      "Id": "e4c195aa681b43bda9eca326ec3fe4d7",
      "IsHidden": "False"
    },
    {
      "Start": "eb27f52780224dbc9e466e8707d89e0f",
      "End": "30e0acfe6e2d47678761603e193b18c8",
      "Id": "3222298cd0034399859de7ebc2d1045a",
      "IsHidden": "False"
    },
    {
      "Start": "ed9389a80a8741dc81fa5596fd4bd9cf",
      "End": "e0a171c9407e4c73980ba5f990837c7f",
      "Id": "5204792973b04ae4996c8ca3173d1183",
      "IsHidden": "False"
    },
    {
      "Start": "71e3b34cc56e4151af1ae30992ac4c89",
      "End": "4df556ec824447ccae8c9cf7830776d4",
      "Id": "92140bed51314b7db66e3321953a17d8",
      "IsHidden": "False"
    },
    {
      "Start": "0f934cedcfa449b0a0986058351f61e5",
      "End": "dd085888227845fb8d13c84f97558dec",
      "Id": "c38c8566ac1e4e589676c216bee878e1",
      "IsHidden": "False"
    },
    {
      "Start": "98f6c49b853d410d8bb0a57c072a076e",
      "End": "ebb12ff593e646fc835e2d228a4701e9",
      "Id": "f00883f97c514480a0006ebdebf7f13e",
      "IsHidden": "False"
    },
    {
      "Start": "664a69cf0a3c4235aeb76baa66220a4c",
      "End": "b141c52c788a4a73874f48f214e0a5de",
      "Id": "ac78c9eb4df14c85935bd6fb415eaf91",
      "IsHidden": "False"
    },
    {
      "Start": "ea157f60267844f3bb98889501fbe360",
      "End": "cc9ef033a8b4436eb7a06e4bb4bb1af8",
      "Id": "1527250c660248609f272855a825e089",
      "IsHidden": "False"
    },
    {
      "Start": "3c9580899dd842a989a2925850481c48",
      "End": "38fc9749cfab46c390511e024f70ffb2",
      "Id": "b334148e71bd43ac8a08f0e5bbf69621",
      "IsHidden": "False"
    },
    {
      "Start": "dd4277f21382462ea0e025fee5eacb03",
      "End": "a0214f8d02574a3ca3f44e38a0236a73",
      "Id": "b98242837d1e4ec49ccd57f2ba4a1899",
      "IsHidden": "False"
    },
    {
      "Start": "bd880129065940b88cee8b2470cf3b8e",
      "End": "1f38d4b1a98d4069b95b4034bf6a6635",
      "Id": "6169634765de45e7b9f9fedd18b2fce2",
      "IsHidden": "False"
    },
    {
      "Start": "e5d76fc1f6514911a44304059e16c2ee",
      "End": "a73d475618074bffb861c915df417515",
      "Id": "b947331d8cf94866aacc2bd6ced5d896",
      "IsHidden": "False"
    },
    {
      "Start": "331b6c4c6c2f417a94f035a1ceaf3c65",
      "End": "6884f0b634c0434bb305d180edf574db",
      "Id": "58269c86dcef40bca482d1f97a9c9304",
      "IsHidden": "False"
    },
    {
      "Start": "2f28294b02fd4fac814a00183b50cd4c",
      "End": "6fc460130da441469c0256b12e034164",
      "Id": "057bf2ac2d0d4078bcb47448231486b1",
      "IsHidden": "False"
    },
    {
      "Start": "b3384a1c6c9548a384ff0a3837254bbc",
      "End": "43d974729b8a473abd7911784dfc948b",
      "Id": "5b46fd2270254fee850897a1ae09dc3e",
      "IsHidden": "False"
    },
    {
      "Start": "00c874937b41439a9a54418f70b26402",
      "End": "7174e6c260d5458bb0e2e8198c87ceaa",
      "Id": "cd8db953bc9844d28ba6e6b0a12395d8",
      "IsHidden": "False"
    },
    {
      "Start": "fe9e1981f07849e8a2f35ddda9f321d9",
      "End": "5f5afa2c39704664bbfe6913ebba9166",
      "Id": "a76172f841914d8da06a6679697de4b5",
      "IsHidden": "False"
    },
    {
      "Start": "892cd6285abb4d2da67dc3ffff7b5062",
      "End": "dc6bf311be7b42ad9db3133b1f599de6",
      "Id": "8cfb2265ff5a4622ac375a17d502ebff",
      "IsHidden": "False"
    },
    {
      "Start": "52de9629942949e8894b737ade990376",
      "End": "ba35d37f5f14480fa6aa03977853de11",
      "Id": "5334818e5aa54f10a289a51a30567f80",
      "IsHidden": "False"
    },
    {
      "Start": "7495df87452d4640b4c4dcbaa2e4ad94",
      "End": "e1be62fef87040aeb8b39a67bbb11bb9",
      "Id": "ae0d90cee6d5494a86779da71f718366",
      "IsHidden": "False"
    },
    {
      "Start": "1483e146e1d54a309a2f2ae2ae938ef0",
      "End": "faf5e70f96fb403da869154f9fc7137e",
      "Id": "90c3c291d00f48a780ab112f002e102c",
      "IsHidden": "False"
    },
    {
      "Start": "7bf4a68a78da4063afb47b6844194d18",
      "End": "197f1e1e59484bae948b714a5851d03d",
      "Id": "f30476c1ca6046c0a556fe0e31d1860f",
      "IsHidden": "False"
    },
    {
      "Start": "6b386e87e3af49af8b88a6b1772a62e7",
      "End": "c9666232ff4648b4b8c62a4515a40200",
      "Id": "01559b425cb84607b02da08e78127878",
      "IsHidden": "False"
    },
    {
      "Start": "6b386e87e3af49af8b88a6b1772a62e7",
      "End": "81954d4a8c9f41669ee81763321450db",
      "Id": "95ef462bd45f4f02aeb8cddf8a2f8a15",
      "IsHidden": "False"
    },
    {
      "Start": "6b386e87e3af49af8b88a6b1772a62e7",
      "End": "4c2fb48b38864aa98f07b80cc0a7ade0",
      "Id": "37e5bef476b24731b1228c2d9882e798",
      "IsHidden": "False"
    },
    {
      "Start": "8295b1a0b33640e08c87de7ba1b532cb",
      "End": "3ee9481d99b94cae9e75c17baae072d1",
      "Id": "4d2038290d3d4a53afee2e3915b9ddb0",
      "IsHidden": "False"
    },
    {
      "Start": "016b3ab94e174333aea3d2fadcc99ddb",
      "End": "9e3f503a9a994612be2acc5d23d213c2",
      "Id": "2018df435515433db15b32eeba83bf27",
      "IsHidden": "False"
    },
    {
      "Start": "d2ddbc04dcc94b49b9dc918009c3cda3",
      "End": "955988e75560494886e5a2fc5b42a26d",
      "Id": "6e9c5803e9ea4e0b81de1aef5ebd713a",
      "IsHidden": "False"
    },
    {
      "Start": "e8fc8b032e3745a596c0805a25d21531",
      "End": "8cf512b33e2c47cdb4286b3132538d4e",
      "Id": "1a6fbaa72a9e47a2b7fe34fd3fcc12dd",
      "IsHidden": "False"
    },
    {
      "Start": "7d3868e62d1c448091a11073d0c9dee6",
      "End": "9c163849b44f4ade8238752f449efc74",
      "Id": "c1a7d617879c4bc985c3571d97bc2e36",
      "IsHidden": "False"
    },
    {
      "Start": "385104659f214ad89d30d987796d4858",
      "End": "4fbbd4c58a9a436e8cfa3cb3b27d7d11",
      "Id": "239d5a32a0cf4e39b8cb67c6f2d5bd73",
      "IsHidden": "False"
    },
    {
      "Start": "163b113c760e4d67850bc724167f0e27",
      "End": "0372770975e4446fb2739923100403b9",
      "Id": "8a22d4883e9f4b52827bebc0410170a1",
      "IsHidden": "False"
    },
    {
      "Start": "cbc3f829831a4674bd6c77ed187d4dd0",
      "End": "d21487abe94b423397417ae6ce3ad447",
      "Id": "b498d86ac2ff4f2ba85db92bf93659d2",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "b409775c-5d88-4d47-96a3-5135c775d26a",
    "7804e3b4-a95a-4ca5-a391-fd9d10566b40",
    "557b8803-4f27-44c8-ac3d-c6d8439c1e51",
    "928e40a7-91ac-45c3-8d59-4d899fc49b83",
    "9fbd05c0-ec1f-4bd3-bf37-969a1552eab8"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Data-Shapes",
      "Version": "2022.2.103",
      "ReferenceType": "Package",
      "Nodes": [
        "019666ee6a644974bf02f571ec543dc2",
        "0cdf76a986974df8b26b78de6a3022e2",
        "3b0689dbed90421da1b2eb9d4c6b66d6",
        "28be17d1c0a1428f87547b48930d9298",
        "eb375f132f604a42bce751e93eb5c4b4"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "2.0",
      "Data": {}
    }
  ],
  "Author": "None provided",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -3124.8431898582576,
      "EyeY": 19076.490711846825,
      "EyeZ": 19035.260032936654,
      "LookX": -7040.8858425010649,
      "LookY": -3331.2161584073438,
      "LookZ": -24376.744774100636,
      "UpX": 0.023702590929326871,
      "UpY": 0.99634529619089218,
      "UpZ": 0.0820624027279923
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Network evaluator",
        "ShowGeometry": true,
        "Id": "741b8db565c2402db7daabd08688e034",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8890.3602629347988,
        "Y": 5325.04225834677
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "072cff5cd25d463ba7383d9e5a9bda0b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8591.6696356021239,
        "Y": 5326.4005615146052
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "862022e3e9624c1da7f2f8f7ace1c876",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8332.9850295959513,
        "Y": 5327.0997195706586
      },
      {
        "Name": "List.MinimumItem",
        "ShowGeometry": true,
        "Id": "1524d320b2794f9ab13d3bb61caa29ff",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7851.04424778506,
        "Y": 5265.1996112192928
      },
      {
        "Name": "List.AllIndicesOf",
        "ShowGeometry": true,
        "Id": "30b18c11f2e44a238ef24586aa68f679",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8093.9165694487674,
        "Y": 5180.1341307546681
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "9847fa9577c446cf8548deb8be618f12",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7469.5205057775966,
        "Y": 5179.9717968221194
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "b309d44e0e254ae0bd5230e94e5c49a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7196.9896561494734,
        "Y": 5083.1884873563176
      },
      {
        "Name": "String from Object",
        "ShowGeometry": true,
        "Id": "491b1033204442939af888f485007a1a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6387.8495476327271,
        "Y": 5182.3435541238214
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "1fa9323ced9f4739bab2e04b67701d6e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6637.8203719871344,
        "Y": 5182.9447525839914
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "bbdf05e9c5cc41b2a08322a0a0c77423",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6385.761003457952,
        "Y": 5408.4110148592272
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "6d9406cabacd40918a038ab3d22deac7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6897.9732488256859,
        "Y": 5327.1264704415
      },
      {
        "Name": "Element.GetCategory",
        "ShowGeometry": true,
        "Id": "76753667f0c54435b01236ac8f8ee67d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6115.1667726590376,
        "Y": 5181.9774016641441
      },
      {
        "Name": "Python: Pipe Network",
        "ShowGeometry": true,
        "Id": "9befcabe9f0544bbbd9c9c69e6512308",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5787.76670369068,
        "Y": 5327.6908290087158
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "c4e8c475ff6e402191fab867512f5dbb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3282.754957823694,
        "Y": 3789.7459209687154
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "fb359cef925046c4acdd7c6df0aae2da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1533.7808468906478,
        "Y": 4941.4907519444669
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "6dcfb5ba15c74e41b3eae92bf39a27d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1787.0779716328759,
        "Y": 4701.2856059094756
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "14eadfb5b1f44de99addf4a55f760cc2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2171.8235508232974,
        "Y": 4701.3503313681658
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ed7150baf51d46a896d81b6239b6c86e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1994.068715565895,
        "Y": 4875.7096972646668
      },
      {
        "Name": "Element.ElementType",
        "ShowGeometry": true,
        "Id": "87748a604995420d83b7373bda163ac2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2465.0701686243992,
        "Y": 4700.3893098695025
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "f8b899350d9c4cf99a1efd15bec560c0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2478.9101001920903,
        "Y": 4861.3847296361546
      },
      {
        "Name": "All Elements of Category",
        "ShowGeometry": true,
        "Id": "e9c5528e536745e587269f8a50897cd0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2791.7977953803365,
        "Y": 4937.5150707063831
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "d81d37d533604842ab1f16ed0a8eac67",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9157.3520894439043,
        "Y": 5324.4918577384633
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "aa54890d5d2c40d7b8e79f2eba380665",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10164.031968116922,
        "Y": 3208.1550026874324
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": true,
        "Id": "110cedca1834491592e4ee421147fea2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10489.133529630035,
        "Y": 3322.7474313319531
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "f66db0919aea47f1aee1f0df637ac861",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9543.16913589281,
        "Y": 3469.71182735368
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "df5b69d2846047bf9a0e4228607ff535",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9227.4509701090119,
        "Y": 3576.7458526704163
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "2e609d0c44d34684b12f3333795a3b5e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9978.6304412447589,
        "Y": 3643.6145517309947
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "ffa04dda9505454b831da12dcc1613d1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9700.36913589281,
        "Y": 3768.31751235842
      },
      {
        "Name": "Get Tag",
        "ShowGeometry": true,
        "Id": "8db4076d042f44dbb596dfb7420c9557",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7698.3138384562244,
        "Y": 3760.8466563962079
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "9b3601965b3b4a9394893979c46d3918",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7320.8706270672465,
        "Y": 3767.7810149482571
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "6c6e2e77af8d46f39c3b523323ec529d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9253.5083604501178,
        "Y": 3322.2440391746954
      },
      {
        "Name": "Math.Ceiling",
        "ShowGeometry": true,
        "Id": "c2785c43c16c46a29aba09a0b23abbf9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3665.7464204938351,
        "Y": 3789.979617815568
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "7071b39974fd45c0b682b4453953013d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9508.5365217808358,
        "Y": 5326.3242658675908
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "aec3fe30a9994fa5a843d672f836135e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9306.1577995493353,
        "Y": 5472.1383995233837
      },
      {
        "Name": "Python to sort strings with numbers",
        "ShowGeometry": true,
        "Id": "cdc0c0774d4d46ee8db6f16bcbc5fff4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -855.08548548643193,
        "Y": 4443.18029814881
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "992d4c758ba6439eb9a3bee484bf2613",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -391.12056889203564,
        "Y": 4571.6957923966456
      },
      {
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Id": "9cd07072e0ed4db0a397210a2b594f8b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1124.6611092116418,
        "Y": 4575.6483659762089
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "421bfe035d6547ffb1870ede27a63991",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -96.612530181740112,
        "Y": 4936.9141951462443
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "85b4aeea21f44529b706b1b2d9d9e50c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 695.74233208614692,
        "Y": 3367.8803704528791
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "c70a326c6e0d42fdad27a9868b891509",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1701.9184030199417,
        "Y": 3445.8883890010875
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "1211f3494e094e108928914be7771278",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3294.5971355501629,
        "Y": 3146.9717249960208
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "e6e57904210c46c5b92b7835ed52fc41",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3843.6988473549709,
        "Y": 3354.4928734675841
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "dc8ff24cc8694f2ca2adb2e385da9c9a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4388.5700970554717,
        "Y": 3355.9420112125508
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "cbaa3716731443cfbdd77638e5cd56e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4157.0210356341868,
        "Y": 3469.4317691885567
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "f8b7b25aa1624daa8ec5102f003d7e1e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5207.8101656704021,
        "Y": 4452.6663013367715
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "02d55eef55dd410da13398cf38a4f1cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5505.8279563590349,
        "Y": 4952.5322015032943
      },
      {
        "Name": "Category.ByName",
        "ShowGeometry": true,
        "Id": "611cda5cc53742a98b36a4e8fa7b24cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3032.7295540584305,
        "Y": 4822.3329277539633
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "13f53e15e64441898ba2f9a2e1d5c8d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -534.90469843878418,
        "Y": 3431.9210016770835
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "1fa2d538045942428a88c7a439c82778",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3286.9872338713103,
        "Y": 4821.8922742686891
      },
      {
        "Name": "Category.ByName",
        "ShowGeometry": true,
        "Id": "414fc6fc2ed24bfa89df2556881a624c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -311.77088214646164,
        "Y": 3431.7442673667265
      },
      {
        "Name": "DropDown Data",
        "ShowGeometry": true,
        "Id": "019666ee6a644974bf02f571ec543dc2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 39.500852170753205,
        "Y": 4019.9580993611116
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "73130e7aae9946939a544d7a8c678259",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -305.91470567978831,
        "Y": 3892.5513954390917
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "3b9477d12fcc45cab61bf0087f8de06f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -291.48869303767651,
        "Y": 4034.3204905765911
      },
      {
        "Name": "SelectModelElements Data",
        "ShowGeometry": true,
        "Id": "0cdf76a986974df8b26b78de6a3022e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 28.870699708911616,
        "Y": 3365.1630740933997
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "72d0f1e9514d4d4d89bb178f8dc03a55",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -289.37088214646155,
        "Y": 3243.803448789251
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "157fcff531804686a251704c618b095c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -291.77088214646164,
        "Y": 3621.8329574076311
      },
      {
        "Name": "ConditionalInput Data",
        "ShowGeometry": true,
        "Id": "3b0689dbed90421da1b2eb9d4c6b66d6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1070.0955579104998,
        "Y": 3135.8320737403224
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "15d20d94bf304cd2977b882c431f5d71",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 637.14428714087876,
        "Y": 3135.6772020117069
      },
      {
        "Name": "TextBox Data",
        "ShowGeometry": true,
        "Id": "28be17d1c0a1428f87547b48930d9298",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1161.1143391711419,
        "Y": 3700.1755553157482
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "7877475cb7e84e94bdce88ab3f180f31",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 882.99123395554693,
        "Y": 3867.5027333000344
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "6c176b576dca48b9966efae264abb31c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 869.391233955547,
        "Y": 3619.0330113380342
      },
      {
        "Name": "MultipleInputForm ++",
        "ShowGeometry": true,
        "Id": "eb375f132f604a42bce751e93eb5c4b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2593.234576702393,
        "Y": 3347.15645484217
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "f084f6ba488b42918c9de1182048c377",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2226.1882168645166,
        "Y": 3606.7049405330977
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "7ee6268c170d40e49266248947eba39f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2066.0030031624792,
        "Y": 3173.2952771870773
      }
    ],
    "Annotations": [
      {
        "Id": "5ac0919d1b8746e192bdeecd17e5416e",
        "Title": "User Input: Input Number",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c4e8c475ff6e402191fab867512f5dbb"
        ],
        "HasNestedGroups": false,
        "Left": 3272.754957823694,
        "Top": 3673.3459209687153,
        "Width": 313.59999999999991,
        "Height": 248.59999999999991,
        "FontSize": 36.0,
        "InitialTop": 3789.7459209687154,
        "InitialHeight": 145.0,
        "TextblockHeight": 106.4,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "b72d7fa4755745ad953f3b76603e190f",
        "Title": "Python to sort strings with numbers",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "cdc0c0774d4d46ee8db6f16bcbc5fff4"
        ],
        "HasNestedGroups": false,
        "Left": -865.08548548643193,
        "Top": 4355.58029814881,
        "Width": 365.2,
        "Height": 220.20000000000073,
        "FontSize": 24.0,
        "InitialTop": 4443.18029814881,
        "InitialHeight": 145.0,
        "TextblockHeight": 77.6,
        "Background": "#FFFFFF00"
      },
      {
        "Id": "90740cb207714154a1833b2a9270570a",
        "Title": "Get Only Piping Systems Containing 'Sanitary' in System Classification",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6dcfb5ba15c74e41b3eae92bf39a27d9",
          "14eadfb5b1f44de99addf4a55f760cc2",
          "ed7150baf51d46a896d81b6239b6c86e",
          "87748a604995420d83b7373bda163ac2",
          "f8b899350d9c4cf99a1efd15bec560c0",
          "fb359cef925046c4acdd7c6df0aae2da",
          "e9c5528e536745e587269f8a50897cd0",
          "611cda5cc53742a98b36a4e8fa7b24cd",
          "1fa2d538045942428a88c7a439c82778"
        ],
        "HasNestedGroups": false,
        "Left": -3296.9872338713103,
        "Top": 4641.5893098695024,
        "Width": 2008.0063869806625,
        "Height": 467.30144207496414,
        "FontSize": 24.0,
        "InitialTop": 4700.3893098695025,
        "InitialHeight": 386.10144207496433,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "b4927b08ac344e988fd67daa99de8f3a",
        "Title": "User Selection:  Selected Method",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1211f3494e094e108928914be7771278"
        ],
        "HasNestedGroups": false,
        "Left": 3284.5971355501629,
        "Top": 3030.5717249960207,
        "Width": 382.40000000000009,
        "Height": 248.59999999999991,
        "FontSize": 36.0,
        "InitialTop": 3146.9717249960208,
        "InitialHeight": 145.0,
        "TextblockHeight": 106.4,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "4195a55dfb97449b9e222bfce15d310d",
        "Title": "Set Manual System Name Parameter",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "110cedca1834491592e4ee421147fea2",
          "aa54890d5d2c40d7b8e79f2eba380665"
        ],
        "HasNestedGroups": false,
        "Left": 10154.031968116922,
        "Top": 3149.3550026874323,
        "Width": 648.30156151311348,
        "Height": 371.192428644521,
        "FontSize": 24.0,
        "InitialTop": 3208.1550026874324,
        "InitialHeight": 259.59242864452062,
        "TextblockHeight": 48.8,
        "Background": "#FFFF6347"
      },
      {
        "Id": "d45c2ade241b48eeb19468ac908e03d7",
        "Title": "Python to evaluate elements in each network and output a \r\nsublist for each branch",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "741b8db565c2402db7daabd08688e034",
          "d81d37d533604842ab1f16ed0a8eac67"
        ],
        "HasNestedGroups": false,
        "Left": 8880.3602629347988,
        "Top": 5208.0918577384637,
        "Width": 440.99182650910552,
        "Height": 249.55040060830652,
        "FontSize": 24.0,
        "InitialTop": 5324.4918577384633,
        "InitialHeight": 145.55040060830652,
        "TextblockHeight": 106.4,
        "Background": "#FFFFFF00"
      },
      {
        "Id": "6e77be4e3a384d0e8807f6bb5380b1c5",
        "Title": "Get a number for each item in a list depending on depth and sub list number",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "8db4076d042f44dbb596dfb7420c9557",
          "9b3601965b3b4a9394893979c46d3918"
        ],
        "HasNestedGroups": false,
        "Left": 7310.8706270672465,
        "Top": 3673.246656396208,
        "Width": 555.84321138897758,
        "Height": 257.134358552049,
        "FontSize": 24.0,
        "InitialTop": 3760.8466563962079,
        "InitialHeight": 151.93435855204916,
        "TextblockHeight": 77.6,
        "Background": "#FFFFFF00"
      },
      {
        "Id": "fe2e869ddad6454bb5e1a7119bff39cd",
        "Title": "Python to get all elements in network",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9befcabe9f0544bbbd9c9c69e6512308"
        ],
        "HasNestedGroups": false,
        "Left": 5777.76670369068,
        "Top": 5240.0908290087154,
        "Width": 254.80000000000018,
        "Height": 220.20000000000073,
        "FontSize": 24.0,
        "InitialTop": 5327.6908290087158,
        "InitialHeight": 145.0,
        "TextblockHeight": 77.6,
        "Background": "#FFFFFF00"
      },
      {
        "Id": "6ad9c46f47e14a0483451e0ff962ecfc",
        "Title": "Get only pipes",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1fa9323ced9f4739bab2e04b67701d6e",
          "6d9406cabacd40918a038ab3d22deac7",
          "491b1033204442939af888f485007a1a",
          "bbdf05e9c5cc41b2a08322a0a0c77423",
          "76753667f0c54435b01236ac8f8ee67d"
        ],
        "HasNestedGroups": false,
        "Left": 6105.1667726590376,
        "Top": 5123.1774016641439,
        "Width": 1037.6064761666485,
        "Height": 417.43361319508313,
        "FontSize": 24.0,
        "InitialTop": 5181.9774016641441,
        "InitialHeight": 371.43361319508313,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "e142ddb0f03e4dd1a765dda994a276aa",
        "Title": "Get lowest pipe in the system",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "072cff5cd25d463ba7383d9e5a9bda0b",
          "862022e3e9624c1da7f2f8f7ace1c876",
          "30b18c11f2e44a238ef24586aa68f679",
          "1524d320b2794f9ab13d3bb61caa29ff",
          "9847fa9577c446cf8548deb8be618f12",
          "b309d44e0e254ae0bd5230e94e5c49a8"
        ],
        "HasNestedGroups": false,
        "Left": 7186.9896561494734,
        "Top": 5024.3884873563175,
        "Width": 1603.4799794526498,
        "Height": 465.31123221434154,
        "FontSize": 24.0,
        "InitialTop": 5083.1884873563176,
        "InitialHeight": 388.911232214341,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "5ede884fe0ce460389d80d05142374d3",
        "Title": "DYNAMO COLOUR CODING LEGEND",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5e5c235af4f04c7eb1e6b0c6745329ad",
          "041bfc55adc74919892d033496637085"
        ],
        "HasNestedGroups": false,
        "Left": -3309.8370128594274,
        "Top": 3697.5833984261562,
        "Width": 1523.65449975587,
        "Height": 159.0384723043403,
        "FontSize": 24.0,
        "InitialTop": 3756.3833984261564,
        "InitialHeight": 195.83847230434003,
        "TextblockHeight": 48.8,
        "Background": "#FF848484"
      },
      {
        "Id": "b2bc5d8cf0d44d0d9906bb23683e25df",
        "Title": "Monitor",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2b9c00ceced94e03ae848db05a44c613"
        ],
        "HasNestedGroups": false,
        "Left": -2002.7761810849347,
        "Top": 3896.3763194535782,
        "Width": 218.79999999999995,
        "Height": 122.60000000000036,
        "FontSize": 24.0,
        "InitialTop": 3955.1763194535783,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "9e751c8b6a5745f0aeef9d51438685cf",
        "Title": "Conditional",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6973086066464f18b12a8fc528beb294"
        ],
        "HasNestedGroups": false,
        "Left": -2207.0529549119897,
        "Top": 3896.5634700723162,
        "Width": 189.20000000000005,
        "Height": 122.60000000000036,
        "FontSize": 24.0,
        "InitialTop": 3955.3634700723164,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFFFA500"
      },
      {
        "Id": "1406e2ac344343f2afb555bfd93b75a5",
        "Title": "Python",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b3ca54e658d24bfb86d4656b986c2c05"
        ],
        "HasNestedGroups": false,
        "Left": -2381.0792005238104,
        "Top": 3896.6375746780645,
        "Width": 158.0,
        "Height": 122.60000000000036,
        "FontSize": 24.0,
        "InitialTop": 3955.4375746780647,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFFFFF00"
      },
      {
        "Id": "d7c7c3a37403441e9abf3d56d659782b",
        "Title": "To Revit",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "bddf90ca8481479a9c98fb7a243a5620"
        ],
        "HasNestedGroups": false,
        "Left": -2571.1270018894688,
        "Top": 3895.8203486779307,
        "Width": 174.40000000000009,
        "Height": 122.60000000000036,
        "FontSize": 24.0,
        "InitialTop": 3954.6203486779309,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFFF6347"
      },
      {
        "Id": "210dad86ba244e6bba7011a563c5f12e",
        "Title": "Control",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "8f11b9ad146f42fd95e4fae93178e006"
        ],
        "HasNestedGroups": false,
        "Left": -2817.5961148645843,
        "Top": 3894.9703740434666,
        "Width": 232.40000000000009,
        "Height": 122.60000000000036,
        "FontSize": 24.0,
        "InitialTop": 3953.7703740434667,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FF90EE90"
      },
      {
        "Id": "9472d4511671499abbbde59baf41e200",
        "Title": "Input",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "30938bfa313641a8aaea40156df56726"
        ],
        "HasNestedGroups": false,
        "Left": -3065.246706469798,
        "Top": 3894.54500929053,
        "Width": 230.40000000000009,
        "Height": 122.60000000000036,
        "FontSize": 24.0,
        "InitialTop": 3953.34500929053,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFDDA0DD"
      },
      {
        "Id": "3be85588403e482195ebccb044903162",
        "Title": "Background",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b3bd16b6bcf149f999cb5ecf3c1c0c12"
        ],
        "HasNestedGroups": false,
        "Left": -3311.1468548645939,
        "Top": 3893.1753155047622,
        "Width": 230.0,
        "Height": 122.60000000000036,
        "FontSize": 24.0,
        "InitialTop": 3951.9753155047624,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "69dd938fe2cc48ffa93ea04bd417df8d",
        "Title": "User Interface",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "85b4aeea21f44529b706b1b2d9d9e50c",
          "c70a326c6e0d42fdad27a9868b891509",
          "13f53e15e64441898ba2f9a2e1d5c8d4",
          "414fc6fc2ed24bfa89df2556881a624c",
          "019666ee6a644974bf02f571ec543dc2",
          "73130e7aae9946939a544d7a8c678259",
          "3b9477d12fcc45cab61bf0087f8de06f",
          "0cdf76a986974df8b26b78de6a3022e2",
          "72d0f1e9514d4d4d89bb178f8dc03a55",
          "157fcff531804686a251704c618b095c",
          "3b0689dbed90421da1b2eb9d4c6b66d6",
          "15d20d94bf304cd2977b882c431f5d71",
          "28be17d1c0a1428f87547b48930d9298",
          "7877475cb7e84e94bdce88ab3f180f31",
          "6c176b576dca48b9966efae264abb31c",
          "eb375f132f604a42bce751e93eb5c4b4",
          "f084f6ba488b42918c9de1182048c377",
          "7ee6268c170d40e49266248947eba39f"
        ],
        "HasNestedGroups": false,
        "Left": -544.90469843878418,
        "Top": 3076.8772020117067,
        "Width": 3509.7392751411771,
        "Height": 1211.2808973494048,
        "FontSize": 24.0,
        "InitialTop": 3135.6772020117069,
        "InitialHeight": 1043.6432885648837,
        "TextblockHeight": 48.8,
        "Background": "#FF90EE90"
      },
      {
        "Id": "041bfc55adc74919892d033496637085",
        "Title": "COLOUR CODING LEGEND",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -1960.9825131035575,
        "Top": 3807.2218707304964,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "2b9c00ceced94e03ae848db05a44c613",
        "Title": "USE:\r\nFOR IMPORTANT WATCH NODES",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -1992.7761810849347,
        "Top": 3955.1763194535783,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "6973086066464f18b12a8fc528beb294",
        "Title": "USE:\r\nFOR CONDITIONAL NODES",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -2197.0529549119897,
        "Top": 3955.3634700723164,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b3ca54e658d24bfb86d4656b986c2c05",
        "Title": "USE:\r\nFOR PYTHON NODES",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -2371.0792005238104,
        "Top": 3955.4375746780647,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "bddf90ca8481479a9c98fb7a243a5620",
        "Title": "USE:\r\nFOR CHANGES TO REVIT",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -2561.1270018894688,
        "Top": 3954.6203486779309,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8f11b9ad146f42fd95e4fae93178e006",
        "Title": "USE:\r\nFOR USER CONTROL (SLIDERS ETC.)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -2807.5961148645843,
        "Top": 3953.7703740434667,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "30938bfa313641a8aaea40156df56726",
        "Title": "USE:\r\nFOR FIXED INPUT (FILE PATHS ETC.)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -3055.246706469798,
        "Top": 3953.34500929053,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b3bd16b6bcf149f999cb5ecf3c1c0c12",
        "Title": "USE:\r\nFOR GENERAL WORKFLOW NODES",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -3301.1468548645939,
        "Top": 3951.9753155047624,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "5e5c235af4f04c7eb1e6b0c6745329ad",
        "Title": "COLOUR CODING LEGEND",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -3299.8370128594274,
        "Top": 3756.3833984261564,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 1320.4861350257936,
    "Y": -1131.1735563865818,
    "Zoom": 0.37443290857212019
  }
}