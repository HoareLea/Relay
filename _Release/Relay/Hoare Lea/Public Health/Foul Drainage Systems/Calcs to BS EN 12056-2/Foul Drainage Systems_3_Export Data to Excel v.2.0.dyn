{
  "Uuid": "f0eae0ae-aa61-484a-9cf0-0baccb79f36c",
  "IsCustomNode": false,
  "Description": null,
  "Name": "Foul Drainage Systems_3_Export Data to Excel v.2.0",
  "ElementResolver": {
    "ResolutionMap": {
      "DSCore.List.Empty": {
        "Key": "DSCore.List",
        "Value": "DSCoreNodes.dll"
      },
      "DSCore.List": {
        "Key": "DSCore.List",
        "Value": "DSCoreNodes.dll"
      },
      "String": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      },
      "Category": {
        "Key": "Revit.Elements.Category",
        "Value": "RevitNodes.dll"
      },
      "Element": {
        "Key": "Revit.Elements.Element",
        "Value": "RevitNodes.dll"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      },
      "Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "43020bdc4a64460a9ff519e3e4ae76fd",
      "Inputs": [
        {
          "Id": "61a0026e60a440a9b1545ced4efc1a6f",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6ca344610a4e415faf851d769b2e9868",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7462fc9dc1504046acc9e7bc7276132e",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Invert Elevation\";",
      "Id": "e26d1aaf45934f9fa96d127c2e00458b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "47f2b0f9e4e44160be557c07d97d7661",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.MinimumItem@var[]",
      "Id": "eaa83c28defa431faa6db05bb3369bd5",
      "Inputs": [
        {
          "Id": "0264382c5fbd42f2abaa10b84a356d80",
          "Name": "list",
          "Description": "List of comparable items to take the minimum value from\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "19678bc389bc48abbe25d412a8ecf0da",
          "Name": "item",
          "Description": "Minimum item from the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Returns the minimum value from a list.\n\nList.MinimumItem (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "29a4ee7617cc468ab2b00687944425e1",
      "Inputs": [
        {
          "Id": "bcf85a001c0a473c937840d2ead4a5a3",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cf6a24c197f04b61b9030b98955ca8d3",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fe15e1b6eb6740f09fb19b14e45961af",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "98e9150c878c46189b613b7d17197783",
      "Inputs": [
        {
          "Id": "6d8e910490964cbfaf8e5f95e32a3d7a",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "df382ea86a884a6094296194574ae827",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e20c86b1fbe3479986925c4a75505f83",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "out;",
      "Id": "756fcbcc65ca4e9193a5306e3c7ab53e",
      "Inputs": [
        {
          "Id": "70fc4dac027d41f0afe4adc6de183fa6",
          "Name": "out",
          "Description": "out",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b4c0819cd61842618060914b30028efa",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\n# Angled branching network evaluator by Jared Linden jaredlindena@hoarelea.com \r\n\r\ndataEnteringNode = UnwrapElement(IN[0])\r\n\r\ndebug = []\r\n\r\nclass Run:\r\n\r\n\tdef __init__(self, _number, _parent, _start_id):\r\n\t\tself.parent = _parent\r\n\t\tself.start_id = _start_id\r\n\t\tself.number = _number\r\n\t\tself.__branches = 0\r\n\t\t\r\n\tdef depth(self):\r\n\t\treturn self.parent.depth() + 1 if self.parent else 1\r\n\t\t\r\n\tdef runString(self):\r\n\t\treturn str(self.number) if self.parent is None else self.parent.runString() + \".\" + str(self.number)\r\n\t\t\r\n\tdef branch(self, start_id):\r\n\t\tself.__branches += 1\r\n\t\treturn Run(self.__branches, self, start_id)\r\n\t\t\r\n\tdef __eq__(self, other):\r\n\t\tif not isinstance(other, Run): \r\n\t\t\treturn False\r\n\t\treturn self.number == other.number and self.depth() == other.depth() if self.parent == other.parent else False\r\n\t\t\r\n\tdef __lt__(self, other):\r\n\t\tif self.depth() == other.depth() and self.number == other.number:\r\n\t\t\treturn self.parent < other.parent if self.parent else - 1\r\n\t\telse:\r\n\t\t\treturn self.number < other.number if self.depth() == other.depth() else self.depth() < other.depth()\r\n\t\r\n\tdef __hash__(self):\r\n\t\treturn self.number * 31 + self.depth()\r\n\t\r\n\r\nclass Edge:\r\n\t\r\n\tdef __init__(self, _run, _start_connector):\r\n\t\tself.run = _run\r\n\t\tself.end = None\r\n\t\tself.start = _start_connector.node\r\n\t\tself.__connector = _start_connector\r\n\t\t\r\n\tdef evaluate(self):\r\n\t\tcurrent = self.__connector.connectedElement()\r\n\t\twhile(isinstance(current, SectionElement)):\r\n\t\t\tcurrent = current.nextElement()\r\n\t\tself.end = current\r\n\t\t\r\nclass ConnectorHelper:\r\n\t\r\n\tdef __init__(self, _node, _connector, _element_container):\r\n\t\tself.node = _node\r\n\t\tself.id = connected(_connector).Owner.Id.IntegerValue\r\n\t\tself.direction = _connector.CoordinateSystem.BasisZ\r\n\t\tself.edge = None\r\n\t\tself.__connector = _connector\r\n\t\tself.__element_container = _element_container\r\n\t\t\r\n\tdef setEdge(self, _edge):\r\n\t\tself.edge = _edge\r\n\t\t\r\n\tdef hasEvaluated(self):\r\n\t\treturn self.edge is not None\r\n\t\t\r\n\tdef evaluateEdge(self, run):\r\n\t\tself.edge = Edge(run, self)\r\n\t\tself.edge.evaluate()\r\n\r\n\t\t\r\n\tdef connectedElement(self):\r\n\t\treturn self.__element_container.getNetworkElement(connected(self.__connector).Owner, self.node, self.edge)\r\n\r\nclass SectionElement:\r\n\r\n\tdef __init__(self, _elem, _edge, _prev_id, _source, _added):\r\n\t\tself.edge = _edge\r\n\t\tself.added = _added\r\n\t\tself.prev_id = _prev_id\r\n\t\tself.element = _elem\r\n\t\tself.source = _source\r\n\t\tself.id = _elem.Id.IntegerValue\r\n\t\tself.main_run = _edge.run\r\n\t\t\r\n\tdef getMainRun(self):\r\n\t\treturn self.edge.run\r\n\t\t\r\n\tdef nextElement(self):\r\n\t\ttry:\r\n\t\t\tnext_elem = next(iter(y.Owner for y in [connected(x) for x in getNodeConnectors(self.element)] if y.Owner.Id.IntegerValue != self.prev_id))\r\n\t\texcept:\r\n\t\t\tnext_elem = next(iter(y.Owner for y in [connected(x) for x in getAllConnectors(self.element)] if y.Owner.Id.IntegerValue != self.prev_id))\r\n\t\treturn self.source.getNetworkElement(next_elem, self, self.edge)\r\n\r\n\r\nclass TerminalElement:\r\n\tdef __init__(self, _element, _edge, _added):\r\n\t\tself.element = _element\r\n\t\tself.added = _added\r\n\t\tself.edge = _edge\r\n\t\tself.id = _element.Id.IntegerValue\r\n\t\t\r\n\tdef getMainRun(self):\r\n\t\treturn self.edge.run\r\n\r\n\r\nclass BranchElement(object):\r\n\t\r\n\tdef __init__(self, element):\r\n\t\tself.id = element.Id.IntegerValue\r\n\r\n\r\nclass StartElement(BranchElement):\r\n\t\r\n\tdef __init__(self, _element, _run, _element_source, _added):\r\n\t\tself.element = _element\r\n\t\tself.__source = _element_source\r\n\t\tself.added = _added\r\n\t\tself.main_run = _run\r\n\t\tself.paused = False\r\n\t\tself.id = _element.Id.IntegerValue\r\n\t\tself.__connectors = [ConnectorHelper(self, x, _element_source) for x in getAllConnectors(_element)]\r\n\t\tif len(self.__connectors) != 0:\r\n\t\t\tself.__out1 = self.__connectors[0]\r\n\t\t\tself.__out2 = None\r\n\t\t\tif len(self.__connectors) > 1:\r\n\t\t\t\tself.__out2 = self.__connectors[1]\r\n\t\tsuper(StartElement, self).__init__(_element)\r\n\t\t\r\n\tdef getMainRun(self):\r\n\t\treturn self.main_run\r\n\r\n\tdef hasMainNext(self):\r\n\t\treturn True\r\n\t\r\n\tdef evaluateMain(self):\r\n\t\tif not self.__out1.hasEvaluated():\r\n\t\t\treturn self.__out1.evaluateEdge(self.main_run)\r\n\t\telif self.__out2 is not None and not self.__out2.hasEvaluated():\r\n\t\t\treturn self.__out2.evaluateEdge(self.main_run)\r\n\t\telse:\r\n\t\t\treturn self.__out1.evaluateEdge(self.main_run)\r\n\t\t\t\r\n\tdef evaluateNextBranch(self):\r\n\t\tcon = sorted((x for x in self.__connectors if not x.hasEvaluated()), key = lambda x: self.__out1.direction.AngleTo(x.direction))[0]\r\n\t\tcon.evaluateEdge(self.getMainRun().branch(self.id))\r\n\t\t\r\n\tdef hasEvaluated(self):\r\n\t\treturn all(x.hasEvaluated() for x in self.__connectors)\r\n\t\t\r\n\tdef hasEvaluatedMain(self):\r\n\t\treturn self.__out1.hasEvaluated() and (self.__out2 is None or self.__out2.hasEvaluated())\r\n\t\t\r\n\tdef setIncomingEdge(self, connector_id, edge):\r\n\t\t[x for x in self.__connectors if x.id == connector_id][0].setEdge(edge)\r\n\t\t\t\r\n\r\nclass NodeElement(BranchElement):\r\n\r\n\tdef __init__(self, _element, _edge, _prev_id, _source, _added):\r\n\t\tself.element = _element\r\n\t\tself.__source = _source\r\n\t\tself.__prev_id = _prev_id\r\n\t\tself.id = _element.Id.IntegerValue\r\n\t\tself.added = _added\r\n\t\tself.__connectors = [ConnectorHelper(self, x, _source) for x in getAllConnectors(_element)]\r\n\t\tself.paused = False\r\n\t\tnext(iter(x for x in self.__connectors if x.id == _prev_id)).setEdge(_edge)\r\n\t\tself.paused = not self.hasMainNext()\r\n\t\tsuper(NodeElement, self).__init__(_element)\r\n\t\t\r\n\tdef inConnectors(self):\r\n\t\treturn (x for x in self.__connectors if x.edge is not None and x.edge.start.id != self.id)\r\n\t\t\r\n\tdef getInMain(self):\r\n\t\treturn sorted(self.inConnectors(), key = lambda x: x.edge.run)[0]\r\n\t\t\r\n\tdef getMainRun(self):\r\n\t\treturn sorted((x for x in self.__connectors if x.hasEvaluated()), key = lambda x: x.edge.run)[0].edge.run\r\n\t\t\r\n\tdef hasMainNext(self):\r\n\t\tmain_in_dir = self.getInMain().direction.Negate()\r\n\t\treturn len([x for x in self.__connectors if not x.hasEvaluated()]) == 1 or any(x for x in self.__connectors if x.direction.AngleTo(main_in_dir) < 0.05 and not x.hasEvaluated())\r\n\t\t\r\n\tdef evaluateMain(self):\r\n\t\tself.paused = False\r\n\t\tmain_in_dir = self.getInMain().direction.Negate()\r\n\t\tsorted((x for x in self.__connectors if not x.hasEvaluated()), key = lambda x: main_in_dir.AngleTo(x.direction))[0].evaluateEdge(self.getMainRun())\r\n\t\t\r\n\tdef evaluateNextBranch(self):\r\n\t\tmain_in_dir = self.getInMain().direction.Negate()\r\n\t\tcon = sorted((x for x in self.__connectors if not x.hasEvaluated()), key = lambda x: main_in_dir.AngleTo(x.direction))[0]\r\n\t\tcon.evaluateEdge(self.getMainRun().branch(self.id))\r\n\t\t\r\n\tdef hasEvaluated(self):\r\n\t\treturn all(x.hasEvaluated() for x in self.__connectors)\r\n\t\t\r\n\tdef hasEvaluatedMain(self):\r\n\t\treturn len([x for x in self.__connectors if x.hasEvaluated() and x.edge.run == self.getMainRun()]) == 2\r\n\t\t\r\n\tdef setIncomingEdge(self, connector_id, edge):\r\n\t\tnext(iter(x for x in self.__connectors if x.id == connector_id)).setEdge(edge)\r\n\t\t\r\n\t\t\t\r\nclass ElementContainer:\r\n\r\n\tdef __init__(self):\r\n\t\tself.__elems = {}\r\n\t\tself.__number = 1\r\n\t\t\r\n\tdef getNetworkElement(self, element, prev, edge):\r\n\t\tid = element.Id.IntegerValue\r\n\t\tif id in self.__elems:\r\n\t\t\telem = self.__elems[id]\r\n\t\t\tif isinstance(elem, NodeElement):\r\n\t\t\t\telem.setIncomingEdge(prev.id, edge)\r\n\t\t\treturn elem\r\n\t\telse:\r\n\t\t\tif isNodeElement(element):\r\n\t\t\t\tnew = NodeElement(element, edge, prev.id, self, self.__number)\r\n\t\t\telif isSectionElement(element):\r\n\t\t\t\tnew = SectionElement(element, edge, prev.id, self, self.__number)\r\n\t\t\telif isTermainalElement(element):\r\n\t\t\t\tnew = TerminalElement(element, edge, self.__number)\r\n\t\t\telse:\r\n\t\t\t\traise Exception(\"Unknow element type connected to network\")\r\n\t\t\tself.__elems[id] = new\r\n\t\t\tself.__number += 1\r\n\t\t\treturn new\r\n\t\t\t\r\n\tdef networkElements(self):\r\n\t\treturn sorted(sorted(self.__elems.values(), key = lambda x:x.getMainRun()), key = lambda y:y.added)\r\n\t\t\r\n\tdef setStart(self, start_node):\r\n\t\tself.__elems[start_node.id] = start_node\r\n\t\t\r\n\tdef nodes(self):\r\n\t\treturn (x for x in self.__elems.values() if isinstance(x, BranchElement)) #or isinstance(x, NodeElement))\r\n\r\n\r\ndef isValidConnector(connector):\r\n\treturn (connector.ConnectorType == ConnectorType.End or connector.ConnectorType == ConnectorType.Curve) and connector.IsConnected and (isinstance(connector.Owner, MEPCurve) or isinstance(connector.Owner, FamilyInstance))\r\n\r\n#Return Connector\r\ndef connected(connector):\r\n\ttry:\r\n\t\treturn [x for x in connector.AllRefs if isValidConnector(x) and x.Owner.Id.IntegerValue != connector.Owner.Id.IntegerValue][0]\r\n\texcept:\r\n\t\traise Exception(\"Connector not connected\")\r\n\t\r\ndef connectedId(connector):\r\n\treturn connected(connector).Owner.Id.IntegerValue\r\n\t\r\ndef getAllConnectors(element):\r\n\ttry:\r\n\t\tconnectors = element.MEPModel.ConnectorManager.Connectors\r\n\texcept:\r\n\t\tconnectors = element.ConnectorManager.Connectors\r\n\treturn [x for x in connectors if isValidIterableConnector(x)]\r\n\t\r\ndef isValidIterableConnector(connector):\r\n\treturn isValidConnector(connector) and len([x for x in connected(connector).ConnectorManager.Connectors]) > 1\r\n\t\r\ndef getNodeConnectors(element):\r\n\treturn [x for x in getAllConnectors(element) if not isPipeConnectedToCap(connected(x).Owner)]\r\n\t\r\ndef isPipeConnectedToCap(elem):\r\n\ttry:\r\n\t\tlength = elem.Location.Curve.Length\r\n\texcept:\r\n\t\tlength = 10\r\n\tif length > 1.5:\r\n\t\treturn False\r\n\ttry:\r\n\t\tconnectors = elem.MEPModel.ConnectorManager.Connectors\r\n\texcept:\r\n\t\tconnectors = elem.ConnectorManager.Connectors\r\n\treturn any(len([y for y in connected(x).ConnectorManager.Connectors if isValidConnector(y)]) < 2 for x in [z for z in connectors if isValidConnector(z)])\r\n\t\r\ndef isSectionElement(element):\r\n\treturn len(getAllConnectors(element)) == 2 or len(getNodeConnectors(element)) == 2\r\n\t\r\ndef isNodeElement(element):\r\n\treturn len(getNodeConnectors(element)) > 2\r\n\t\r\ndef isTermainalElement(element):\r\n\treturn len(getAllConnectors(element)) == 1 or len(getNodeConnectors(element)) == 1\r\n\t\r\ndef firstOrNone(list):\r\n\treturn next(iter(list), None)\r\n\t\r\ndef mainLoop(root_element):\r\n\r\n\telement_container = ElementContainer()\r\n\troot_run = Run(1, None, root_element.Id.IntegerValue)\r\n\tstart_node = StartElement(root_element, root_run, element_container, 0)\r\n\telement_container.setStart(start_node)\r\n\t\r\n\tsafety = 0\r\n\twhile firstOrNone(x for x in element_container.nodes() if not x.hasEvaluated()) is not None:\r\n\t\tordered_unevaluated = sorted(sorted((x for x in element_container.nodes() if not x.hasEvaluated()), key = lambda x: x.getMainRun()), key = lambda y:y.added)\r\n\t\tsafety +=1\r\n\t\tif safety > 999:\r\n\t\t\traise Exception(\"To many loops\")\r\n\t\tfirst_with_next = firstOrNone((x for x in ordered_unevaluated if not x.hasEvaluatedMain() and not x.paused and x.hasMainNext()))\r\n\t\tif first_with_next is not None:\r\n\t\t\tfirst_with_next.evaluateMain()\r\n\t\t\tcontinue\r\n\t\t\t\r\n\t\tfirst_with_branch = firstOrNone((x for x in ordered_unevaluated if x.hasEvaluatedMain() and not x.paused))\r\n\t\tif first_with_branch is not None:\r\n\t\t\tfirst_with_branch.evaluateNextBranch()\r\n\t\t\tcontinue\r\n\t\t\t\r\n\t\tfirst_paused_with_main = firstOrNone((x for x in ordered_unevaluated if x.hasMainNext() and x.paused and not x.hasEvaluatedMain()))\r\n\t\tif first_paused_with_main is not None:\r\n\t\t\tfirst_paused_with_main.evaluateMain()\r\n\t\t\tcontinue\r\n\t\t\t\r\n\t\tfirst_paused_branch = firstOrNone((x for x in ordered_unevaluated if not x.hasEvaluatedMain() and x.paused))\r\n\t\tif first_paused_branch is not None:\r\n\t\t\tfirst_paused_branch.evaluateMain()\r\n\t\t\tcontinue\r\n\t\t\t\r\n\t\traise Exception(\"Unknown state\")\r\n\treturn element_container.networkElements()\r\n\r\n\r\n\t\r\nin_elements = dataEnteringNode\r\n\r\n\r\noutput = []\r\n\r\n\r\ndef addToRunsDict(elem, runsdict):\r\n\trun = elem.getMainRun()\r\n\trunstart = run.start_id\r\n\trunstring = run\r\n\tif runstart not in runsdict:\r\n\t\trunsdict[runstart] = {}\r\n\tif runstring not in runsdict[runstart]:\r\n\t\trunsdict[runstart][runstring] = []\r\n\trunsdict[runstart][runstring].append(elem)\r\n\t\r\nsafe1 = 0\r\n\r\ndef getRunElements(elems, runsdict):\r\n\tlist = []\r\n\tglobal safe1\r\n\tsafe1 +=1\r\n\tif safe1 > 100:\r\n\t\traise Exception(\"Too many recursions\")\r\n\tsorted_elems = sorted(elems, key = lambda x:x.added)\r\n\tfor x in sorted_elems:\r\n\t\tlist.append(x.element)\r\n\t\tif x.id in runsdict:\r\n\t\t\tfor key in sorted(runsdict[x.id].keys()):\r\n\t\t\t\tsubl = runsdict[x.id].pop(key)\r\n\t\t\t\tlist.append(getRunElements(subl, runsdict))\r\n\treturn list\r\n\t\r\nnetworks = []\r\nall_done =[]\r\nfor element in (me for me in in_elements if me.Id.IntegerValue not in all_done):\r\n\trunsdict = {}\r\n\toutput = []\r\n\tnetwork = mainLoop(element)\r\n\tfor x in network:\r\n\t\taddToRunsDict(x, runsdict)\r\n\t\r\n\t#done_list.append(element.Id.IntegerValue)\r\n\tfirst = runsdict[element.Id.IntegerValue].keys()[0]\r\n\tlems = runsdict[element.Id.IntegerValue].pop(first)\r\n\tnetworks.append(getRunElements(lems, runsdict))\r\n\tall_done.extend([x.id for x in network])\r\n#debug = [[x.getMainRun().runString(), x.element, x.added, x] for x in network]\r\n\r\nOUT = networks#, debug",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "a65456329fb44a5aba776cd022efd2e2",
      "Inputs": [
        {
          "Id": "03b1899abce3437a942909a5e70302b5",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a62ef9e1b9ee410b836e0f913dc6da0a",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "63ad3d979a0c488e893a84a87e3c0c35",
      "Inputs": [
        {
          "Id": "616398d11206405d806f7102174bc93e",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ac9fd0f10824fe3b001083248f2b840",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "67abfa2480714e159964f6ad3801e3ba",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "bdcbe6ee5481476d847e963fc88acced",
      "Inputs": [
        {
          "Id": "54dd726a7e5145ff90bce45d1219e521",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2a7cd61d4f9e4c68ab0104aa91adab23",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9abb94b16e7543e8a180eabdac0dffff",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n#By Jared Linden jaredlinden@hoarela.com\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\nnumber = IN[1]\r\n\r\noutput = []\r\n\r\n#Sweet sweet recursion\r\ndef GetTagRecursive(item, current_branch):\r\n\t\t\r\n\titem_tags = []\r\n\t\r\n\tnext_branches = current_branch[:]+[0]\r\n\tfor x in item:\r\n\t\t#Check iterable\r\n\t\tif isinstance(x,list):\r\n\t\t\tnext_branches[-1] = next_branches[-1] + 1\r\n\t\t\titem_tags.append(GetTagRecursive(x, next_branches))\r\n\t\telse:\r\n\t\t\tst = str(current_branch[0])\r\n\t\t\tfor i in current_branch[1:]:\r\n\t\t\t\tst += \".\" + str(i)\r\n\t\t\titem_tags.append(st)\r\n\treturn item_tags\t\r\n\t\r\ncurrent_number = number\r\nfor network in dataEnteringNode:\r\n\tnetwork_tags = []\r\n\tblobs = GetTagRecursive(network, [number])\r\n\tfor x in blobs:\r\n\t\tnetwork_tags.append(x)\r\n\toutput.append(network_tags)\r\n\tnumber +=1\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = output",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "9f2a3aeb385f427faa17b63e1b042867",
      "Inputs": [
        {
          "Id": "df596b2dcd5a4eb99c3880d9bbd4f767",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f93e96e3884e4b47b502b88a6b4aac6a",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6c923e3a2ca49718bf736f9037ec423",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "ElementTree;\nTreeNumber=1;",
      "Id": "09240c6d13d04c34ab7570e398744506",
      "Inputs": [
        {
          "Id": "b9869df847f342a38c09c51e5f716167",
          "Name": "ElementTree",
          "Description": "ElementTree",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d102fc5608ef404aba7e770dcac4c4a9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9567b802e5444998b240796c4d001fdd",
          "Name": "",
          "Description": "TreeNumber",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "fbae7317fd9a4d0ab61d86de2d86a065",
      "Inputs": [
        {
          "Id": "c12bdf8b526446de8f62c453d2e2a41e",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b2290da333d04371a2a4c9d335dea786",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a5491a37c7c24fe49e09f6825c944a1e",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f590f1ee667a423cb109755b67a2e54f",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "c4c7965e15fe4885ac71a50eda850244",
      "Inputs": [
        {
          "Id": "ea14175c3ec6420e8bcc7bec98ebb7ac",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9176e32337849ceb25e62eb546cd7c6",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "227e90ef1d7f4097b56e30b2f4ada603",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "171e5f8a6de94f0bbfb831a66468ecf4",
      "Inputs": [
        {
          "Id": "4f6868547a974386b60a39a4f0a6b5f3",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "326d5d86131a404682569e535f532c6e",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aee5d1bd17f1455aac6645bc8d381ad9",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5e568933f7a1495194d608180aa20f47",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Id": "fc7230bff85f48fe9e8f7bb5db000b34",
      "Inputs": [
        {
          "Id": "dd29a5105ec548a9b36c6c24610e606c",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5e4c088050d47a8805b9e995161a2b3",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4ecac9dae1dc48d384128cabb1c54c69",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "146489247a5440d7a1cd78217f60e4f2",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "1a8c928ceee642bfb2968f91b32d39ed",
      "Inputs": [
        {
          "Id": "bd1281ef8a3e433db181305279011073",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0dc812eb529b4a858b9e606efde61470",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "13172a7f5e13432989bda889780d01a5",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "4099482e5ff74dff92068b2e73ab650a",
      "Inputs": [
        {
          "Id": "085bb1cc77c644349fbffd885642ff27",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca99913e370443eba32a217f66e1463d",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f5484ffa5ace4ab6bcd0fd1daa1ab54e",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7c1517888b1641858cfd509dbaee01ba",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Sanitary\";",
      "Id": "703edad22b334dbeb55625ddf4f923fa",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ab89bcb1e78e458bbce68cccf26e92a7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"System Classification\";",
      "Id": "2c095377e6054599883850feb66e8bf1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4002dba09bcd40dc83d1aad048131935",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "813b3cc850bc4ccd8afdf054bc85a5b2",
      "Inputs": [
        {
          "Id": "44487fa19df944998aefde0e2067f377",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "74a1b6e1263e410591f6b186b9e9be86",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "84aa26e65eaa49b79437075dc3d6bdd3",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2e967b6865eb44418c0c1f99bc1c13c7",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstItem@var[]..[]",
      "Id": "a514f651b3074cbfbadbd6970ed60577",
      "Inputs": [
        {
          "Id": "017af7568b654db29a3e70dd89afb522",
          "Name": "list",
          "Description": "List to get the first item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d898a91ecc7d4f6abfcc96e153d85021",
          "Name": "item",
          "Description": "First item in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Returns the first item in a list.\n\nList.FirstItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "8f2e07d536654e0c9e4146c98f265743",
      "Inputs": [
        {
          "Id": "74498c24accd43c1b8c6a0fffecdebb4",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4229f123c96f4819883645e729371cd3",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "05b5c48dee7a4ea48ee21373d0be1dff",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"System Name\";",
      "Id": "47619e899a2a45cc82daf7fbbbf1cbe7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "094d9711ee3641a3b14d5b299e048de5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "772e8c0b6ca744b9a3f5703f7c5214d8",
      "Inputs": [
        {
          "Id": "5049c44f5d76492b8fe3e5c85b119b97",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a2d7b53c92764158b75d929097767095",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3a16adbf4ac41bd9fda170456c20e5e",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Manual System Name\";",
      "Id": "c64abc80c6314b23835d7d89edd3ccd6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "321d49fd84c042cb8aacd24815bdbbc8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "e1d26b8170ac4b28afdba241b953d780",
      "Inputs": [
        {
          "Id": "ecebe36e6aa84b33972df80ab8151ffe",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0df28bbf68914435845066494ee8a4de",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1a86623c5de443eb9dacffbec4adad4d",
          "Name": "list",
          "Description": "A list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "usemanualsystemname==true? 1 : 0;",
      "Id": "5c8f947c816a4955a82a4c10bf71b280",
      "Inputs": [
        {
          "Id": "2deb2d128fe5469a82c3f165fa7d30a6",
          "Name": "usemanualsystemname",
          "Description": "usemanualsystemname",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d051d9f1a84b49ab89413e22ed895aa9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "91834ff8561d475fbb62ca068a1ad16e",
      "Inputs": [
        {
          "Id": "ae1d1f39cf5f4528b73a280f55b40400",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fc0d53fb51b64717b27e87b4d062ca60",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4f8a70edd87144c8a8b147fcbc703bbb",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Replace, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "c08185316ac7467d8c090fe7bc8aef42",
      "Inputs": [
        {
          "Id": "e4a795675b2c416ab54d8a7aa5c62de6",
          "Name": "item",
          "Description": "Item to potentially be replaced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a6f8945f65aa4a25bbdf634a8550becd",
          "Name": "replaceWith",
          "Description": "Object to replace with",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d34747bae02b4dd482639915dfcbe41c",
          "Name": "condition",
          "Description": "Predicate used to determine if it should be replaced.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b489ff11f1fc416f8fbe1b28f919a779",
          "Name": "var",
          "Description": "If condition(item) = True, then \"replaceWith\" is returned. Otherwise \"item\" is returned unaltered.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Replaces an object with a given substitute if the original object satisfies a given condition."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "11dfa29e4abf4eee9063480962523472",
      "Inputs": [
        {
          "Id": "34e6f13f87de440ca039529bbbe9f850",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5ac7a027955649f2a7be2aa5bd67269a",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6245135310c74043b6e6ec69f3ee4a13",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\";",
      "Id": "a720510f21a2471498ffdeaf6d2eb46b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "66d724eb985d4ea4b83070a2825de1cb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "1882c671546e44509c7c4f0eeb15cfd9",
      "Inputs": [
        {
          "Id": "f2b3f99d32424a54b62a41b218c3f510",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "724da10b9fac4dbe93e5a6971efd230b",
          "Name": "Elements",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "65443397eb02415289abb96435ac4b28",
      "Inputs": [
        {
          "Id": "d28ea3e128fa473bb8769667269cec58",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f4e7056df4cd409ba6b01f81795b75ba",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6faa6222a73c49adb477ada4e9d5eb70",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"System Name\";",
      "Id": "c2423694604f4ef592c24144281ec741",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f5167d6ab5784ff1aede0edcf93df205",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "3b11fbb6e7e04679aaaaefd918f630cc",
      "Inputs": [
        {
          "Id": "e1c23c0d6f6f435c83646d210fdbdb75",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "030e34840a6341b18ed7eb826d6380ba",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0fbc24443fa459492de9ebe31038f5e",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "bdc6d6051f4040988fc4decb89076bba",
      "Inputs": [
        {
          "Id": "270009a3ff67439ba2b5b1ab355a7df2",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a147104540024ef2a06e4550d16620db",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74e86dc5f5b74947881e9eb5e27589e8",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "853d7cc1351c423d84e6532d79375912",
      "Inputs": [
        {
          "Id": "ad053d04ce0e44099701c192f4724bb1",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7eb7c5ba9c864962ae7c237488c946ac",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a9169eb560634b489da9d08208080789",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Primary Ventilated System\";\n\"Secondary Ventilated System\";\n\"DP Frequency Factor (K)\";\n\"Contains WC:\";",
      "Id": "662b500fe1f648f7864e9681efc9345f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "00fb16a8582f4e40a5392a247d79b80a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7e54f864be0f484ea5d5fe0e347b5c55",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "98133511f0f845bca737708498cbdf98",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aaf05cbe71754175ba183e5a1aca72e1",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "7e592b20f44849db9033ca9658d9b41f",
      "Inputs": [
        {
          "Id": "a88be71272f646e38bfb6946c208c2a6",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "33da3caf1f8e4e7886a80e66a67aa610",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "964ff51eb01e4a69863114691a1bac8b",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "c6101d7632dc4d74bd56afcb223bf43a",
      "Inputs": [
        {
          "Id": "a33de88025a8433fa3b31aa522ccfb47",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d6e13f2df9fa4ce7ac018d4540d9830f",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "db11e93ea0684418a1b9e5f45b139a5c",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "PVS==1 && SVS==0? \"Primary Ventilated\":\nPVS==0 && SVS==1? \"Secondary Ventilated\":\n\"Check Piping System Type\";",
      "Id": "47d56e95a76a4ac5930dfd7aaee0bde0",
      "Inputs": [
        {
          "Id": "ca39c1df7d6d4434b95ea3fcb7ed1c8b",
          "Name": "PVS",
          "Description": "PVS",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "66bd9fa39eb544b0ad334bde19a0e184",
          "Name": "SVS",
          "Description": "SVS",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c188983d665b438484c21de17d29ef0b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "lst>0?lst:0;",
      "Id": "1bfc455afa8c4c78a01814cdf50b69d6",
      "Inputs": [
        {
          "Id": "366696bebc7045a796641628c3fa97ac",
          "Name": "lst",
          "Description": "lst",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4392e4232f2c4d87a96d6276b59105fb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "lst>0?lst:0;",
      "Id": "40bf5b73c1ab4407a5d4a6b62cb3e2a6",
      "Inputs": [
        {
          "Id": "fa59d34688154f858a01841d07acd1db",
          "Name": "lst",
          "Description": "lst",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "342e0cdb85de4fa7a2d975bac240aa08",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "48bebaae93bb4cfc8462dbf7e78aaad0",
      "Inputs": [
        {
          "Id": "d7b62dd0a5984e26b7cd16dd6035b138",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b1afe4a39db4250a300b46f2f1bbb83",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0d78777d2b864ab5b6a4ec2b603ae39a",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bab32b4183bd45648add775185148055",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e217586101e24f14a05e8c0da8487683",
          "Name": "list",
          "Description": "A list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "e4041faedcd6473c8c9638661b158a82",
      "Inputs": [
        {
          "Id": "a490a61fedea4752aa5d4385c4afde86",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e8eb45d51bcb4c6aa629e0f0e29241d0",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Stack Ref = \" + SystemName;",
      "Id": "6e77c0b768fb4ad3b2547bca5b5bcbaf",
      "Inputs": [
        {
          "Id": "f53bb3e8d33548a8a2cbe6e3cae21a38",
          "Name": "SystemName",
          "Description": "SystemName",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ad65b4b4ff884bf094f3497ba0995807",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"System Type: \" + SystemType;",
      "Id": "f02fccdd127c4da7a4f7ffe650ca65c9",
      "Inputs": [
        {
          "Id": "507c39c41c574b6c8e49f2c06bb1df66",
          "Name": "SystemType",
          "Description": "SystemType",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c756fa985efa4af0b7ce04a469ab0989",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Frequency Factor = \" + K;",
      "Id": "107ca0209393455699720389ef47163e",
      "Inputs": [
        {
          "Id": "a92ad9a67dfe4642ba96c18feb44889c",
          "Name": "K",
          "Description": "K",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "89bfae51efa84b0b919b6fdb1501c50c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "8710c7ee392d49c4ba7bcbfb5c752805",
      "Inputs": [
        {
          "Id": "c1f630bbf93c46b3bf939ec1f3050f2c",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "413e7ad9b24741f7b1317e59d0215d4a",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "75c606a1c2484387a3b59f95a6527ba7",
      "Inputs": [
        {
          "Id": "25b4724dc7ef4b5f903ded8596b802f7",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ff7ef47c7ec44eb681acca99cf836cd3",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Cycle@var[]..[],int",
      "Id": "606cbb7537fa47ed8b4562a2dd1ed306",
      "Inputs": [
        {
          "Id": "deb687ed291b488da8e61aba817d95ca",
          "Name": "list",
          "Description": "List to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c92c6f74746a405eb32a63c85f73caea",
          "Name": "amount",
          "Description": "Number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b972d77758d04081bf5c8990525a063f",
          "Name": "list",
          "Description": "List of repeated lists of type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list by concatenating copies of a given list.\n\nList.Cycle (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Remove@string,int,int",
      "Id": "447deab26b2a4666b41d861ea9df5bbb",
      "Inputs": [
        {
          "Id": "76af67d8765549d9b87dfa82f95d23b3",
          "Name": "string",
          "Description": "String to remove characters from.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "92e19c99bf934b428a2520237573d72f",
          "Name": "startIndex",
          "Description": "Index at which to start removal.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac815b2f1d8149a381f129b601b1aad8",
          "Name": "count",
          "Description": "Amount of characters to remove, Note: if the Count is negative, the removal process goes from right to left.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "55770d62852c4c98bebf9e5ddaecaaeb",
          "Name": "string",
          "Description": "String with characters removed.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Removes characters from a string.\n\nString.Remove (string: string, startIndex: int, count: int): string"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "d85486c2e0564202bb9fb8877d966534",
      "Inputs": [
        {
          "Id": "71ee4d8d816b4c629e3ae1101776fbbd",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3984f19bb684f5a8d6ca3a7e150dbfd",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "cfa48e6ad6274273abaa06a9601a9325",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eed8088364b0450e8b98adf6fe25e641",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "5;",
      "Id": "fba962e884394a55be3f7fd79e263fbe",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "775c4ccb9ee34db78a89621c63f061ff",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "90785ab9c47b4b528f04785c85bdf178",
      "Inputs": [
        {
          "Id": "ce9c1746da3946c1b5af7bebc276bb40",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8cec75c92fa74bbc83f03b9fb97d9a11",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b8e1963ff124ed096ed9f0669859434",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Family\";",
      "Id": "7d072189b33845ca9d9484d069a5b676",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9663f03442f24a63b5cc1164f32988a7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "5123decef70d491189c9a77e9d2bd7b2",
      "Inputs": [
        {
          "Id": "b9722a33ff524379858ec3b9e78b8938",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "081fa8bf8a1f46d7ad94a5edd0c5e466",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "6f1b60c4d79d4b0696134f9a87527750",
      "Inputs": [
        {
          "Id": "1e2525ae8f6548dcbf271df7cc5634c3",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4c4bb6e8dcc94eb6b0c60651d5fda881",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8bb9c98b561748cc92c20667cc3e3cd1",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "301a3012a3f24083aecad181a9c3df96",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"HL_FoulDrainage_SizingConnection\";",
      "Id": "5ac79b264c174a2d8a0900ed5d2a5fb5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "69de935565174a58a3a259f52473fbee",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "5ecef992f16642af9d2cb06eb66c8b79",
      "Inputs": [
        {
          "Id": "f53bb6c1043b4a6284b3edf99305f985",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "98c119a9502a41fb9d6ca35997e22b02",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c2935e9408a24be8994604777191f098",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ef1cbde4009f413caa115cffa0188067",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\nclr.AddReference('ProtoGeometry')\nfrom Autodesk.DesignScript.Geometry import *\n#The inputs to this node will be stored as a list in the IN variables.\nif isinstance(IN[0], list):\n\tcurves = UnwrapElement(IN[0])\nelse:\n\tcurves = [UnwrapElement(IN[0])]\n\nrefs = []\n\nfor curve in curves:\n\tconnMan = curve.ConnectorManager\n\tfittings = []\n\tfor conn in connMan.Connectors:\n\t\tif conn.IsConnected:\n\t\t\tfor lc in conn.AllRefs:\n\t\t\t\tif connMan.Owner.Id !=  lc.Owner.Id:\n\t\t\t\t\tfittings.append(lc.Owner)\n\trefs.append(fittings)\n\n#Assign your output to the OUT variable.\nOUT = refs",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "a664684d6b944b28aecd8c5ef9dcb74d",
      "Inputs": [
        {
          "Id": "951ba4ec6ebf435ba9a0e6664bbe036b",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d784192f51647148959d04b8bf4edc2",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "e8cff726379e46ab8d80d9bb279b5172",
      "Inputs": [
        {
          "Id": "c0c6d5aed3a340bebaa4313c8849d280",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0610abf75ad8453d9b7339ac4a119cbe",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a348055d8ca24fa784815a12052d23b1",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "25908245358940678fff82b5b0fef1a9",
      "Inputs": [
        {
          "Id": "54368c54e5754e97a45a64ee66629d44",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4c2a570c50564383ac78bb6e203dc0c3",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "504415762a1e4ab09f28ca9e05b167ca",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "aef6a66b059e4eefb705ed8fb738b01a",
      "Inputs": [
        {
          "Id": "28676073cf504b1390a2fac6814c89cd",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b52800d1ab004ac4960942f38559459c",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31c438f485594494873168bc1b1a7dfc",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "3cbc971aabc64f77afcf74cf8cb15107",
      "Inputs": [
        {
          "Id": "4ea71a7cc3a84179a9489d08e2227712",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "07f84103088e4b78af3cfb5f6963e2c1",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "7e3e8f19b01b4e06b4a689035f5d3b21",
      "Inputs": [
        {
          "Id": "d68d57f63ec8441489e7a5829d3235ba",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8aecf094db514eac9303b157616ac302",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69f49f9ff3cb47b0a06c61f639f4c70c",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"WC With 6 l Cistern\";\n\"WC With 7.5 l Cistern\";\n\"WC With 7.5 l Cistern\";",
      "Id": "e9c4130ba300407e8ef7371abe906ae1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5c78bf230d5f47169822c9138dfccb15",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "14609f689bc94c9dac43423172af748c",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af8a64cf18eb4674832da8047a07dd19",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "73268fac90e34939956babdac21934a5",
      "Inputs": [
        {
          "Id": "f2c57fda233246f89e95ebd7d074aa83",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "abd2d6f64991452bb1cdf2253bac0ca1",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f121c24478f941f49d0a3c6ce9ad9f66",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "9dc524dd89744ebb96af87560299264d",
      "Inputs": [
        {
          "Id": "c8626e1ee311468a9aa0f7d94b48460b",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08bf3d66304e4d6fa2fa41d422a5275b",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "960c814705eb401494136c925e778318",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x>0;",
      "Id": "0322f62d695a41e19476d0c464cf2a76",
      "Inputs": [
        {
          "Id": "1aa41152830d41e9b9d6e288e89a8969",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "684744fed8df4b359109c2fc67f088ec",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "List.TrueForAny@var[]..[],Function",
      "Id": "b304b95140e8464db31713b9d1d3b104",
      "Inputs": [
        {
          "Id": "8fe988e7c72d4cc79ad1c5fe72cbdeb4",
          "Name": "list",
          "Description": "List from which to evaluate items by query function\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8335719b3bbc43d383a092738d15aa1d",
          "Name": "queryFunction",
          "Description": "Function to evaluate list\n\nFunction",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c85b6850aa134fc89f7dd130ab5acfb2",
          "Name": "bool",
          "Description": "Returns true if any of the items in the list evaluate to true with the query function",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Returns true if one or more items in the list evaluate to true with the given query function\n\nList.TrueForAny (list: var[]..[], queryFunction: Function): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.Identity@var",
      "Id": "8ffc651c0d594f45afc6264d5025aad1",
      "Inputs": [
        {
          "Id": "c345ed2a9dbe45b88b2fbb3730852764",
          "Name": "object",
          "Description": "An object.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8afd5573782e474d904adab2a6625472",
          "Name": "object",
          "Description": "Same object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns what is passed in, doing nothing.\n\nObject.Identity (object: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "List.TrueForAny@var[]..[],Function",
      "Id": "f941b794b7094a818f3ab9c33feda19a",
      "Inputs": [
        {
          "Id": "d0997949703c438986ddace187bdf53c",
          "Name": "list",
          "Description": "List from which to evaluate items by query function\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eeb75f55693941c7b3f7dd2106f58eb7",
          "Name": "queryFunction",
          "Description": "Function to evaluate list\n\nFunction",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ca2571e0fdef481eb424d40630bebd1b",
          "Name": "bool",
          "Description": "Returns true if any of the items in the list evaluate to true with the query function",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Returns true if one or more items in the list evaluate to true with the given query function\n\nList.TrueForAny (list: var[]..[], queryFunction: Function): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x>0;",
      "Id": "6b9e42bc39e343b191acf994f212c890",
      "Inputs": [
        {
          "Id": "2e165a6709ed43b3aecc02ea530d8c75",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "83b4050cac98493e9b521aba139d941a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.Identity@var",
      "Id": "5a76ef10aaab46a091530282245af8bc",
      "Inputs": [
        {
          "Id": "beec9f2952444a989c70203ae8bc0e4b",
          "Name": "object",
          "Description": "An object.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "268ba5ee254c4ab4a0970f7afe11b73c",
          "Name": "object",
          "Description": "Same object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns what is passed in, doing nothing.\n\nObject.Identity (object: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "List.TrueForAny@var[]..[],Function",
      "Id": "8773770933f745b2b50cb316ceb1d623",
      "Inputs": [
        {
          "Id": "7b715b056a1044ceb1c558591aa75a9a",
          "Name": "list",
          "Description": "List from which to evaluate items by query function\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6e1fe10dae4c4c00bf8a31d2524bffb9",
          "Name": "queryFunction",
          "Description": "Function to evaluate list\n\nFunction",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "757b57410b224484ab5064ac85293b74",
          "Name": "bool",
          "Description": "Returns true if any of the items in the list evaluate to true with the query function",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Returns true if one or more items in the list evaluate to true with the given query function\n\nList.TrueForAny (list: var[]..[], queryFunction: Function): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x>0;",
      "Id": "e855387bfc9445e6a336db97a6fd41f7",
      "Inputs": [
        {
          "Id": "0d0e71cd657241ffa7d8235ca9aa6a71",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "28672dd978d04e758592277825ff5ac3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.Identity@var",
      "Id": "43273feef8ab4192bd532a0af1451620",
      "Inputs": [
        {
          "Id": "175f12393e0546309b107924a0074e64",
          "Name": "object",
          "Description": "An object.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "086e10b64a484aab889fc5d410c84240",
          "Name": "object",
          "Description": "Same object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns what is passed in, doing nothing.\n\nObject.Identity (object: var): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "bd09947521354a5c8b6307957cae6d37",
      "Inputs": [
        {
          "Id": "39f57355264a4183b1fb52f13523b25a",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a917bc066d9e48de80fbcab8b02affd0",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e740330c2c9b41078769643e745f421a",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a62d368b2e244964bf07696c852da315",
          "Name": "list",
          "Description": "A list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "5d8bd03fb6144599b85f8072f9e03369",
      "Inputs": [
        {
          "Id": "9dfe38b716e64ab7a3e9335b82a0fdd6",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7792c4bc8d054aadbc494f10e66c470e",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "List.TrueForAny@var[]..[],Function",
      "Id": "c130d83e3a9340428f7a926f96138566",
      "Inputs": [
        {
          "Id": "789fda3013ca4d4b83b1a941636b2583",
          "Name": "list",
          "Description": "List from which to evaluate items by query function\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "85d01f9ebb9449f58363736e3fc163f5",
          "Name": "queryFunction",
          "Description": "Function to evaluate list\n\nFunction",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9fb46ecd28a4adb8d1b999903d357ed",
          "Name": "bool",
          "Description": "Returns true if any of the items in the list evaluate to true with the query function",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Returns true if one or more items in the list evaluate to true with the given query function\n\nList.TrueForAny (list: var[]..[], queryFunction: Function): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.Identity@var",
      "Id": "570b2b1336bd40078ce3ac0318579cd8",
      "Inputs": [
        {
          "Id": "e3d25f71c08b474f818771e1d896c1ab",
          "Name": "object",
          "Description": "An object.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "54af03bb9f604702b4f9ce08ae45be06",
          "Name": "object",
          "Description": "Same object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns what is passed in, doing nothing.\n\nObject.Identity (object: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "result==true?\"Yes\":\"No\";",
      "Id": "71aeed0ce4254bde8b1c99517f263331",
      "Inputs": [
        {
          "Id": "a5555de32dfe494f9d73fe63d18a4704",
          "Name": "result",
          "Description": "result",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "34a7ed93f2424917888e558c5550a801",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x+\" \"+y;",
      "Id": "ca39c4a6992543e69d176a0cc70991d5",
      "Inputs": [
        {
          "Id": "d372db07ade94a91b397f4ce91ea6c7b",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2934b6c052f04166b57e9ba3f3458e62",
          "Name": "y",
          "Description": "y",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "52b62ec4ad1c4362a93d8d156e0c103d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "2710576984534798a364b760b6ea4df8",
      "Inputs": [
        {
          "Id": "d11d0a8dabd44d39a59ee9df73e92529",
          "Name": "item",
          "Description": "The item to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "20013202fce749d0a929c01b1c918667",
          "Name": "amount",
          "Description": "The number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "31d2b176eff24958bed4542306aa27eb",
          "Name": "list",
          "Description": "List of repeated items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a list containing the given item the given number of times.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "84a494cf97194698ab6a9fe921b55de0",
      "Inputs": [
        {
          "Id": "1908b028f1fb4292bf51d79e02734c74",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "78b63d005ad34b66bc841d562f4e8762",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c8bfc56fff0e4a158fa2acd9e525b192",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "8877ddbba02f404b8faed2dcffc2c266",
      "Inputs": [
        {
          "Id": "d722f1c43a734eaabf23a287d01d48b3",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e3266157dbe94d5c9902248624127807",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "acf1f41c62d646bd87e5f01bf9d00d65",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Level\";",
      "Id": "8eca213c8fa842388685b4922f7e3c71",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "032a0857283f4dc6af1961e36c274142",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.Name",
      "Id": "ad5617dd1c5a44a29eb3f46404930f48",
      "Inputs": [
        {
          "Id": "91973416786c40639351c3cf97d389f2",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af7ad4c3c9bf4a358c7565d1aa703328",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The name of the level\n\nLevel.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"Wash Basin\",\n\"Bidet\",\n\"Shower Without Plug\",\n\"Shower With Plug\",\n\"Single Urinal With Cistern\",\n\"Slab Urinal\",\n\"Bath\",\n\"Kitchen Sink\",\n\"Dishwasher (Household)\",\n\"Washing Machine Up To 6 kg\",\n\"Washing Machine Up To 12 kg\",\n\"WC With 6 l Cistern\",\n\"WC With 7.5 l Cistern\",\n\"WC With 9 l Cistern\",\n\"User Defined Appliance 1\",\n\"User Defined Appliance 2\",\n\"User Defined Appliance 3\",\n\"Discharge Units\"];",
      "Id": "76ca8cd7e8a64dc19502410eba6633f0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "897cb1273f9544acb838ed228cfb24d1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "1a58533ddc79477aac4db6346c226b94",
      "Inputs": [
        {
          "Id": "d23ec170f5e84539951605be2dd3ea8e",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "4e77b13f102f49ec8a3e89ceda11e720",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        }
      ],
      "Outputs": [
        {
          "Id": "e1da0a1e671e46f5be763a76b63a2a5f",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "f638eef75fae432a87092c1676549b53",
      "Inputs": [
        {
          "Id": "0f85d6ff3216429da3adb1d7c5be1144",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "160cd4d75027446396ba5c5acb1c95ce",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f6abc33c85f54fe9805a7bda17fdaed7",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Level\";",
      "Id": "730a31b628a1435781740f4dd3885fb6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9641948f2a9346ad8aa256d3f87a97be",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Id": "328b5b52810948d6bce8220265c31df4",
      "Inputs": [
        {
          "Id": "f70a47f1ae0f4566847b1b69a470b427",
          "Name": "list",
          "Description": "list to be sorted\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e9eff70af4c340d2b1c1d53b98aef5ac",
          "Name": "keys",
          "Description": "list of keys, keys have to be sortable (e.g. numbers,strings)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "37a63e8bb6ac4a92876aaa9627c51366",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "359499de55314f458d9fdcde4aad8438",
          "Name": "sortedKeys",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Sort list based on its keys\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Reverse@var[]..[]",
      "Id": "786c3d614ef54843a095f7a04ac6ff29",
      "Inputs": [
        {
          "Id": "78281f82093c455b8834bc4c41253f6c",
          "Name": "list",
          "Description": "List to be reversed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1188ed2d79da467d9a6cc21c3b3b9dfd",
          "Name": "list",
          "Description": "Reversed list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Creates a new list containing the items of the given list but in reverse order.\n\nList.Reverse (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "7c331fddfac241e4b992ce64ae357bb9",
      "Inputs": [
        {
          "Id": "74e2cc977a3a400f952edf287461e7b4",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "879393f60ddf4f50bfa0d5f772aef25e",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a8f9c877aec6438ca99d20f3ab9135bb",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "4e8a2e32aaf4452f91b434afe40e1329",
      "Inputs": [
        {
          "Id": "62c1c2de66ef43af80d7247962b60b48",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "4895190acf5546acb5a46d9fc8b15e29",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": true
        }
      ],
      "Outputs": [
        {
          "Id": "d37d6513087f49348e7caf3e740d1374",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "509b946ac1024e56ac69a7d064331101",
      "Inputs": [
        {
          "Id": "2dbfd04548d440ffb90ed3e058f2b4c8",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "475453b42f034bb6b7f902d140c74351",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "45ab9d7b0f024430b69ff73d245224c5",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "858181d4056a44c2a9bd8df944075ff9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3e8a3d2206f24486acbc23dec3e4a4d7",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "2e9e526acbc24c8a8a0122702988b88e",
      "Inputs": [
        {
          "Id": "bbe194567b024c65b45c1a71de3a61aa",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "89184d80df444065aa295fdc27267ca5",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bb4cea9a8ebe490287a8cc0b747e9c98",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Fixture Units\";",
      "Id": "7542e4da52744299a79061e3ab429a69",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5c03758436344f33b9ad9efc38828a86",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "31c62f9d37784ef9b668c43dd41c9e76",
      "Inputs": [
        {
          "Id": "01feb208ed8a4f63a3cb20e0b9e00709",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "33c2349818594e768ccf5f15917261d4",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "59bbaf5719744f88bf32cf7ddec5dc82",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "989dedea80ad40b9955048021611f9c0",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "!=@var[]..[],var[]..[]",
      "Id": "f5e409f3df2044e596795ebc8aafd9c7",
      "Inputs": [
        {
          "Id": "7bdd38c8e4e2438a9345070f999df305",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2b09fb58412a44de906453fbb3549420",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c10dd7a384bd483094df80c174b5cced",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns true if the two values are different\n\n!= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "87d01b658b3a415fbc648aa65abed968",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "bced344970e64d6097fabc4fe2d96c8e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Reverse@var[]..[]",
      "Id": "ca8775ba343f4adbbd39f3a6c7721f30",
      "Inputs": [
        {
          "Id": "ff01f88a752849fd81d482b1a9668a46",
          "Name": "list",
          "Description": "List to be reversed.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "914ca985edaf4738a2d492637eb2f185",
          "Name": "list",
          "Description": "Reversed list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Creates a new list containing the items of the given list but in reverse order.\n\nList.Reverse (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Fixture Units\";",
      "Id": "908e1638d8c84c36913c911edee15208",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "aa06dbdd7c0c4bf4b2ddddfc08c48b71",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "d592f1851137406c9aa9ebac96b9ccbc",
      "Inputs": [
        {
          "Id": "a2281ff20b764fddb765e33c930381bd",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "28fd4d68e61142648f98d760216d6134",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5e137982a4134a4b86f04427f9bc107e",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "ed797e5f5fda4b2694385ef3be28ae4c",
      "Inputs": [
        {
          "Id": "37dd3ab53bdf4822ac67170115f06254",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6f4d3ad2b915443e9b52a8a19f519464",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "120218a74fda46f19760396d9b692666",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "c6293a4573f349cfbc84502461f9bc3c",
      "Inputs": [
        {
          "Id": "18714eeeca58425583fe771a2c474224",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bbdf5aa581734766b1f53735aaf733dc",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "df85a14ce5484edd9e9e5681210ee32c",
      "Inputs": [
        {
          "Id": "5f6a826608bc4228b3f848527329f108",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cbaa9ab80a024e0882403247ca553582",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "902c6af9b1ab4272848beedb1c0e643c",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.Name",
      "Id": "ece371a0b6824990b77cf34ccefa7f7c",
      "Inputs": [
        {
          "Id": "910dea4d351c4bbc94533d546873a3a8",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8739f0ede4804d438aa4642da258434d",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The name of the level\n\nLevel.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "List.SortByFunction@var[]..[],Function",
      "Id": "86de41aa76494b69954cbdc589ffdbe8",
      "Inputs": [
        {
          "Id": "961a99e05a6146359f768cf0c15ac247",
          "Name": "list",
          "Description": "list of values\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1de5ec5ee84649959a8a2ef57d6050a0",
          "Name": "sortFunction",
          "Description": "function used to sort list\n\nFunction",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "72e293fdaf264bf9ade2247d78f90ec5",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Use a function to determine how list items should be sorted.\n\nList.SortByFunction (list: var[]..[], sortFunction: Function): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "86ea297ac01c430280ef933c74d7825d",
      "Inputs": [
        {
          "Id": "b89a5a2a792f44268a9ea40853e77c8b",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb284ecb19e843f6b0dabc74e7e6b01b",
          "Name": "Elements",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"Diameter\",\n\"Fixture Units\",\n\"DP Waste Water Flow Rate\",\n\"DP Continuous Flow Rate\",\n\"DP Pumped Flow Rate\",\n\"DP Total Flow Rate\"];",
      "Id": "4d2da3ecbbc549989fd3f75246bd2d71",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "29c5451232434e51bf102f5d35419a3a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "77a64806612043aeb8308d51981107c9",
      "Inputs": [
        {
          "Id": "d0b8b580f95e40c297d12b739258d343",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "0146b7ffe78a40f3b1722a2ca33cfd46",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "22c73bb22bdb4590adfd912c8658a7c0",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "b147363d256d4d239f81d90c66a6b6c5",
      "Inputs": [
        {
          "Id": "83d9a38e98784d52b456dc7644b76342",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "819f2055a7a54a0b89cf9c8f3e06173b",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        }
      ],
      "Outputs": [
        {
          "Id": "3b109215e8ba434691552c541fe524fa",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "b1872427e70444ffb951e754ee875f30",
      "Inputs": [
        {
          "Id": "dc95a7d0d48b48f2a3bd9d38dc8d638c",
          "Name": "item",
          "Description": "The item to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b4164cb16024fbf97cde04fda39d74c",
          "Name": "amount",
          "Description": "The number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0124490846d4a3aa66e78d253cbdede",
          "Name": "list",
          "Description": "List of repeated items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a list containing the given item the given number of times.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"Level Ref\",\n\"Element ID\",\n\"Diameter\",\n\"Discharge Units\",\n\"Qww [L/s]\",\n\"Qc [L/s]\",\n\"Qp [L/s]\",\n\"Qtot [L/s]\"];",
      "Id": "80a549047b094da78629fa734de37659",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "da713df63a114a648ea0d9b622705370",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "4d10082a22304025bfc6005e9d669ab4",
      "Inputs": [
        {
          "Id": "3e0df19459404d25bb284e33a96c3687",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "c72e28523d174171a714f3f8983a82ed",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "360c3cf6b19e441a9e5c99e835a7102d",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "cb3385e2ae8041bc8315487d8fb47768",
      "Inputs": [
        {
          "Id": "178fd387947d4b06b791076ac324e7f3",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "b1db15bf78f24093bdf839aab1599676",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": true
        }
      ],
      "Outputs": [
        {
          "Id": "8e6ea50301484b9096cc5c987ee5c24b",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "5d47ca68ea554722a810b7f0035c4e29",
      "Inputs": [
        {
          "Id": "d3f0036c88ed488faa6b8609f11ced48",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e5bc8284888848c8b0ddb87784c97b19",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da1fd2b33a624c2d91d8990250ae5927",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "f47720629c8b47d6a7a85b84a14551ec",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7f7f1b5fa4a941a282bfacd358c79624",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Id",
      "Id": "97b6d62bf8134e6c833f450c03ccfb89",
      "Inputs": [
        {
          "Id": "cbd988f62a314bda8778d574ed5d326b",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d26bbf1c15144e591a08a9bd3e7d9f9",
          "Name": "int",
          "Description": "int",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Element Id for this element\n\nElement.Id: int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "f6cd3ee3fa764527893ab48338e63ad4",
      "Inputs": [
        {
          "Id": "5470097f46ba4f53b8bb991c8adbb7af",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "ac775f881af64bab9dd27965a8737ede",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "53e2afb14445485392cc45fce555f960",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "26cc3cd8334340f9932263d14a84424e",
      "Inputs": [
        {
          "Id": "ad5d933f41274eae91f84f688180ccce",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "e19c779221ec4de58db1eebc024ac71a",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1c97849f6d740deb6709a345d840809",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "9a8b0e664fea4c02acd859c646a3e2ce",
      "Inputs": [
        {
          "Id": "917ed5530e404de4a46bfc6375460fc4",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e8326857836e4227aa8eb811f3eee6c6",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1e9befacc5b4d48bddd2597e2622061",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Level Ref\";",
      "Id": "9a231e7c543a4664b7f7d3ac814eb2b7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7f099e1a350642619faf3ff3641160b5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x-1;",
      "Id": "3a4ad099eb0f41a98bfd1d2d2813e35a",
      "Inputs": [
        {
          "Id": "3012446eb99b4e26aa0555bfe6340ac2",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "806b641bf8c14eca9f4b5262b63402f6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "290afcf5fa6b430db79b7e548dd7ae32",
      "Inputs": [
        {
          "Id": "767def81642b4387977c1a780add8095",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "50d0d7be0abd43878dd13902f3cb8b1e",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "26f643d3ee864488a02cd06638df9bbb",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "883052f204ce413dad814e3f7aded6de",
      "Inputs": [
        {
          "Id": "d4da95ba91404c479edd9c745e3599c6",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bdb6afc5b21b4168a4978fb87f10640d",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b826e046a5534832909c545ceb767205",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "false;",
      "Id": "bcabc496458941ff962045c3b58a4325",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a031eba9739c4365be9a5970c1f2f67c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "192796d6a94f4822904683e567b89cfc",
      "Inputs": [
        {
          "Id": "05a97608888f40a689b10cbefdbf261b",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0639d6b623a048d39fa958c2156545a9",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "384f017a44af49d0b20588e8260c354b",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "10086fadb9df4bfebbacbc990ba0e93c",
      "Inputs": [
        {
          "Id": "c3f5efa436e4483681a9123c4282fa37",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9a32cd07766341e790e93c49fe1898d0",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "83aa3b746f7449c588eefccdb0ff5f91",
      "Inputs": [
        {
          "Id": "ec0f054388bd40efa4c2e98d2231772b",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "811d55d448264f2cabeec82965e36f19",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "030ac3902fd84866bc2f754e950eaa5a",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetLocation",
      "Id": "98608c080b404b3a896764b308e36888",
      "Inputs": [
        {
          "Id": "0c1f8a04ecf34055a8e1e935e181853a",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "684f8252afa3402b9a15edf3ba5e3d98",
          "Name": "Geometry",
          "Description": "Location Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get an existing element's location\n\nElement.GetLocation ( ): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "677560d958654d1f91bbb92d61fb99fc",
      "Inputs": [
        {
          "Id": "7bd2e7ac3b654edc8f3fcc3e6b2e44d4",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0db30f99fa284ac9abba2a72f488d28d",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the start Point along the Curve\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "8a2bfc6226d04c72aaf3277b36b101ac",
      "Inputs": [
        {
          "Id": "f7b92904a27e4ff596b0a4872bfd7db3",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d0cf243e43674d6eb854fc0d0fe6866c",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6b2dd01662c54533bae42f6f8f7ffc06",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Id": "4d2aa0603b014f88b197fed856c233c1",
      "Inputs": [
        {
          "Id": "0777aa2f9a044b988c3fff1b01fec4fb",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a8a8ee84a557435984c0746403f8795e",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "af86a42435b848a0a6c75afe11c2bcef",
      "Inputs": [
        {
          "Id": "1df9a892c91444fa937232a48acac823",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "75f17284802049359d86d45562f42fa7",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Id": "77bbbb4dd117432caa464988edf3ba47",
      "Inputs": [
        {
          "Id": "3f369786bfeb464d9b0e8cfe6f32d953",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ba2e36d547d044cd80d48f18a689ef39",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Max@double,double",
      "Id": "c45b01dabf3f4cc4aa5f6f773c9c9450",
      "Inputs": [
        {
          "Id": "9764307d3c674aee954a271b95e9f2d7",
          "Name": "value1",
          "Description": "Number to compare.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "436b7178dc9f47ab89aea7e598b0077b",
          "Name": "value2",
          "Description": "Number to compare.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e841b902d4ac46c39beb08d28d0124a7",
          "Name": "max",
          "Description": "Greater of the two numbers.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the greater of two numbers.\n\nMath.Max (value1: double, value2: double): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "878d5da457f445e1a9aeb621c872074d",
      "Inputs": [
        {
          "Id": "ce56b57ca2374d84bd06d03fa237f6a5",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e557c69e269f4a83a6b9a17f8fca348c",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d1732f19dc784bdfb67d6e79241a04b8",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.ElementType",
      "Id": "63cd9b7f14cc426cb6dec151033d898b",
      "Inputs": [
        {
          "Id": "eb7939828c3a4ec8a3c5902cce9cf840",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "797f6b6c3b914fdf9ca098a7d5b1fa50",
          "Name": "ElementType",
          "Description": "Element Type or Null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the ElementType for this Element. Returns null if the Element cannot have an ElementType assigned.\n\nElement.ElementType: ElementType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetCategory",
      "Id": "f46e9220434b492694147fac14f52201",
      "Inputs": [
        {
          "Id": "3e1554cd7ec94c5b91493cc8595718dd",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "27700a6f8b854490b085f1903c5314cc",
          "Name": "Category",
          "Description": "Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get Element Category\n\nElement.GetCategory: Category"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "63e17e25d9214278b4d415cd434c5b35",
      "Inputs": [
        {
          "Id": "d6250120a7014cf3be1537a8322ebbb7",
          "Name": "obj",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c995f4a46f44c198d19e4d04ac76795",
          "Name": "str",
          "Description": "Result of math computation",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "36f90f9ab94f4dc7be06e538c37b3025",
      "Inputs": [
        {
          "Id": "0dd8f2a50b694fe9a7b55d1e46435e48",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4ef10343cbd8419b839cf937f8a7c8d6",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a6a567c0d5749eb999c9c2ece25923d",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b61a8ef87fb34d09b5d49856d05b7e8e",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Pipes\";",
      "Id": "b5ace48024574ce7998398402552bb63",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "73f82f77a00d4dcbadc5b8ec55ba8ad6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "7e414b44ccba43e8b0d38f206482e3df",
      "Inputs": [
        {
          "Id": "5d665f03f0904303bce4d7c38bf07ea7",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "63f969e308cc43b6a7c510917e44d9f7",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "991e0f9c059a464e8febea7706c642ce",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "4ec05ae726994caba4176be0f9c61280",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a28cba6e8170419797ea7303fd30ad3a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"\",\"\",\"Total DU\"];",
      "Id": "8657e06fa3f643899dff8c944067bfd2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "226e300d5dd44db29f995754dab64b33",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Chop@var[]..[],int[]",
      "Id": "3e656fa284264fcb93a2c8fb641046b6",
      "Inputs": [
        {
          "Id": "02626c09300a43af81421a24960e60c9",
          "Name": "list",
          "Description": "List to chop into sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31a7aa8002bf42b8a8374645000051e9",
          "Name": "lengths",
          "Description": "Lengths of consecutive sublists to be created from the input list\n\nint[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0de1524df19c44f4a293cf51d63a306b",
          "Name": "lists",
          "Description": "Sublists created from the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Chop a list into a set of consecutive sublists with the specified lengths. List division begins at the top of the list.\n\nList.Chop (list: var[]..[], lengths: int[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "4430c518157141ad9d8c10ad8953c63c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0c523e54501d4cb2b29ecce8a029b3b6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToFront@var[]..[],var[]..[]",
      "Id": "7e9ea4bf81d24d10ad436129af5dd2a6",
      "Inputs": [
        {
          "Id": "0ed4b8e1c5df4c7b95622aea75a0207a",
          "Name": "item",
          "Description": "Item to be added. Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "69e3dea474ec4fca87dac9494252adcf",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f3d65ba899074b5e85fb5eb50fc6df64",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the beginning of a list.\n\nList.AddItemToFront (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "634b80fe885c4ce882e666b5a24c162a",
      "Inputs": [
        {
          "Id": "6107f9b14c084509b0fa612751e7a529",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a54aea71b3584ccd8feae238da2ba2d5",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be79e66aeb904fbfbce12f4fde5cd3a7",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToEnd@var[]..[],var[]..[]",
      "Id": "6eb4b1bef0c548c18ea71d2d5c8400e7",
      "Inputs": [
        {
          "Id": "fbd17ffce8114de699a452c434a3aad6",
          "Name": "item",
          "Description": "Item to be added.Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7c9355cb25504f6d8ec45e5eb1a73eef",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "04d283ceb7ca4f50b97b4f55fa8cf70f",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the end of a list.\n\nList.AddItemToEnd (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "513a21031eb9426180592be16aa3bab0",
      "Inputs": [
        {
          "Id": "6a46015ed2d546f88d06e33599487dbb",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1832d67ac9814c978fe23dd67f9c3a34",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e7f8e11e7c644fb879e9eb01ab35882",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "b1a80e601da84b219d87bc0714c28cb6",
      "Inputs": [
        {
          "Id": "020028d955a344dbbc477c0a81ca09fe",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "37e494ddf2484470b6c41da3c3da47f3",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "6af6141975924f3abf014e9a99edc96f",
      "Inputs": [
        {
          "Id": "270db87ecf224896822b00cb28fcafbd",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "3979bc868ef148639ae5a015347272cc",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3f7cc6e01fe8456cb3c3283e8e1934b9",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "7;",
      "Id": "6d5289aa59d5426eab8f824b17c08294",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3e094ac0f25d4b558a790bd1a0ae6eb8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToEnd@var[]..[],var[]..[]",
      "Id": "faf49d3896334f76a6c120ba0aeab955",
      "Inputs": [
        {
          "Id": "037b82dfb7de4a02a20b65a97403439e",
          "Name": "item",
          "Description": "Item to be added.Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21fd143e386c451bb0d37dbb9e873c3a",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea4204101c074f0d993b275ce4cd6483",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Adds an item to the end of a list.\n\nList.AddItemToEnd (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToEnd@var[]..[],var[]..[]",
      "Id": "dbc880dd65d643a095c2f5c212df98a3",
      "Inputs": [
        {
          "Id": "900fe43d8ac443eaa59d16d90daedf2d",
          "Name": "item",
          "Description": "Item to be added.Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cce8e44a0ca847578de63a7596f8715b",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1cf7daef02794428aadb1a798aee314a",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Adds an item to the end of a list.\n\nList.AddItemToEnd (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"\",\"\",\"Total Flow Rate\"];",
      "Id": "02135bdee6444df799a38a3fca8f6966",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fc7818ab607b4c85a8a101026ed06d53",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "27b2cca90a3d4d4e8194e1d49eebbc6c",
      "Inputs": [
        {
          "Id": "64177cd983a846a49281ea59982a14e3",
          "Name": "item",
          "Description": "The item to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f6a7a7af84ba4b958138e06e5b3fb172",
          "Name": "amount",
          "Description": "The number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6479bc8f07d54af782f8f2ef29d6393b",
          "Name": "list",
          "Description": "List of repeated items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a list containing the given item the given number of times.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\";",
      "Id": "11c4c95425a64b7dae267b5a88bb2b5f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "71a78de3ceb342809ffd20c153d82c40",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "8f8cba75e23f423d897a65c653b61ff9",
      "Inputs": [
        {
          "Id": "fdc307d4f8254195911d0fa40d8e237b",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "759dbb64de2844ebae7f682a96ded830",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "0e0ddd289c8a4e3bb537175d27c678a1",
      "Inputs": [
        {
          "Id": "a7bd7dcfe7f643668d9df0c8ab7cbdb5",
          "Name": "item",
          "Description": "The item to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c507dc1617145199b947430456cb14c",
          "Name": "amount",
          "Description": "The number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "39a4c276d4004f82b76642a9a29b44ea",
          "Name": "list",
          "Description": "List of repeated items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a list containing the given item the given number of times.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToEnd@var[]..[],var[]..[]",
      "Id": "87c13a1374c343bd8f2171034877a995",
      "Inputs": [
        {
          "Id": "cf312277150f40b2adf8a1ef2f55d41b",
          "Name": "item",
          "Description": "Item to be added.Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1fb81bf138574c43894d201b9a480d4e",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cf2a35b8fd804c65923736a84221fd98",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Adds an item to the end of a list.\n\nList.AddItemToEnd (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToEnd@var[]..[],var[]..[]",
      "Id": "54fb5f1c16564076b4baded8bc62de9e",
      "Inputs": [
        {
          "Id": "18a7d16daf29417ea35087ccd993c42b",
          "Name": "item",
          "Description": "Item to be added.Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "143832d1e2d64ef0bc520e12589f9185",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3db4f3ee827b45c2af3e10ff540b77c1",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Adds an item to the end of a list.\n\nList.AddItemToEnd (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "d7e92a84cc284a32be49078359b94155",
      "Inputs": [
        {
          "Id": "863d7c81315d4aa194d5068c93d63b27",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7ed755cf410343c4931e8224e1e91b1f",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "e44b5335d8f444c38711f7093adc54d8",
      "Inputs": [
        {
          "Id": "b943e26da38f455f97b1cc3b5cf6c29e",
          "Name": "item",
          "Description": "The item to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79d37f1077cf473b9ddfd1de24d55134",
          "Name": "amount",
          "Description": "The number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "14837593a0ad4054818ced50bda5db39",
          "Name": "list",
          "Description": "List of repeated items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a list containing the given item the given number of times.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "bf319ce0734c4f95b014624f5b18f9fd",
      "Inputs": [
        {
          "Id": "b0c34df92b25475fb1743af101e36fad",
          "Name": "item",
          "Description": "The item to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7a9fe7f4ccfe4b6595828ac0ef14cafb",
          "Name": "amount",
          "Description": "The number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2fa12f0ec13b4f25a46eea033028084a",
          "Name": "list",
          "Description": "List of repeated items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a list containing the given item the given number of times.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\";",
      "Id": "bf469116af2e4534983b322c82ded4d9",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c7edbbe4438341ceb8857c4525272708",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "n-2;",
      "Id": "c83390beff744e09a56ef5baec6559d6",
      "Inputs": [
        {
          "Id": "e2e4224844d04133b57affef552de361",
          "Name": "n",
          "Description": "n",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6c9ff65746b5479ca6a31c2b51850ca5",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"Total DU\"];",
      "Id": "2eacc83899ce4814a02bea92c7220c41",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "24809c9f591f4b08a2550c640107e3b3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "f8273ce5bb844e109c8153787b859b89",
      "Inputs": [
        {
          "Id": "022b9a7945e142288253a9fdb5f94ccd",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "faa86628700f40e199f67cca4151257a",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e83536b11e9045d9b2a79a0066063460",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "d4c6bae3bf4945b7ac4da64a5320c94b",
      "Inputs": [
        {
          "Id": "c8d4bcb31bdc40d8a834613061b8782c",
          "Name": "item",
          "Description": "The item to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f95b48f747a84406a8320b2631a3a770",
          "Name": "amount",
          "Description": "The number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "58d4c2441d63491a9c4bc4b28eb38cde",
          "Name": "list",
          "Description": "List of repeated items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a list containing the given item the given number of times.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "fe43b486ffa84fc8bba22b77be57f84f",
      "Inputs": [
        {
          "Id": "52ef5088877c42e2b3d750cb92db9d01",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        }
      ],
      "Outputs": [
        {
          "Id": "6bc0ad59b0c645f39286b60c8955f721",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Math.Sum@double[]",
      "Id": "19b8e375ba8a4786842c21c4e93a8fd7",
      "Inputs": [
        {
          "Id": "69ff254e563247f38a79862b038aca36",
          "Name": "values",
          "Description": "Numbers to add to sum\n\ndouble[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ef83822462604601af089fbe29bf4f7e",
          "Name": "double",
          "Description": "The sum of the values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Find the sum of a series of numbers\n\nMath.Sum (values: double[]): double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToEnd@var[]..[],var[]..[]",
      "Id": "2ad2732b686f4345be1a922c8a8aacf2",
      "Inputs": [
        {
          "Id": "781ed36da83e4bd3ade71e44738a4f22",
          "Name": "item",
          "Description": "Item to be added.Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "c0a4441d1fd74046a480562adeeee6cc",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c1379570469b4d71aaa985fb6543c305",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Adds an item to the end of a list.\n\nList.AddItemToEnd (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AddItemToEnd@var[]..[],var[]..[]",
      "Id": "3977a461dd3245ea95d4f109ca24fdc8",
      "Inputs": [
        {
          "Id": "815a5c761f9242ff8eb510eb9b9d2225",
          "Name": "item",
          "Description": "Item to be added.Item could be an object or a list.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a4b68739834b4497a9b59e0a2d147519",
          "Name": "list",
          "Description": "List to add on to.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 3,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b906070cc0b41ed9f82b70aaf40371f",
          "Name": "list",
          "Description": "List with added items",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Adds an item to the end of a list.\n\nList.AddItemToEnd (item: var[]..[], list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "4fa04a11ab2348528468e553ae1188a1",
      "Inputs": [
        {
          "Id": "a4bb97f1815347439586435a19014e01",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b6e2c60fe2b84f23b0aecd857652234d",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "facd136eb584461d860792ea5ee8ff79",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3b401d89556d4b68ac1de39c87349180",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Category.Name",
      "Id": "4a81315845d64f49ba4c249d75b238c3",
      "Inputs": [
        {
          "Id": "05c4b85f37994c39a95a2c60b8fc0a2d",
          "Name": "category",
          "Description": "Revit.Elements.Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "935ef61be0ed443ca3385803ae008cc2",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The name of the Category.\n\nCategory.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetCategory",
      "Id": "083fcbe66c1641e9bd63d0ac712e25c4",
      "Inputs": [
        {
          "Id": "219408af29bc462581d6aa6e4201fbd5",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fd2b864d4eed45258f169b3a0cbd0d52",
          "Name": "Category",
          "Description": "Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get Element Category\n\nElement.GetCategory: Category"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Pipes\";",
      "Id": "5d4a3bf65543467c8bf3f990d6e23dac",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a35c26e247334d0bbfdb032b4edc6dca",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\n\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\ndoc = DocumentManager.Instance.CurrentDBDocument\n\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\nclr.ImportExtensions(Revit.GeometryConversion)\n\n#Many thanks to Konrad K Sobon for his awesome ProcessList function!\ndef Unwrap(item):\n\treturn UnwrapElement(item)\n\ndef ProcessList(_func, _list):\n    return map( lambda x: ProcessList(_func, x) if type(x)==list else _func(x), _list )\n\nif isinstance(IN[0], list):\n\tsystems = ProcessList(Unwrap, IN[0])\nelse:\n\tsystems = [Unwrap(IN[0])]\n\t\n\t\ndef getNetwork(system):\n\tnetwork = None\n\ttry:\n\t\tnetwork = [x.ToDSType(True) for x in system.PipingNetwork]\n\texcept:\n\t\tpass\n\treturn network\n\n\t\t\t\n#Assign your output to the OUT variable.\n\nOUT = ProcessList(getNetwork, systems)",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "b52f43ba2f934aa89d10b5e2582532df",
      "Inputs": [
        {
          "Id": "81229efe66854f83b9319c1702f2ef14",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e81756ca2bbe466ea4172188ac59b216",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "SelectedPipingSystem[0];",
      "Id": "25c461b6b69649a5a563b78cfd21e0f7",
      "Inputs": [
        {
          "Id": "20f3dc2a1af344f8a244063fee0e9025",
          "Name": "SelectedPipingSystem",
          "Description": "SelectedPipingSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e33a3457351b43dc9b1bd06df296e613",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Export Foul Drainage Data to Excel\";\nnull;\n\"Proceed\";\n\"Cancel\";\n800;\n700;\n300;",
      "Id": "cbb1aa13d1fa47b79a5909eacca481c4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2fe5d380f99f427183267532cf074ef4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "54bf5929549d43afa0185ed88c4b3f72",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1668a60785cb4c6ca373f3ac5cc0f52a",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "be5b383deab9418883c11665898f94a2",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d2712c5184b34d699d09f72903596851",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2a05c08c9d4f4d26be08fb467ffa5013",
          "Name": "",
          "Description": "Value of expression at line 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "de385ca5ec91492c921800c9846cf9e6",
          "Name": "",
          "Description": "Value of expression at line 7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "9fbd05c0-ec1f-4bd3-bf37-969a1552eab8",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "761c09e4a3f94f849e44551784bf826f",
      "Inputs": [
        {
          "Id": "aef1845632d442af95aea4ef64c20e8b",
          "Name": "Description_optional",
          "Description": "string\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7cfa4faf8ac9436a97bd77c4539ede50",
          "Name": "Logo_optional",
          "Description": "var\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "767f506fb09b4d4280447fb37809732b",
          "Name": "ButtonText_optional",
          "Description": "string\nDefault value : \"Set Values\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "915b5ef5ed7343eab389e5e7c895cb23",
          "Name": "Inputs",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "461e6c0a240f4efea8f676e112122573",
          "Name": "Toggle",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "926ebc5643b9418fafdaa4e7be917d0d",
          "Name": "LinkToHelp_optional",
          "Description": "string\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "09f74ca5a3f2454d9de7f0abd6bed28c",
          "Name": "CancelButtonText_optional",
          "Description": " Cancel button will only be displayed if a label text is entered here\n\nstring\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b3192b2a355d45a0abce3844efe84a70",
          "Name": "MaxHeight_optional",
          "Description": "int\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4af492b75cda43cea3ef55a3f5197d29",
          "Name": "Width_optional",
          "Description": "int\nDefault value : 400",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6100bc574149427cb884163492763799",
          "Name": "LabelWidth_optional",
          "Description": "int\nDefault value : 140",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "490f75de4c2f4d0a8dc0338b6cdb441e",
          "Name": "User Inputs",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "59fd61b9a25643208b174fde95d81709",
          "Name": "Was Run ",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "57db494f886944c18d779fc1e87c70c6",
          "Name": "Was Cancelled",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a form with multiple inputs. \r\nsee www.data-shapes.net for tutorials and infos!"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "b8f4e4a6c38a4f6db8f6988767b29e53",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4fc204055d2a4b1aa6b56a9f34a28d2d",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "c3a36eb7-8fe8-4417-b31e-ccc9fded769b",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "9154625af5d1471cb212189c28758b9c",
      "Inputs": [
        {
          "Id": "280a9ef13b4f4eee82270b5fea759c64",
          "Name": "InputName",
          "Description": "string\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe3f9236295741a3a6320f2e5d1cd0cd",
          "Name": "Keys_",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0a0dcf3f94bf4fc5a4c3ce4c22ce8483",
          "Name": "Values_",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c7e874c326f44809978201cf58ff7fe1",
          "Name": "Height_optionnal",
          "Description": "int\nDefault value : 200",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "164b0314a84c4609947b2d64210efd93",
          "Name": "HilightInView_optionnal",
          "Description": " If set to true, clicking elements of the listview will highlight them in a view like Dynamo's watch node\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "98ed3fdd28d54a99b5dc936c88f2c588",
          "Name": "DisplayModeOnly_optionnal",
          "Description": " Turns off ability to select elements. Form will not output any data for this element.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "79dbfa9f4a164843974e7813c67b3abc",
          "Name": "ShowElementCount_optionnal",
          "Description": " Will display the number of elements underneath the input name\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7978b7137a544644984bf84642a750f8",
          "Name": "DefaultValueIndices_optionnal",
          "Description": "int[]\nDefault value : DSCore.List.Empty",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "52c4d32daafe4033a18460e87bc9c161",
          "Name": "SortItems_optionnal",
          "Description": " Determines wether the ListView items are sorted or not\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "81be602106c948fbb1f98d912e4423e4",
          "Name": "ShowId_optionnal",
          "Description": " Warning: disabling this will cause the listview input creation to fail in case there are elements with the same name\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f39f61fea17048fe9c9f7919f0632619",
          "Name": "ListView input",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create data for ListView input in UI.MultiInputForm ++ . Check out www.data-shapes.net for more infos."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Select Systems\";\n240;\nfalse;",
      "Id": "626b72997c774390b37ef84d7edf2741",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "22f504331dc24676b845ff9c3236b3fb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d0b0659a45b84db1856fdfcc7f9f1e47",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a8bb84313104d72b1d1cbed87f249d7",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "FirstUIWasRun == true && FirstUIWasCancelled == false? true : false;",
      "Id": "92286fe331554ad69637b553b26a0753",
      "Inputs": [
        {
          "Id": "05162a6677ce41cca0df4955ce99c0e2",
          "Name": "FirstUIWasRun",
          "Description": "FirstUIWasRun",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c856f8600ffe49d7b9a75d9760caa60f",
          "Name": "FirstUIWasCancelled",
          "Description": "FirstUIWasCancelled",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "90d900dbadc84c84a96de8a21cf3fee3",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "e6f364a085024b37b6a51b6a4f133dcf",
      "Inputs": [
        {
          "Id": "bc7e312b9e67433ca51a1d3d8efc9ca4",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa39a5cdece741c587b785a2bce04bb3",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f86b0d9e8d454cee8eaf347b722a7d0b",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "32efe35954a94cab8784af2213505297",
      "Inputs": [
        {
          "Id": "53ea1a8a795240c3be71101ccbd4a450",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9dc2902baae44a2fa7503ec8724a7968",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "24fa9f6532df4897b39b93a77195be19",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import re\r\n\r\nlist = IN[0]\r\n\r\ndef natural_sort(l): \r\n    convert = lambda text: int(text) if text.isdigit() else text.lower() \r\n    alphanum_key = lambda key: [ convert(c) for c in re.split('([0-9]+)', key) ] \r\n    return sorted(l, key = alphanum_key)\r\n\r\nOUT = natural_sort(list)",
      "Engine": "IronPython2",
      "EngineName": "IronPython2",
      "VariableInputPorts": true,
      "Id": "ca28b553ff394925ab28350fdeffa51d",
      "Inputs": [
        {
          "Id": "dc129c25fcdd44b08cfea159891e5dd2",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0fe42dd3aa2a4a2db0917dfb5425a039",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "4fa47f8a5b53489fb3faa8439accf10e",
      "Inputs": [
        {
          "Id": "430aa6c6829f4825a61aa57674c1494e",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "11bc94e6c0c646cd9ef3dedd2cb56d2e",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "b7a5870f65054faf940ff4591d2acd2f",
      "Inputs": [
        {
          "Id": "80446d840dc042e19fa8949b7e1fadc3",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d7df8d542039417cb93662b02911fdff",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd3d91ab1c784b8ea731fc65e111aa6b",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "bff24f250c2045369449b03c1df3d93d",
      "Inputs": [
        {
          "Id": "539b636bf05d482aa9755efb83504d06",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "181808daff9b4ae58c8edd195e32824d",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7e5729bc0e28439887341c8788eec95d",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c4ca9d7f512248b588b2e416b0e11cf9",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "0a7f2f3d0d364f9ca4da94ffb1a23a06",
      "Inputs": [
        {
          "Id": "45a16e2c88044b42bd86d33cd2c24c83",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "44724d23bae749eb9873e445397e7993",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "a90bb234f98f41fab8b270c9f7c47eff",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "018c769761354448b66876b83e58f0f6",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "87968a4b2bc041259f68cbd2b95e60ed",
      "Inputs": [
        {
          "Id": "6fa70be5a991405c89cec37862bc1a11",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2180bf3b950141cdad2a7c95a1b59521",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"Ss_50_30_04_97 - Discharge\", \"Ss_50_30_04_97 - HT Discharge\", \"Ss_50_30_04_97 - Lab Discharge\"];",
      "Id": "ebac83c2137e4a379f489544d3037a8d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "64e1226517334b3b8b8158ccfb326823",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.ElementType",
      "Id": "e27fc74ba0144f58ac5ce92c274ba132",
      "Inputs": [
        {
          "Id": "5a83e5c255fd462780e13665007f979d",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "35918ee94aee4cd5b1d4356aba9f3278",
          "Name": "ElementType",
          "Description": "Element Type or Null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the ElementType for this Element. Returns null if the Element cannot have an ElementType assigned.\n\nElement.ElementType: ElementType"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "7eea5245523a4db0a0500979955476ac",
      "Inputs": [
        {
          "Id": "8690eefb8dc0441aa7f4538f26ac0c7b",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4cfc2fb369c246d9a5a928ded1801864",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Category.ByName@string",
      "Id": "f9e2041064914f298dba909b18223162",
      "Inputs": [
        {
          "Id": "5d9e6a1be94644e5bb33d71dd677cc72",
          "Name": "name",
          "Description": "The built in category name.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d6d447380e6847c8b61414756995e92d",
          "Name": "Category",
          "Description": "Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a Revit category by the built-in category name.\n\nCategory.ByName (name: string): Category"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Piping Systems\";",
      "Id": "cf4bbd0bc8f041019d4a81a5a7844423",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ce9e327ca44b456fb4b123a3226ef2dc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "b269e5e6fd5b43b89ab7dd9aa6b48e25",
      "Inputs": [
        {
          "Id": "a33ac32f8d6b467dbfdff33960c59046",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ea44662eafa0488182b60abfa3c30903",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fe304bdf135b4a518ceed1d8eddb36de",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5441519d8a0c4606a9783263bc8f5628",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "4abff87f-8dad-41a9-bcf6-98784ac456eb",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "58b9d01a62574d50a2824185dd2003d0",
      "Inputs": [
        {
          "Id": "b1147736737e40079818fd55a1937e07",
          "Name": "InputName",
          "Description": "string\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fa1e861ef440421cb7b5d8b600fd1367",
          "Name": "Keys",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c815110baa704329af0544f7cc50bc07",
          "Name": "Values",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1ac734445fac4dc8ac2b06cbcac653a9",
          "Name": "DefaultValueIndex",
          "Description": "int\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7f7dc9c183ab4a9e9cc001f9f4e20313",
          "Name": "RadioButton input",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create radio buttons input for UI.MultipleInputForm ++ . "
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "219697d9-d6eb-4f4a-97d6-1fc8acac27a7",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "9bac6a8c2ba9413da4700fea70f31c02",
      "Inputs": [
        {
          "Id": "71960ea913464a2ab5b1e6b442b40957",
          "Name": "InputName",
          "Description": "string\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4f8d3be407614e6f8924f3b4705ef50c",
          "Name": "DefaulPath",
          "Description": "string\nDefault value : \"FilePath\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cb3b335a815046f6a8f7a3dcd158047a",
          "Name": "ButtonText",
          "Description": "Is ignored if a default path is given\n\nstring\nDefault value : \"FilePath\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "464e86319fda4ee9ba0461e11693fa42",
          "Name": "FilePath input",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create filepath input for UI.MultipleInputForm ++ . Check out www.data-shapes.net for more infos !"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Excel File\";\n\"Browse...\";\n\"Select Foul Drainage Calculations file\";",
      "Id": "73e9486c14aa41b98ad5dbb02edc554b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "621d216c3918467383cb13d9eed80086",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dc46a045c24741a5997aa615fe5bf5be",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8669e227259247449c5665ab9bfabba8",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Use 'Manual System Name' Parameter?\";\n[\"Yes\",\"No\"];\n[true, false];",
      "Id": "a5a63ed47bee43e799cf673ef2b218a0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b3215403f3ca4425b85c7eae429fc404",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bfb9b07cae694d0c8ae7d51d0893280b",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db8034cec3c64e619057c00e5280a80b",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "581918af981b44caaef6993ad5eac3b7",
      "Inputs": [
        {
          "Id": "cfc6247723014ae9ac2320d792cb8ad8",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "613523355f354bff92a26ecd08975374",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "517fb581e6d740ea9f1d193aa9fa5806",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cf66f1c9559343d7b5d4fe1c3ed17060",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "UseManualSystemName[1];",
      "Id": "8667cb08fc8340af9becb5409d09faca",
      "Inputs": [
        {
          "Id": "ecde1d5240da4390887e6219c4793339",
          "Name": "UseManualSystemName",
          "Description": "UseManualSystemName",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69a7cf5b7bd34bb68f0ab5ace041e46c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "ExcelFile[2];",
      "Id": "fb11fb8cf3784331b23edd743b10c6b0",
      "Inputs": [
        {
          "Id": "af0d4bc4121748758c7780753196e108",
          "Name": "ExcelFile",
          "Description": "ExcelFile",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f0d04c9e63ac44ff9fe55fe353bf58aa",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "874675e66aa14e9a80d5856c8ab4093d",
      "Inputs": [
        {
          "Id": "41f84079c257497686c1cc196454b38a",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c7f0b29eb2884547bcfbc071bc4c8267",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "961ce56654024e27989a85b800ef6a40",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Family\";",
      "Id": "3b5c580065f945b8b6d9078e9d40bc6d",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "7b038e2b550042cb83b20993797a463c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "c7edacf00156490c812fb95584a53225",
      "Inputs": [
        {
          "Id": "bbb81748babb4200b13ac1ced6df0e6b",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e08cba6c99b0409787b90e41cbc88e27",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "79be690903674332a1b7929a8c8cf38e",
      "Inputs": [
        {
          "Id": "a0a0d54668514e5aa469da32e48a7da2",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "339db873ddbe4b1a898f5e707c622606",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f334e382577d4b4391f688e229bb98c5",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b8b678d4e0f64caa80ffa6360c5aa444",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"HL_FoulDrainage_SizingConnection\";",
      "Id": "09f13a316774443daececa35962e2486",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2d15eec653754d1f9fd19f530cba16f4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "List.TrueForAny@var[]..[],Function",
      "Id": "57565604ce064456bdb0c0eeff657916",
      "Inputs": [
        {
          "Id": "7556d86e4e4145eab2889d75e96daf12",
          "Name": "list",
          "Description": "List from which to evaluate items by query function\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1dab94ca54c74e73a1b1fc29c6fceee3",
          "Name": "queryFunction",
          "Description": "Function to evaluate list\n\nFunction",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "850fe05866414359a1774eb082692daf",
          "Name": "bool",
          "Description": "Returns true if any of the items in the list evaluate to true with the query function",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Returns true if one or more items in the list evaluate to true with the given query function\n\nList.TrueForAny (list: var[]..[], queryFunction: Function): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.Identity@var",
      "Id": "1f3539fae9524393841c011ba4c0e5c4",
      "Inputs": [
        {
          "Id": "8b8e2af5f4414bb8ad453cba3b32e416",
          "Name": "object",
          "Description": "An object.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3a09b5a7e0e941d3afd02367123302d3",
          "Name": "object",
          "Description": "Same object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns what is passed in, doing nothing.\n\nObject.Identity (object: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "b21f292bfb514bb38f89635706bb6987",
      "Inputs": [
        {
          "Id": "94400c8f7adf4070be48dfa8a89cb7d3",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "898cad142f1c47f0b144ec36cba39a27",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e624eedaaa2e4cf7852e24a7c9603fce",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9196e28f9afe4a4f810983d5cdf2726c",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Levels",
      "Id": "094793c38b33459f88ade7cc21753aca",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ed854d53049740f3a1f79b45ba6f2b9b",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Category.ByName@string",
      "Id": "45d62dbc516e41c7bc3c0bab4e8cd033",
      "Inputs": [
        {
          "Id": "0ab4c3453afb4dbc9f77dddbfcf9b24d",
          "Name": "name",
          "Description": "The built in category name.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd100f5fcf1b45baa7878df06f740d1e",
          "Name": "Category",
          "Description": "Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a Revit category by the built-in category name.\n\nCategory.ByName (name: string): Category"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.ProjectElevation",
      "Id": "0e94d9c8d04e44c7b6b915049fcae76f",
      "Inputs": [
        {
          "Id": "35481b3318b4419aa6d82bc8cfda6be2",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2ca6728ca1354ee6ae1a4e8492ddb6f0",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Elevation relative to the Project origin\n\nLevel.ProjectElevation: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.ProjectElevation",
      "Id": "9cf87ad71eec47bf8e846d886af1dab0",
      "Inputs": [
        {
          "Id": "4dd8ce9d370240ea910294cf60f40b45",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2fd61e6c839142fc94f474962dbb59cb",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Elevation relative to the Project origin\n\nLevel.ProjectElevation: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Category.ByName@string",
      "Id": "09ca0be0504f41d8b0af22b519a88c27",
      "Inputs": [
        {
          "Id": "47dcd466acf643e48eb3b98ae692f2d3",
          "Name": "name",
          "Description": "The built in category name.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8a3e48a24b914aafb40324df512c403d",
          "Name": "Category",
          "Description": "Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a Revit category by the built-in category name.\n\nCategory.ByName (name: string): Category"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Piping Systems",
      "Id": "d8457ff3e1c742b9be07c694aa2764b4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f6943d0031d64717a91c5a14851f2c77",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.ProjectElevation",
      "Id": "cb79eab257ff45be89bf6890e7b9fc97",
      "Inputs": [
        {
          "Id": "be9dd150d6db493ab424c9271836b61c",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "498d33dea8074174815d1d707f38d050",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Elevation relative to the Project origin\n\nLevel.ProjectElevation: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "0c7ebb62b9af4bebb47a9e1c1b02fff7",
      "Inputs": [
        {
          "Id": "5c3dac6117c444c1819c8e7641a14341",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "74858441e43348c29476d435b974d56e",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "530669e5f5e14352b5bdf2b08aec8212",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.MaximumItem@var[]",
      "Id": "3eef81fb84af409a9422382352919879",
      "Inputs": [
        {
          "Id": "c9bdcf61c7c54ffcb9a58986e9982942",
          "Name": "list",
          "Description": "List of comparable items to take the maximum value from\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "03eddc54ed3b495c9d247b35a6197714",
          "Name": "item",
          "Description": "Maximum item from the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Returns the maximum value from a list.\n\nList.MaximumItem (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"User Defined Appliance 1 DU\",\n\"User Defined Appliance 2 DU\",\n\"User Defined Appliance 3 DU\"];",
      "Id": "e9d376e498074c168ef2891f0947499e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c2bdaf09e99a4f099c7123a7a729df0d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "ee2bfd6a-235b-4c14-a309-f5cb3e3e3227",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "2369ce4844024afe8f3070cbed835a37",
      "Inputs": [
        {
          "Id": "19086b61632c45ee80fdafa986c71044",
          "Name": "sheetName",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9e763370e4ad4b6f9e7568a380cbddc1",
          "Name": "origin",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6fb1df47259040afa22d76319285131d",
          "Name": "data",
          "Description": " Data in form of a list or nested list \n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "01170e634c6249ba874181c99ce7c721",
          "Name": "BBData",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node is a building block for different modes of writing to Excel files. You can combines this node into a list to write to multiple sheets or use just one to write to a single sheet. "
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "72e88648-ec17-4934-8376-d6c1f6183d67",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "8717b3a0c1ec499ba4e6d12b97e8de80",
      "Inputs": [
        {
          "Id": "8e3d4c1199744da3952d1ae59c1ec259",
          "Name": "filePath",
          "Description": "var\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b835fc611ac24b02b12a1e878c585376",
          "Name": "runIt",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "927e8a2c55bd485e9c5c551ccfa0ab38",
          "Name": "byColumn",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d3885266cb594d23b6c67b9d5d25dc73",
          "Name": "BBData",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b267a6e7895b43b285133498244d24cd",
          "Name": "OUT",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node will write data to Excel file and based on how your BBData nodes are structured it will either override the exsting file, create a new one and write a single worksheet or write multiple worksheets. "
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Systems & Pipes\";\n\"A17\";",
      "Id": "a2d56018f03743c784ea03651019a0dd",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f025cb79b0b24354a46829acaa362bdf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e003bbd1239e4a06be574fea0a157b88",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "8aab4ee5c1994f7fa10d4fe6f3a5cc3c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f7b90435d43f417480e01bb6bed4acce",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "72e88648-ec17-4934-8376-d6c1f6183d67",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "6db41ea289fa44a699582ebd09cd64d6",
      "Inputs": [
        {
          "Id": "5a2590fe53084290ba1adfeb19a145b0",
          "Name": "filePath",
          "Description": "var\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e5fdfc46a9e94d9caf95e593e96d6871",
          "Name": "runIt",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "85dd741d78794932aa0d0ceef9b16bdd",
          "Name": "byColumn",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1c53eb83a0b04f92b778826c37d71a15",
          "Name": "BBData",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a6b2e13b945445a9b8276997dfeca914",
          "Name": "OUT",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node will write data to Excel file and based on how your BBData nodes are structured it will either override the exsting file, create a new one and write a single worksheet or write multiple worksheets. "
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "72e88648-ec17-4934-8376-d6c1f6183d67",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "dbbf828dbc8744b080de92030a481fc4",
      "Inputs": [
        {
          "Id": "0a07551b0ac748c69023451631c2b406",
          "Name": "filePath",
          "Description": "var\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8dabd27acd53459391f35b40104aebbc",
          "Name": "runIt",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3c7745b2cf6b4d72bc85aef3feefa6c4",
          "Name": "byColumn",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c6c3ce24ff5046f3b0dec904b0a1fd09",
          "Name": "BBData",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e3b361e467f147eb8b10d9121e9d1102",
          "Name": "OUT",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node will write data to Excel file and based on how your BBData nodes are structured it will either override the exsting file, create a new one and write a single worksheet or write multiple worksheets. "
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "ee2bfd6a-235b-4c14-a309-f5cb3e3e3227",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "59c15f3e98494ffba9b19ce033d3c513",
      "Inputs": [
        {
          "Id": "c257287376bf45ef990cbc51597ca3f4",
          "Name": "sheetName",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8b81833c901e4440a2b5071617254830",
          "Name": "origin",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "75884fd0de7e40b09544e20703b2bbfa",
          "Name": "data",
          "Description": " Data in form of a list or nested list \n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d773e8ce582b4c349268479c00b43a68",
          "Name": "BBData",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node is a building block for different modes of writing to Excel files. You can combines this node into a list to write to multiple sheets or use just one to write to a single sheet. "
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Systems & Sizing Connections\";\n\"A17\";\n\"S13\";",
      "Id": "776dd0cbd01648feb201e2273bf9b6f8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "33b994141bd84e68933a3ba7781a64dc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ec64038eb7304a06a6ad36f136340fde",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a6b56b12bd6043d985b41b364f550fce",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "ee2bfd6a-235b-4c14-a309-f5cb3e3e3227",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "36ccad711c094b67a51090c1fe0b7ec8",
      "Inputs": [
        {
          "Id": "9b931889776b472e8fa453848301fe7a",
          "Name": "sheetName",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "955a81abdc7d4d23aa206bed4c27d1e0",
          "Name": "origin",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "406815b2dd4e4d25b671b2fc359bd29f",
          "Name": "data",
          "Description": " Data in form of a list or nested list \n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23f14b22d37244c2ba27a147cad43147",
          "Name": "BBData",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "This node is a building block for different modes of writing to Excel files. You can combines this node into a list to write to multiple sheets or use just one to write to a single sheet. "
    }
  ],
  "Connectors": [
    {
      "Start": "7462fc9dc1504046acc9e7bc7276132e",
      "End": "0264382c5fbd42f2abaa10b84a356d80",
      "Id": "3d77e925e5a9475c9445876db0b97295",
      "IsHidden": "False"
    },
    {
      "Start": "7462fc9dc1504046acc9e7bc7276132e",
      "End": "bcf85a001c0a473c937840d2ead4a5a3",
      "Id": "ba99540ca08248a9860edcbef77ea60b",
      "IsHidden": "False"
    },
    {
      "Start": "47f2b0f9e4e44160be557c07d97d7661",
      "End": "6ca344610a4e415faf851d769b2e9868",
      "Id": "9c0dbd2759a34492bd7678a07c92c8a2",
      "IsHidden": "False"
    },
    {
      "Start": "19678bc389bc48abbe25d412a8ecf0da",
      "End": "cf6a24c197f04b61b9030b98955ca8d3",
      "Id": "c2d7ceb5045547a896446d6a1038d48e",
      "IsHidden": "False"
    },
    {
      "Start": "fe15e1b6eb6740f09fb19b14e45961af",
      "End": "df382ea86a884a6094296194574ae827",
      "Id": "dbbf13a4f25746b096a657fbf1d6b350",
      "IsHidden": "False"
    },
    {
      "Start": "e20c86b1fbe3479986925c4a75505f83",
      "End": "616398d11206405d806f7102174bc93e",
      "Id": "1d68fed95c244e7eb373f456481b390e",
      "IsHidden": "False"
    },
    {
      "Start": "b4c0819cd61842618060914b30028efa",
      "End": "ea14175c3ec6420e8bcc7bec98ebb7ac",
      "Id": "6ce4d1848a494ce6b4fda13986bf2e8d",
      "IsHidden": "False"
    },
    {
      "Start": "b4c0819cd61842618060914b30028efa",
      "End": "b9869df847f342a38c09c51e5f716167",
      "Id": "0e39fd3f63364297936538eb7c74a1c3",
      "IsHidden": "False"
    },
    {
      "Start": "a62ef9e1b9ee410b836e0f913dc6da0a",
      "End": "70fc4dac027d41f0afe4adc6de183fa6",
      "Id": "2314766d55b947a9becf032bd7e61bbb",
      "IsHidden": "False"
    },
    {
      "Start": "67abfa2480714e159964f6ad3801e3ba",
      "End": "03b1899abce3437a942909a5e70302b5",
      "Id": "258dd5aa9f5b41c0a8069f887610a9aa",
      "IsHidden": "False"
    },
    {
      "Start": "9abb94b16e7543e8a180eabdac0dffff",
      "End": "4f6868547a974386b60a39a4f0a6b5f3",
      "Id": "eacc534dc8a54b9eb291e16510f85b4b",
      "IsHidden": "False"
    },
    {
      "Start": "a6c923e3a2ca49718bf736f9037ec423",
      "End": "54dd726a7e5145ff90bce45d1219e521",
      "Id": "ba433673a1db4d31afa555aeea3f16da",
      "IsHidden": "False"
    },
    {
      "Start": "d102fc5608ef404aba7e770dcac4c4a9",
      "End": "df596b2dcd5a4eb99c3880d9bbd4f767",
      "Id": "dfa7cf09b6ab4b5f95db94362308dd52",
      "IsHidden": "False"
    },
    {
      "Start": "9567b802e5444998b240796c4d001fdd",
      "End": "f93e96e3884e4b47b502b88a6b4aac6a",
      "Id": "5b1f3ff02fc0400ab510b5a19865bbbb",
      "IsHidden": "False"
    },
    {
      "Start": "a5491a37c7c24fe49e09f6825c944a1e",
      "End": "dd29a5105ec548a9b36c6c24610e606c",
      "Id": "4e047f952cbb4aa185b3eb0afc2c4464",
      "IsHidden": "False"
    },
    {
      "Start": "227e90ef1d7f4097b56e30b2f4ada603",
      "End": "c12bdf8b526446de8f62c453d2e2a41e",
      "Id": "e4445a4ab2394f839fc0282d25da5363",
      "IsHidden": "False"
    },
    {
      "Start": "227e90ef1d7f4097b56e30b2f4ada603",
      "End": "3e1554cd7ec94c5b91493cc8595718dd",
      "Id": "adcc0b96b381449baf1b079a445fa042",
      "IsHidden": "False"
    },
    {
      "Start": "aee5d1bd17f1455aac6645bc8d381ad9",
      "End": "b5e4c088050d47a8805b9e995161a2b3",
      "Id": "c8df26500247457caaf9f837040de323",
      "IsHidden": "False"
    },
    {
      "Start": "4ecac9dae1dc48d384128cabb1c54c69",
      "End": "bd1281ef8a3e433db181305279011073",
      "Id": "02931f10b46241ee97dd98355abfae1a",
      "IsHidden": "False"
    },
    {
      "Start": "4ecac9dae1dc48d384128cabb1c54c69",
      "End": "44487fa19df944998aefde0e2067f377",
      "Id": "8b34d5a4be514edfbdb98c7402895406",
      "IsHidden": "False"
    },
    {
      "Start": "13172a7f5e13432989bda889780d01a5",
      "End": "085bb1cc77c644349fbffd885642ff27",
      "Id": "b1ad99881c43471bb79fe66daa1c5ccf",
      "IsHidden": "False"
    },
    {
      "Start": "7c1517888b1641858cfd509dbaee01ba",
      "End": "74a1b6e1263e410591f6b186b9e9be86",
      "Id": "e117241015694458a2fc28395bd684c4",
      "IsHidden": "False"
    },
    {
      "Start": "ab89bcb1e78e458bbce68cccf26e92a7",
      "End": "ca99913e370443eba32a217f66e1463d",
      "Id": "0405ccfa272e4f519e1d11e482a1f950",
      "IsHidden": "False"
    },
    {
      "Start": "4002dba09bcd40dc83d1aad048131935",
      "End": "0dc812eb529b4a858b9e606efde61470",
      "Id": "7c9ff10044334dbf81095feafd598e7e",
      "IsHidden": "False"
    },
    {
      "Start": "84aa26e65eaa49b79437075dc3d6bdd3",
      "End": "ff01f88a752849fd81d482b1a9668a46",
      "Id": "6746f579e47a4adca14ca38b78bebc02",
      "IsHidden": "False"
    },
    {
      "Start": "d898a91ecc7d4f6abfcc96e153d85021",
      "End": "74498c24accd43c1b8c6a0fffecdebb4",
      "Id": "2eb7c95bf6e64139adfb647a02bff9f2",
      "IsHidden": "False"
    },
    {
      "Start": "d898a91ecc7d4f6abfcc96e153d85021",
      "End": "5049c44f5d76492b8fe3e5c85b119b97",
      "Id": "892ec44ab5b145afa73fd8abff210c9c",
      "IsHidden": "False"
    },
    {
      "Start": "05b5c48dee7a4ea48ee21373d0be1dff",
      "End": "ecebe36e6aa84b33972df80ab8151ffe",
      "Id": "1fafec9b860949a5ac92376f2e0b0333",
      "IsHidden": "False"
    },
    {
      "Start": "05b5c48dee7a4ea48ee21373d0be1dff",
      "End": "a6f8945f65aa4a25bbdf634a8550becd",
      "Id": "de38635819a549f3ae23b4d7423a1021",
      "IsHidden": "False"
    },
    {
      "Start": "05b5c48dee7a4ea48ee21373d0be1dff",
      "End": "030e34840a6341b18ed7eb826d6380ba",
      "Id": "1b8f2282ed5a4e019daa6d734d371797",
      "IsHidden": "False"
    },
    {
      "Start": "094d9711ee3641a3b14d5b299e048de5",
      "End": "4229f123c96f4819883645e729371cd3",
      "Id": "737fb243e39c4c8daf7db03088eb103f",
      "IsHidden": "False"
    },
    {
      "Start": "f3a16adbf4ac41bd9fda170456c20e5e",
      "End": "0df28bbf68914435845066494ee8a4de",
      "Id": "045f64e91114489aa9076f35c8e0b839",
      "IsHidden": "False"
    },
    {
      "Start": "321d49fd84c042cb8aacd24815bdbbc8",
      "End": "a2d7b53c92764158b75d929097767095",
      "Id": "7c24edd4754a4dcba7e99c1e8398afef",
      "IsHidden": "False"
    },
    {
      "Start": "1a86623c5de443eb9dacffbec4adad4d",
      "End": "ae1d1f39cf5f4528b73a280f55b40400",
      "Id": "b76a9fe4f0c64be187c6296e7f52c90d",
      "IsHidden": "False"
    },
    {
      "Start": "d051d9f1a84b49ab89413e22ed895aa9",
      "End": "fc0d53fb51b64717b27e87b4d062ca60",
      "Id": "9d57988aa99140cd835285c42eacc478",
      "IsHidden": "False"
    },
    {
      "Start": "4f8a70edd87144c8a8b147fcbc703bbb",
      "End": "e4a795675b2c416ab54d8a7aa5c62de6",
      "Id": "bf1d991181a54329b4c82c0478684833",
      "IsHidden": "False"
    },
    {
      "Start": "b489ff11f1fc416f8fbe1b28f919a779",
      "End": "f53bb3e8d33548a8a2cbe6e3cae21a38",
      "Id": "1318c268a5554a66b82362627e069e07",
      "IsHidden": "False"
    },
    {
      "Start": "6245135310c74043b6e6ec69f3ee4a13",
      "End": "d34747bae02b4dd482639915dfcbe41c",
      "Id": "f0e86cae23fd4d899a9b110c35ae4ea8",
      "IsHidden": "False"
    },
    {
      "Start": "66d724eb985d4ea4b83070a2825de1cb",
      "End": "34e6f13f87de440ca039529bbbe9f850",
      "Id": "fcb81d51f84740a7ad674e27e709b688",
      "IsHidden": "False"
    },
    {
      "Start": "724da10b9fac4dbe93e5a6971efd230b",
      "End": "d28ea3e128fa473bb8769667269cec58",
      "Id": "95e61289ffa144c4bcf24507d59627a3",
      "IsHidden": "False"
    },
    {
      "Start": "724da10b9fac4dbe93e5a6971efd230b",
      "End": "270009a3ff67439ba2b5b1ab355a7df2",
      "Id": "bf01a06338d94abdbe5b5584fed31b27",
      "IsHidden": "False"
    },
    {
      "Start": "6faa6222a73c49adb477ada4e9d5eb70",
      "End": "e1c23c0d6f6f435c83646d210fdbdb75",
      "Id": "a925f827253e4697b64a7680ae15e5b0",
      "IsHidden": "False"
    },
    {
      "Start": "f5167d6ab5784ff1aede0edcf93df205",
      "End": "f4e7056df4cd409ba6b01f81795b75ba",
      "Id": "8d4efc5ae7eb45649f0bf19f88e263f0",
      "IsHidden": "False"
    },
    {
      "Start": "d0fbc24443fa459492de9ebe31038f5e",
      "End": "a147104540024ef2a06e4550d16620db",
      "Id": "371d7c807c5f4000b89008d17a8bc80e",
      "IsHidden": "False"
    },
    {
      "Start": "74e86dc5f5b74947881e9eb5e27589e8",
      "End": "ad053d04ce0e44099701c192f4724bb1",
      "Id": "8bc56c31c4644777bde738d0a1d27843",
      "IsHidden": "False"
    },
    {
      "Start": "74e86dc5f5b74947881e9eb5e27589e8",
      "End": "a88be71272f646e38bfb6946c208c2a6",
      "Id": "7f703fb8af11405fb6ef6cc80d1cb448",
      "IsHidden": "False"
    },
    {
      "Start": "74e86dc5f5b74947881e9eb5e27589e8",
      "End": "a33de88025a8433fa3b31aa522ccfb47",
      "Id": "803974267c8547d887ea94ca62fb1ddc",
      "IsHidden": "False"
    },
    {
      "Start": "a9169eb560634b489da9d08208080789",
      "End": "fa59d34688154f858a01841d07acd1db",
      "Id": "0a9639b09b4b48edb21291026800621a",
      "IsHidden": "False"
    },
    {
      "Start": "00fb16a8582f4e40a5392a247d79b80a",
      "End": "7eb7c5ba9c864962ae7c237488c946ac",
      "Id": "9393492a35504f1e84e6d88878539e7e",
      "IsHidden": "False"
    },
    {
      "Start": "7e54f864be0f484ea5d5fe0e347b5c55",
      "End": "33da3caf1f8e4e7886a80e66a67aa610",
      "Id": "63bbdbfe88044fddaaaa7adf864da03e",
      "IsHidden": "False"
    },
    {
      "Start": "98133511f0f845bca737708498cbdf98",
      "End": "d6e13f2df9fa4ce7ac018d4540d9830f",
      "Id": "9252012e79974eaea5923615cc91f08f",
      "IsHidden": "False"
    },
    {
      "Start": "aaf05cbe71754175ba183e5a1aca72e1",
      "End": "deb687ed291b488da8e61aba817d95ca",
      "Id": "e84d8214e1a147c1a858636d8641d1fa",
      "IsHidden": "False"
    },
    {
      "Start": "964ff51eb01e4a69863114691a1bac8b",
      "End": "366696bebc7045a796641628c3fa97ac",
      "Id": "09c368b1e028461d804fec93157d9324",
      "IsHidden": "False"
    },
    {
      "Start": "db11e93ea0684418a1b9e5f45b139a5c",
      "End": "25b4724dc7ef4b5f903ded8596b802f7",
      "Id": "03a64fe1b8ae45dc933c228ac1051c13",
      "IsHidden": "False"
    },
    {
      "Start": "db11e93ea0684418a1b9e5f45b139a5c",
      "End": "71ee4d8d816b4c629e3ae1101776fbbd",
      "Id": "17aec46d47d54ff08065353e17dcb2fe",
      "IsHidden": "False"
    },
    {
      "Start": "c188983d665b438484c21de17d29ef0b",
      "End": "507c39c41c574b6c8e49f2c06bb1df66",
      "Id": "7f05f4c003fe4cf1ba9080d7e76401f4",
      "IsHidden": "False"
    },
    {
      "Start": "4392e4232f2c4d87a96d6276b59105fb",
      "End": "66bd9fa39eb544b0ad334bde19a0e184",
      "Id": "e065ad514a1f461b91f419c1dd41fc00",
      "IsHidden": "False"
    },
    {
      "Start": "342e0cdb85de4fa7a2d975bac240aa08",
      "End": "ca39c1df7d6d4434b95ea3fcb7ed1c8b",
      "Id": "c59e4dde1abb44e5aaac12e05713dc97",
      "IsHidden": "False"
    },
    {
      "Start": "e217586101e24f14a05e8c0da8487683",
      "End": "a490a61fedea4752aa5d4385c4afde86",
      "Id": "97a009e80abe43a5a82f0320704ce3a6",
      "IsHidden": "False"
    },
    {
      "Start": "e8eb45d51bcb4c6aa629e0f0e29241d0",
      "End": "c1f630bbf93c46b3bf939ec1f3050f2c",
      "Id": "8e8a1dbd425745ea8e63bd935804a31e",
      "IsHidden": "False"
    },
    {
      "Start": "e8eb45d51bcb4c6aa629e0f0e29241d0",
      "End": "62c1c2de66ef43af80d7247962b60b48",
      "Id": "a3cc7d82cb6b48cea92a83be000c0cd5",
      "IsHidden": "False"
    },
    {
      "Start": "e8eb45d51bcb4c6aa629e0f0e29241d0",
      "End": "178fd387947d4b06b791076ac324e7f3",
      "Id": "a7ab614515d245f98e3b22a17514f520",
      "IsHidden": "False"
    },
    {
      "Start": "ad65b4b4ff884bf094f3497ba0995807",
      "End": "d7b62dd0a5984e26b7cd16dd6035b138",
      "Id": "c22e507d545d4077b62481aedbcfed47",
      "IsHidden": "False"
    },
    {
      "Start": "c756fa985efa4af0b7ce04a469ab0989",
      "End": "8b1afe4a39db4250a300b46f2f1bbb83",
      "Id": "6419e724f4aa45cd9a6069fd5ad3c1f7",
      "IsHidden": "False"
    },
    {
      "Start": "89bfae51efa84b0b919b6fdb1501c50c",
      "End": "0d78777d2b864ab5b6a4ec2b603ae39a",
      "Id": "fa0facb01b454334abb4da8466c254d0",
      "IsHidden": "False"
    },
    {
      "Start": "413e7ad9b24741f7b1317e59d0215d4a",
      "End": "20013202fce749d0a929c01b1c918667",
      "Id": "e3d5072c41ca4265a2a2f59998dfda38",
      "IsHidden": "False"
    },
    {
      "Start": "413e7ad9b24741f7b1317e59d0215d4a",
      "End": "4b4164cb16024fbf97cde04fda39d74c",
      "Id": "b821c424aef0481294612db5bedc35ff",
      "IsHidden": "False"
    },
    {
      "Start": "413e7ad9b24741f7b1317e59d0215d4a",
      "End": "0c507dc1617145199b947430456cb14c",
      "Id": "9b202b459a10428fad3e8e337fb6cec2",
      "IsHidden": "False"
    },
    {
      "Start": "413e7ad9b24741f7b1317e59d0215d4a",
      "End": "79d37f1077cf473b9ddfd1de24d55134",
      "Id": "abe52b6a73f04c9c844d249785ac80a0",
      "IsHidden": "False"
    },
    {
      "Start": "ff7ef47c7ec44eb681acca99cf836cd3",
      "End": "c92c6f74746a405eb32a63c85f73caea",
      "Id": "235a9801e8384254a11964aa4cebd909",
      "IsHidden": "False"
    },
    {
      "Start": "b972d77758d04081bf5c8990525a063f",
      "End": "d372db07ade94a91b397f4ce91ea6c7b",
      "Id": "b5c846a462034fa58de71c8b8be89f78",
      "IsHidden": "False"
    },
    {
      "Start": "55770d62852c4c98bebf9e5ddaecaaeb",
      "End": "a92ad9a67dfe4642ba96c18feb44889c",
      "Id": "58330717369f4795bf408adb49887462",
      "IsHidden": "False"
    },
    {
      "Start": "f3984f19bb684f5a8d6ca3a7e150dbfd",
      "End": "76af67d8765549d9b87dfa82f95d23b3",
      "Id": "d86fd42df22f4fceb6f873c60be5a03d",
      "IsHidden": "False"
    },
    {
      "Start": "eed8088364b0450e8b98adf6fe25e641",
      "End": "92e19c99bf934b428a2520237573d72f",
      "Id": "eb0bb70f3ebd48018e2bd22687cf7627",
      "IsHidden": "False"
    },
    {
      "Start": "775c4ccb9ee34db78a89621c63f061ff",
      "End": "ac815b2f1d8149a381f129b601b1aad8",
      "Id": "773e395d4a26434fb5ea4102e7d90cfb",
      "IsHidden": "False"
    },
    {
      "Start": "1b8e1963ff124ed096ed9f0669859434",
      "End": "b9722a33ff524379858ec3b9e78b8938",
      "Id": "9f859972a51a4b10802230eb6e90d39e",
      "IsHidden": "False"
    },
    {
      "Start": "9663f03442f24a63b5cc1164f32988a7",
      "End": "8cec75c92fa74bbc83f03b9fb97d9a11",
      "Id": "427e3d1fa5914414b664c198492b00a7",
      "IsHidden": "False"
    },
    {
      "Start": "081fa8bf8a1f46d7ad94a5edd0c5e466",
      "End": "1e2525ae8f6548dcbf271df7cc5634c3",
      "Id": "f034fb9d80084305b8cd4032264fab38",
      "IsHidden": "False"
    },
    {
      "Start": "301a3012a3f24083aecad181a9c3df96",
      "End": "98c119a9502a41fb9d6ca35997e22b02",
      "Id": "f12a2d64d64747cb8021fb434ccb0da1",
      "IsHidden": "False"
    },
    {
      "Start": "69de935565174a58a3a259f52473fbee",
      "End": "4c4bb6e8dcc94eb6b0c60651d5fda881",
      "Id": "169fffb42e9a44fbbe435319ad85d5f9",
      "IsHidden": "False"
    },
    {
      "Start": "c2935e9408a24be8994604777191f098",
      "End": "4ea71a7cc3a84179a9489d08e2227712",
      "Id": "178a34b6eb004449b1ab06c4a19b20de",
      "IsHidden": "False"
    },
    {
      "Start": "5d784192f51647148959d04b8bf4edc2",
      "End": "54368c54e5754e97a45a64ee66629d44",
      "Id": "c89395bf8bd14e3daaebddf61a022570",
      "IsHidden": "False"
    },
    {
      "Start": "a348055d8ca24fa784815a12052d23b1",
      "End": "951ba4ec6ebf435ba9a0e6664bbe036b",
      "Id": "5a0dd9e1010348b1be5ea1433c5b1246",
      "IsHidden": "False"
    },
    {
      "Start": "504415762a1e4ab09f28ca9e05b167ca",
      "End": "28676073cf504b1390a2fac6814c89cd",
      "Id": "21008f0ccc354416aeb85dc230cdc62c",
      "IsHidden": "False"
    },
    {
      "Start": "31c438f485594494873168bc1b1a7dfc",
      "End": "f53bb6c1043b4a6284b3edf99305f985",
      "Id": "afa1469d571e4f4895c68ed8923bc5b9",
      "IsHidden": "False"
    },
    {
      "Start": "31c438f485594494873168bc1b1a7dfc",
      "End": "ce9c1746da3946c1b5af7bebc276bb40",
      "Id": "f014e9afd4604e6287853d472891476b",
      "IsHidden": "False"
    },
    {
      "Start": "07f84103088e4b78af3cfb5f6963e2c1",
      "End": "d68d57f63ec8441489e7a5829d3235ba",
      "Id": "58fbe5b021a447df8d91d409cec12416",
      "IsHidden": "False"
    },
    {
      "Start": "07f84103088e4b78af3cfb5f6963e2c1",
      "End": "f2c57fda233246f89e95ebd7d074aa83",
      "Id": "3be3e7d034794157b71cf97d57122936",
      "IsHidden": "False"
    },
    {
      "Start": "07f84103088e4b78af3cfb5f6963e2c1",
      "End": "c8626e1ee311468a9aa0f7d94b48460b",
      "Id": "05d78bda67c442f2b977bc9153fe4cba",
      "IsHidden": "False"
    },
    {
      "Start": "07f84103088e4b78af3cfb5f6963e2c1",
      "End": "0f85d6ff3216429da3adb1d7c5be1144",
      "Id": "60d7158f062f441fb869662154218228",
      "IsHidden": "False"
    },
    {
      "Start": "07f84103088e4b78af3cfb5f6963e2c1",
      "End": "f70a47f1ae0f4566847b1b69a470b427",
      "Id": "cb7a2927d46940139f40b6c0a757587e",
      "IsHidden": "False"
    },
    {
      "Start": "07f84103088e4b78af3cfb5f6963e2c1",
      "End": "ce56b57ca2374d84bd06d03fa237f6a5",
      "Id": "f8214e96932c477e83969fbfcb656371",
      "IsHidden": "False"
    },
    {
      "Start": "69f49f9ff3cb47b0a06c61f639f4c70c",
      "End": "1aa41152830d41e9b9d6e288e89a8969",
      "Id": "1602f6277788478bbe22d7e26ab17733",
      "IsHidden": "False"
    },
    {
      "Start": "5c78bf230d5f47169822c9138dfccb15",
      "End": "8aecf094db514eac9303b157616ac302",
      "Id": "fcc1d540d2324677bb652441452b5422",
      "IsHidden": "False"
    },
    {
      "Start": "14609f689bc94c9dac43423172af748c",
      "End": "abd2d6f64991452bb1cdf2253bac0ca1",
      "Id": "aff44907ff0d43cf89f5804b2fd9c267",
      "IsHidden": "False"
    },
    {
      "Start": "af8a64cf18eb4674832da8047a07dd19",
      "End": "08bf3d66304e4d6fa2fa41d422a5275b",
      "Id": "6bbf1f36a78e4f269752e902c613c5cd",
      "IsHidden": "False"
    },
    {
      "Start": "f121c24478f941f49d0a3c6ce9ad9f66",
      "End": "2e165a6709ed43b3aecc02ea530d8c75",
      "Id": "7ea65542fba54092afe1c2a53ab2c875",
      "IsHidden": "False"
    },
    {
      "Start": "960c814705eb401494136c925e778318",
      "End": "0d0e71cd657241ffa7d8235ca9aa6a71",
      "Id": "170c0c210c9a4624987027748dbdbd2d",
      "IsHidden": "False"
    },
    {
      "Start": "684744fed8df4b359109c2fc67f088ec",
      "End": "8fe988e7c72d4cc79ad1c5fe72cbdeb4",
      "Id": "9272fdc60af341a58cc11fbbca830723",
      "IsHidden": "False"
    },
    {
      "Start": "c85b6850aa134fc89f7dd130ab5acfb2",
      "End": "39f57355264a4183b1fb52f13523b25a",
      "Id": "5f07093066464a6d97b3b21f901a48c9",
      "IsHidden": "False"
    },
    {
      "Start": "8afd5573782e474d904adab2a6625472",
      "End": "8335719b3bbc43d383a092738d15aa1d",
      "Id": "592f6cfc1a2b49a1b79a9fa9e67203e5",
      "IsHidden": "False"
    },
    {
      "Start": "ca2571e0fdef481eb424d40630bebd1b",
      "End": "a917bc066d9e48de80fbcab8b02affd0",
      "Id": "ff76f28e544e4b00bbe950654cca6bbd",
      "IsHidden": "False"
    },
    {
      "Start": "83b4050cac98493e9b521aba139d941a",
      "End": "d0997949703c438986ddace187bdf53c",
      "Id": "67590975d6d14b7e8a234733bfb74d4b",
      "IsHidden": "False"
    },
    {
      "Start": "268ba5ee254c4ab4a0970f7afe11b73c",
      "End": "eeb75f55693941c7b3f7dd2106f58eb7",
      "Id": "6d78a2e9f39f430482247477193c5e29",
      "IsHidden": "False"
    },
    {
      "Start": "757b57410b224484ab5064ac85293b74",
      "End": "e740330c2c9b41078769643e745f421a",
      "Id": "e7aa6f72d3794f0ba41f1e1128a48ab9",
      "IsHidden": "False"
    },
    {
      "Start": "28672dd978d04e758592277825ff5ac3",
      "End": "7b715b056a1044ceb1c558591aa75a9a",
      "Id": "7fc2282c293d4e9985a19442e95bb155",
      "IsHidden": "False"
    },
    {
      "Start": "086e10b64a484aab889fc5d410c84240",
      "End": "6e1fe10dae4c4c00bf8a31d2524bffb9",
      "Id": "cf686d1378a746c8ad70cf21578775e9",
      "IsHidden": "False"
    },
    {
      "Start": "a62d368b2e244964bf07696c852da315",
      "End": "9dfe38b716e64ab7a3e9335b82a0fdd6",
      "Id": "f49960959a4b4b9a9990c463029e194e",
      "IsHidden": "False"
    },
    {
      "Start": "7792c4bc8d054aadbc494f10e66c470e",
      "End": "789fda3013ca4d4b83b1a941636b2583",
      "Id": "bcfdfbac55dd423fb568595de9d54b7f",
      "IsHidden": "False"
    },
    {
      "Start": "d9fb46ecd28a4adb8d1b999903d357ed",
      "End": "a5555de32dfe494f9d73fe63d18a4704",
      "Id": "649182103cb645d4b105b3a28b9bf46c",
      "IsHidden": "False"
    },
    {
      "Start": "54af03bb9f604702b4f9ce08ae45be06",
      "End": "85d01f9ebb9449f58363736e3fc163f5",
      "Id": "a55fa984d21d4177b21d88e80dbb5eb9",
      "IsHidden": "False"
    },
    {
      "Start": "34a7ed93f2424917888e558c5550a801",
      "End": "2934b6c052f04166b57e9ba3f3458e62",
      "Id": "a2f72d9fd2ff4d06968377d3218d55d0",
      "IsHidden": "False"
    },
    {
      "Start": "52b62ec4ad1c4362a93d8d156e0c103d",
      "End": "bab32b4183bd45648add775185148055",
      "Id": "3d82f618e0be474193505413e8f6ffa5",
      "IsHidden": "False"
    },
    {
      "Start": "31d2b176eff24958bed4542306aa27eb",
      "End": "1908b028f1fb4292bf51d79e02734c74",
      "Id": "549281f0086649009effb0c161fbc924",
      "IsHidden": "False"
    },
    {
      "Start": "c8bfc56fff0e4a158fa2acd9e525b192",
      "End": "4895190acf5546acb5a46d9fc8b15e29",
      "Id": "ff7f9c38f93e43398ecf44c30f02a229",
      "IsHidden": "False"
    },
    {
      "Start": "acf1f41c62d646bd87e5f01bf9d00d65",
      "End": "91973416786c40639351c3cf97d389f2",
      "Id": "85c04018abf146d6bef8fe35e61a9ece",
      "IsHidden": "False"
    },
    {
      "Start": "032a0857283f4dc6af1961e36c274142",
      "End": "e3266157dbe94d5c9902248624127807",
      "Id": "f893e8e4e8894dff853a5fe3c67716ca",
      "IsHidden": "False"
    },
    {
      "Start": "af7ad4c3c9bf4a358c7565d1aa703328",
      "End": "d23ec170f5e84539951605be2dd3ea8e",
      "Id": "be82101adbc54feea57523cf0872f3ce",
      "IsHidden": "False"
    },
    {
      "Start": "897cb1273f9544acb838ed228cfb24d1",
      "End": "879393f60ddf4f50bfa0d5f772aef25e",
      "Id": "b14ecd3604d84ea2944827f2743d27ab",
      "IsHidden": "False"
    },
    {
      "Start": "897cb1273f9544acb838ed228cfb24d1",
      "End": "e8326857836e4227aa8eb811f3eee6c6",
      "Id": "15073df0530c4033a18a2bb6400d5fa3",
      "IsHidden": "False"
    },
    {
      "Start": "e1da0a1e671e46f5be763a76b63a2a5f",
      "End": "78b63d005ad34b66bc841d562f4e8762",
      "Id": "0c22c7eed1df45baae5ff4ef3cce292e",
      "IsHidden": "False"
    },
    {
      "Start": "e1da0a1e671e46f5be763a76b63a2a5f",
      "End": "52ef5088877c42e2b3d750cb92db9d01",
      "Id": "8368f0bb699947d38c13002571db4e6f",
      "IsHidden": "False"
    },
    {
      "Start": "f6abc33c85f54fe9805a7bda17fdaed7",
      "End": "be9dd150d6db493ab424c9271836b61c",
      "Id": "8c42497b25ee4e7894fdc87b6b14d19b",
      "IsHidden": "False"
    },
    {
      "Start": "9641948f2a9346ad8aa256d3f87a97be",
      "End": "160cd4d75027446396ba5c5acb1c95ce",
      "Id": "83ace2d7be9d433db969b2a633d3be21",
      "IsHidden": "False"
    },
    {
      "Start": "37a63e8bb6ac4a92876aaa9627c51366",
      "End": "78281f82093c455b8834bc4c41253f6c",
      "Id": "ddd795ae1f9041cc8b2b9db2d4fbeac4",
      "IsHidden": "False"
    },
    {
      "Start": "1188ed2d79da467d9a6cc21c3b3b9dfd",
      "End": "d722f1c43a734eaabf23a287d01d48b3",
      "Id": "638b242361134c7aa86a9eb6c1396ef7",
      "IsHidden": "False"
    },
    {
      "Start": "1188ed2d79da467d9a6cc21c3b3b9dfd",
      "End": "74e2cc977a3a400f952edf287461e7b4",
      "Id": "e5ba7aba17dd406c83d64272aa25d0ed",
      "IsHidden": "False"
    },
    {
      "Start": "a8f9c877aec6438ca99d20f3ab9135bb",
      "End": "4e77b13f102f49ec8a3e89ceda11e720",
      "Id": "ea05f9d90e634a74b0d24e054316d0c2",
      "IsHidden": "False"
    },
    {
      "Start": "d37d6513087f49348e7caf3e740d1374",
      "End": "143832d1e2d64ef0bc520e12589f9185",
      "Id": "af6a114f07354b898814ec46bc9d3e21",
      "IsHidden": "False"
    },
    {
      "Start": "45ab9d7b0f024430b69ff73d245224c5",
      "End": "75884fd0de7e40b09544e20703b2bbfa",
      "Id": "e7a30615b82a48c086807a25570ff7d6",
      "IsHidden": "False"
    },
    {
      "Start": "3e8a3d2206f24486acbc23dec3e4a4d7",
      "End": "475453b42f034bb6b7f902d140c74351",
      "Id": "ef87e8cd0cfc4accbcd1847f3c2a854e",
      "IsHidden": "False"
    },
    {
      "Start": "bb4cea9a8ebe490287a8cc0b747e9c98",
      "End": "18714eeeca58425583fe771a2c474224",
      "Id": "9785b86d4b8a429d99b83b9e4406cedb",
      "IsHidden": "False"
    },
    {
      "Start": "bb4cea9a8ebe490287a8cc0b747e9c98",
      "End": "37dd3ab53bdf4822ac67170115f06254",
      "Id": "1f90f2c710ee4e8399c2483d28511f2a",
      "IsHidden": "False"
    },
    {
      "Start": "5c03758436344f33b9ad9efc38828a86",
      "End": "89184d80df444065aa295fdc27267ca5",
      "Id": "83dd3763eb5e451d97f2c7373082d729",
      "IsHidden": "False"
    },
    {
      "Start": "59bbaf5719744f88bf32cf7ddec5dc82",
      "End": "bbe194567b024c65b45c1a71de3a61aa",
      "Id": "7208b2d7e063468ab356dee586752c26",
      "IsHidden": "False"
    },
    {
      "Start": "59bbaf5719744f88bf32cf7ddec5dc82",
      "End": "5f6a826608bc4228b3f848527329f108",
      "Id": "adf60bd8e3b945688c41961a7efbdb24",
      "IsHidden": "False"
    },
    {
      "Start": "c10dd7a384bd483094df80c174b5cced",
      "End": "33c2349818594e768ccf5f15917261d4",
      "Id": "f3dcc1c7063544a089f2c8197c22ba03",
      "IsHidden": "False"
    },
    {
      "Start": "bced344970e64d6097fabc4fe2d96c8e",
      "End": "2b09fb58412a44de906453fbb3549420",
      "Id": "835ca53cc0f049779157460ca141494e",
      "IsHidden": "False"
    },
    {
      "Start": "914ca985edaf4738a2d492637eb2f185",
      "End": "01feb208ed8a4f63a3cb20e0b9e00709",
      "Id": "679fd46de7d5407788f812de41408b0a",
      "IsHidden": "False"
    },
    {
      "Start": "914ca985edaf4738a2d492637eb2f185",
      "End": "a2281ff20b764fddb765e33c930381bd",
      "Id": "1ff9faf0c89f49db86ad8619e76cb5b0",
      "IsHidden": "False"
    },
    {
      "Start": "aa06dbdd7c0c4bf4b2ddddfc08c48b71",
      "End": "28fd4d68e61142648f98d760216d6134",
      "Id": "321c7a0b1c224fd99bcfcdafbb1c4fc8",
      "IsHidden": "False"
    },
    {
      "Start": "5e137982a4134a4b86f04427f9bc107e",
      "End": "7bdd38c8e4e2438a9345070f999df305",
      "Id": "a476591d21a04c57b495bb6d3bce9a84",
      "IsHidden": "False"
    },
    {
      "Start": "120218a74fda46f19760396d9b692666",
      "End": "cbaa9ab80a024e0882403247ca553582",
      "Id": "ead3dc431008408785b61f7a9100a590",
      "IsHidden": "False"
    },
    {
      "Start": "bbdf5aa581734766b1f53735aaf733dc",
      "End": "6f4d3ad2b915443e9b52a8a19f519464",
      "Id": "eaed68eebf8b4ad2b434e65232d6c595",
      "IsHidden": "False"
    },
    {
      "Start": "902c6af9b1ab4272848beedb1c0e643c",
      "End": "017af7568b654db29a3e70dd89afb522",
      "Id": "d33aebb277e84a4cb2236b5b66468865",
      "IsHidden": "False"
    },
    {
      "Start": "902c6af9b1ab4272848beedb1c0e643c",
      "End": "c0c6d5aed3a340bebaa4313c8849d280",
      "Id": "5fb4abca2bb941fa96dd9fac6fc7f355",
      "IsHidden": "False"
    },
    {
      "Start": "902c6af9b1ab4272848beedb1c0e643c",
      "End": "d0b8b580f95e40c297d12b739258d343",
      "Id": "7587d25bfb824d2dae787cec31d84b01",
      "IsHidden": "False"
    },
    {
      "Start": "902c6af9b1ab4272848beedb1c0e643c",
      "End": "cbd988f62a314bda8778d574ed5d326b",
      "Id": "04b1756bd14b434da15eb2148e98dbe8",
      "IsHidden": "False"
    },
    {
      "Start": "902c6af9b1ab4272848beedb1c0e643c",
      "End": "c3f5efa436e4483681a9123c4282fa37",
      "Id": "3fbcdfc3b7e54841b657b90e34d2176f",
      "IsHidden": "False"
    },
    {
      "Start": "902c6af9b1ab4272848beedb1c0e643c",
      "End": "f7b92904a27e4ff596b0a4872bfd7db3",
      "Id": "00d922128ddd4b518565de306f94ffd8",
      "IsHidden": "False"
    },
    {
      "Start": "8739f0ede4804d438aa4642da258434d",
      "End": "05a97608888f40a689b10cbefdbf261b",
      "Id": "e05286ea99a24544b969c9d8f7ee531c",
      "IsHidden": "False"
    },
    {
      "Start": "72e293fdaf264bf9ade2247d78f90ec5",
      "End": "910dea4d351c4bbc94533d546873a3a8",
      "Id": "f708d51ca9524edc83f6f39c8af9a07f",
      "IsHidden": "False"
    },
    {
      "Start": "72e293fdaf264bf9ade2247d78f90ec5",
      "End": "4dd8ce9d370240ea910294cf60f40b45",
      "Id": "b69932b2434d47459ee05096590beb2e",
      "IsHidden": "False"
    },
    {
      "Start": "fb284ecb19e843f6b0dabc74e7e6b01b",
      "End": "961a99e05a6146359f768cf0c15ac247",
      "Id": "a80ecbf596f340568def2d162f4429f1",
      "IsHidden": "False"
    },
    {
      "Start": "29c5451232434e51bf102f5d35419a3a",
      "End": "0146b7ffe78a40f3b1722a2ca33cfd46",
      "Id": "4443477dbb8d4d5a89d3140420284872",
      "IsHidden": "False"
    },
    {
      "Start": "22c73bb22bdb4590adfd912c8658a7c0",
      "End": "819f2055a7a54a0b89cf9c8f3e06173b",
      "Id": "2a8b23b56c8443419724fea6c082ecf8",
      "IsHidden": "False"
    },
    {
      "Start": "3b109215e8ba434691552c541fe524fa",
      "End": "ad5d933f41274eae91f84f688180ccce",
      "Id": "390d251217a84162a4b52faa38676428",
      "IsHidden": "False"
    },
    {
      "Start": "d0124490846d4a3aa66e78d253cbdede",
      "End": "3e0df19459404d25bb284e33a96c3687",
      "Id": "d527b5ec80ad4bdb93acd2affff966a1",
      "IsHidden": "False"
    },
    {
      "Start": "da713df63a114a648ea0d9b622705370",
      "End": "dc95a7d0d48b48f2a3bd9d38dc8d638c",
      "Id": "af75896ab76d49ae81303655bab7ef39",
      "IsHidden": "False"
    },
    {
      "Start": "da713df63a114a648ea0d9b622705370",
      "End": "fdc307d4f8254195911d0fa40d8e237b",
      "Id": "cc130db8585541ffa7c786f8800189f4",
      "IsHidden": "False"
    },
    {
      "Start": "360c3cf6b19e441a9e5c99e835a7102d",
      "End": "b1db15bf78f24093bdf839aab1599676",
      "Id": "564f35855c084080bfbbdc6152c073f5",
      "IsHidden": "False"
    },
    {
      "Start": "8e6ea50301484b9096cc5c987ee5c24b",
      "End": "cce8e44a0ca847578de63a7596f8715b",
      "Id": "e097e7befe7744e3a2536ba8032ce24b",
      "IsHidden": "False"
    },
    {
      "Start": "da1fd2b33a624c2d91d8990250ae5927",
      "End": "6fb1df47259040afa22d76319285131d",
      "Id": "848feeed74e34eaf93f1690c14b6f51d",
      "IsHidden": "False"
    },
    {
      "Start": "7f7f1b5fa4a941a282bfacd358c79624",
      "End": "e5bc8284888848c8b0ddb87784c97b19",
      "Id": "a1d2831e882f42d88572de449edd0885",
      "IsHidden": "False"
    },
    {
      "Start": "8d26bbf1c15144e591a08a9bd3e7d9f9",
      "End": "ac775f881af64bab9dd27965a8737ede",
      "Id": "7ea2de58921f4992acd7fd965270541e",
      "IsHidden": "False"
    },
    {
      "Start": "53e2afb14445485392cc45fce555f960",
      "End": "83d9a38e98784d52b456dc7644b76342",
      "Id": "7aa0f0d7dcdb455890fd8a39fcc7fc6d",
      "IsHidden": "False"
    },
    {
      "Start": "a1c97849f6d740deb6709a345d840809",
      "End": "c72e28523d174171a714f3f8983a82ed",
      "Id": "0512f6719f9f4d31ae3b89ca454a1438",
      "IsHidden": "False"
    },
    {
      "Start": "a1c97849f6d740deb6709a345d840809",
      "End": "020028d955a344dbbc477c0a81ca09fe",
      "Id": "c9c9fccc428c49ceb33985360c6b6b72",
      "IsHidden": "False"
    },
    {
      "Start": "a1e9befacc5b4d48bddd2597e2622061",
      "End": "d11d0a8dabd44d39a59ee9df73e92529",
      "Id": "d1a3a17852684193b61fdd46750d82ee",
      "IsHidden": "False"
    },
    {
      "Start": "a1e9befacc5b4d48bddd2597e2622061",
      "End": "863d7c81315d4aa194d5068c93d63b27",
      "Id": "5dc261920b0c45bcacbeab1608ac0ed2",
      "IsHidden": "False"
    },
    {
      "Start": "7f099e1a350642619faf3ff3641160b5",
      "End": "917ed5530e404de4a46bfc6375460fc4",
      "Id": "2a76889bf9914be8a97aba825ea8109f",
      "IsHidden": "False"
    },
    {
      "Start": "806b641bf8c14eca9f4b5262b63402f6",
      "End": "0639d6b623a048d39fa958c2156545a9",
      "Id": "dc66e00ba8f44f65bcfc3e71fafb6c5e",
      "IsHidden": "False"
    },
    {
      "Start": "26f643d3ee864488a02cd06638df9bbb",
      "End": "3012446eb99b4e26aa0555bfe6340ac2",
      "Id": "a9028b4c64a943e69be6d669abb47a9f",
      "IsHidden": "False"
    },
    {
      "Start": "b826e046a5534832909c545ceb767205",
      "End": "767def81642b4387977c1a780add8095",
      "Id": "4ee46dc9893f473d9390c97be57c16e3",
      "IsHidden": "False"
    },
    {
      "Start": "a031eba9739c4365be9a5970c1f2f67c",
      "End": "50d0d7be0abd43878dd13902f3cb8b1e",
      "Id": "69b45e664c474deea676df6b5aeb782e",
      "IsHidden": "False"
    },
    {
      "Start": "384f017a44af49d0b20588e8260c354b",
      "End": "ec0f054388bd40efa4c2e98d2231772b",
      "Id": "37bec3d574f7415789b1182279cc5b80",
      "IsHidden": "False"
    },
    {
      "Start": "9a32cd07766341e790e93c49fe1898d0",
      "End": "811d55d448264f2cabeec82965e36f19",
      "Id": "b696d95695754afeae4a7480f6f31106",
      "IsHidden": "False"
    },
    {
      "Start": "9a32cd07766341e790e93c49fe1898d0",
      "End": "4c2a570c50564383ac78bb6e203dc0c3",
      "Id": "e06ba11541224414acd918d1a548ee84",
      "IsHidden": "False"
    },
    {
      "Start": "030ac3902fd84866bc2f754e950eaa5a",
      "End": "5470097f46ba4f53b8bb991c8adbb7af",
      "Id": "878d2d277df64f25bca4f29607d2c023",
      "IsHidden": "False"
    },
    {
      "Start": "684f8252afa3402b9a15edf3ba5e3d98",
      "End": "7bd2e7ac3b654edc8f3fcc3e6b2e44d4",
      "Id": "aaec6b1efdd44997a103c2f29cdf147f",
      "IsHidden": "False"
    },
    {
      "Start": "684f8252afa3402b9a15edf3ba5e3d98",
      "End": "1df9a892c91444fa937232a48acac823",
      "Id": "4d0297fb2af64db7a0278771790cfa1f",
      "IsHidden": "False"
    },
    {
      "Start": "0db30f99fa284ac9abba2a72f488d28d",
      "End": "0777aa2f9a044b988c3fff1b01fec4fb",
      "Id": "6fb23ae73f054d9884bf3f93e3da7514",
      "IsHidden": "False"
    },
    {
      "Start": "6b2dd01662c54533bae42f6f8f7ffc06",
      "End": "0c1f8a04ecf34055a8e1e935e181853a",
      "Id": "e366913c79ce4850b2fe44dd07492db6",
      "IsHidden": "False"
    },
    {
      "Start": "a8a8ee84a557435984c0746403f8795e",
      "End": "9764307d3c674aee954a271b95e9f2d7",
      "Id": "2a241d2ac99c492c95ada46b2a2e28ea",
      "IsHidden": "False"
    },
    {
      "Start": "75f17284802049359d86d45562f42fa7",
      "End": "3f369786bfeb464d9b0e8cfe6f32d953",
      "Id": "7ea67fe963fa435ab17c1206df6452bd",
      "IsHidden": "False"
    },
    {
      "Start": "ba2e36d547d044cd80d48f18a689ef39",
      "End": "436b7178dc9f47ab89aea7e598b0077b",
      "Id": "94a93aba099247be96819f547dbce333",
      "IsHidden": "False"
    },
    {
      "Start": "e841b902d4ac46c39beb08d28d0124a7",
      "End": "d4da95ba91404c479edd9c745e3599c6",
      "Id": "28d8be735e9041378546eb74eb490e7a",
      "IsHidden": "False"
    },
    {
      "Start": "d1732f19dc784bdfb67d6e79241a04b8",
      "End": "eb7939828c3a4ec8a3c5902cce9cf840",
      "Id": "b32dc04aac254b84bbfe95c3cb0fb280",
      "IsHidden": "False"
    },
    {
      "Start": "797f6b6c3b914fdf9ca098a7d5b1fa50",
      "End": "5c3dac6117c444c1819c8e7641a14341",
      "Id": "a97a768799ba46bb8541efa142199da2",
      "IsHidden": "False"
    },
    {
      "Start": "27700a6f8b854490b085f1903c5314cc",
      "End": "d6250120a7014cf3be1537a8322ebbb7",
      "Id": "dc92be510092448c97ee62e71321822b",
      "IsHidden": "False"
    },
    {
      "Start": "0c995f4a46f44c198d19e4d04ac76795",
      "End": "0dd8f2a50b694fe9a7b55d1e46435e48",
      "Id": "f8cc2a6cb0834069ab6119e178e2e979",
      "IsHidden": "False"
    },
    {
      "Start": "b61a8ef87fb34d09b5d49856d05b7e8e",
      "End": "b2290da333d04371a2a4c9d335dea786",
      "Id": "470cc2246c0b424cac1f3d28b671f4aa",
      "IsHidden": "False"
    },
    {
      "Start": "b61a8ef87fb34d09b5d49856d05b7e8e",
      "End": "326d5d86131a404682569e535f532c6e",
      "Id": "105a2f7ce79d489aa7be772a3e4ba107",
      "IsHidden": "False"
    },
    {
      "Start": "73f82f77a00d4dcbadc5b8ec55ba8ad6",
      "End": "4ef10343cbd8419b839cf937f8a7c8d6",
      "Id": "960e239d143e4a0993d76780407c202d",
      "IsHidden": "False"
    },
    {
      "Start": "991e0f9c059a464e8febea7706c642ce",
      "End": "02626c09300a43af81421a24960e60c9",
      "Id": "f3a035a859714d1bb6fa8580c62d9ad6",
      "IsHidden": "False"
    },
    {
      "Start": "a28cba6e8170419797ea7303fd30ad3a",
      "End": "63f969e308cc43b6a7c510917e44d9f7",
      "Id": "e081ff16ddc54b6c980916ba6481575c",
      "IsHidden": "False"
    },
    {
      "Start": "226e300d5dd44db29f995754dab64b33",
      "End": "0ed4b8e1c5df4c7b95622aea75a0207a",
      "Id": "d9b089dde937436b9d490b6172bada73",
      "IsHidden": "False"
    },
    {
      "Start": "0de1524df19c44f4a293cf51d63a306b",
      "End": "69e3dea474ec4fca87dac9494252adcf",
      "Id": "66c6a925afbb4f08a3f59cf463444849",
      "IsHidden": "False"
    },
    {
      "Start": "0c523e54501d4cb2b29ecce8a029b3b6",
      "End": "31a7aa8002bf42b8a8374645000051e9",
      "Id": "379aaf8a1b324d5a83eeed37afecb19d",
      "IsHidden": "False"
    },
    {
      "Start": "f3d65ba899074b5e85fb5eb50fc6df64",
      "End": "6107f9b14c084509b0fa612751e7a529",
      "Id": "4ebfa59cb959415fa2b5496f414e7442",
      "IsHidden": "False"
    },
    {
      "Start": "be79e66aeb904fbfbce12f4fde5cd3a7",
      "End": "7c9355cb25504f6d8ec45e5eb1a73eef",
      "Id": "03fced12913143359c26b15b015687f2",
      "IsHidden": "False"
    },
    {
      "Start": "04d283ceb7ca4f50b97b4f55fa8cf70f",
      "End": "6a46015ed2d546f88d06e33599487dbb",
      "Id": "f968583686df48638a1454a1d3c6e41e",
      "IsHidden": "False"
    },
    {
      "Start": "4e7f8e11e7c644fb879e9eb01ab35882",
      "End": "21fd143e386c451bb0d37dbb9e873c3a",
      "Id": "8224cc73533d485fb8e07f02f661920e",
      "IsHidden": "False"
    },
    {
      "Start": "37e494ddf2484470b6c41da3c3da47f3",
      "End": "5d665f03f0904303bce4d7c38bf07ea7",
      "Id": "54f58bda191c4185a2c63c57b6a46fdb",
      "IsHidden": "False"
    },
    {
      "Start": "37e494ddf2484470b6c41da3c3da47f3",
      "End": "270db87ecf224896822b00cb28fcafbd",
      "Id": "20d3c72c47db45eba005557eceb9443a",
      "IsHidden": "False"
    },
    {
      "Start": "3f7cc6e01fe8456cb3c3283e8e1934b9",
      "End": "037b82dfb7de4a02a20b65a97403439e",
      "Id": "bc92ca26d2f54cf1b81d321af5498206",
      "IsHidden": "False"
    },
    {
      "Start": "3e094ac0f25d4b558a790bd1a0ae6eb8",
      "End": "3979bc868ef148639ae5a015347272cc",
      "Id": "433d89f924bc40ba9b89a814f11ff361",
      "IsHidden": "False"
    },
    {
      "Start": "ea4204101c074f0d993b275ce4cd6483",
      "End": "900fe43d8ac443eaa59d16d90daedf2d",
      "Id": "2f4822ac98b74c26860fb1fe77d452c3",
      "IsHidden": "False"
    },
    {
      "Start": "1cf7daef02794428aadb1a798aee314a",
      "End": "1fb81bf138574c43894d201b9a480d4e",
      "Id": "98361e14412c44218e2c9e93a424b7f2",
      "IsHidden": "False"
    },
    {
      "Start": "fc7818ab607b4c85a8a101026ed06d53",
      "End": "fbd17ffce8114de699a452c434a3aad6",
      "Id": "fb2c260074764f538fc136b2e2df9ec6",
      "IsHidden": "False"
    },
    {
      "Start": "6479bc8f07d54af782f8f2ef29d6393b",
      "End": "a7bd7dcfe7f643668d9df0c8ab7cbdb5",
      "Id": "b137f14269424b38a70759a3c52c9bc3",
      "IsHidden": "False"
    },
    {
      "Start": "71a78de3ceb342809ffd20c153d82c40",
      "End": "64177cd983a846a49281ea59982a14e3",
      "Id": "b9f3496272194d3c9267a0c8dcceda02",
      "IsHidden": "False"
    },
    {
      "Start": "759dbb64de2844ebae7f682a96ded830",
      "End": "f6a7a7af84ba4b958138e06e5b3fb172",
      "Id": "478ce42c43b642af8408abc23c0f0f7e",
      "IsHidden": "False"
    },
    {
      "Start": "39a4c276d4004f82b76642a9a29b44ea",
      "End": "cf312277150f40b2adf8a1ef2f55d41b",
      "Id": "5c8db5e40b7e443ca34f93145ee134c1",
      "IsHidden": "False"
    },
    {
      "Start": "cf2a35b8fd804c65923736a84221fd98",
      "End": "d3f0036c88ed488faa6b8609f11ced48",
      "Id": "edc7622250d74c4cb142dee9970638e8",
      "IsHidden": "False"
    },
    {
      "Start": "3db4f3ee827b45c2af3e10ff540b77c1",
      "End": "a4b68739834b4497a9b59e0a2d147519",
      "Id": "5f6feb668c3c4820929918186e77e278",
      "IsHidden": "False"
    },
    {
      "Start": "7ed755cf410343c4931e8224e1e91b1f",
      "End": "e2e4224844d04133b57affef552de361",
      "Id": "166c6845f08d4a72b6293926f75f7372",
      "IsHidden": "False"
    },
    {
      "Start": "7ed755cf410343c4931e8224e1e91b1f",
      "End": "f95b48f747a84406a8320b2631a3a770",
      "Id": "b00375a6daf34ca397a1f213d2782882",
      "IsHidden": "False"
    },
    {
      "Start": "14837593a0ad4054818ced50bda5db39",
      "End": "815a5c761f9242ff8eb510eb9b9d2225",
      "Id": "c81c8012a8a54132b7b29a78d017dc7d",
      "IsHidden": "False"
    },
    {
      "Start": "2fa12f0ec13b4f25a46eea033028084a",
      "End": "022b9a7945e142288253a9fdb5f94ccd",
      "Id": "6bd51d77db964ed89339a090889fa749",
      "IsHidden": "False"
    },
    {
      "Start": "c7edbbe4438341ceb8857c4525272708",
      "End": "b0c34df92b25475fb1743af101e36fad",
      "Id": "d2bcaaf8dd2746c6bbf21c044f298564",
      "IsHidden": "False"
    },
    {
      "Start": "c7edbbe4438341ceb8857c4525272708",
      "End": "c8d4bcb31bdc40d8a834613061b8782c",
      "Id": "aa8fd28dbb2642b282e49cf5e9487869",
      "IsHidden": "False"
    },
    {
      "Start": "6c9ff65746b5479ca6a31c2b51850ca5",
      "End": "7a9fe7f4ccfe4b6595828ac0ef14cafb",
      "Id": "227e6a1137324cdba4ad9ba29262066f",
      "IsHidden": "False"
    },
    {
      "Start": "24809c9f591f4b08a2550c640107e3b3",
      "End": "faa86628700f40e199f67cca4151257a",
      "Id": "96fd72d5c6c34303bd82383de18e2b9c",
      "IsHidden": "False"
    },
    {
      "Start": "e83536b11e9045d9b2a79a0066063460",
      "End": "c0a4441d1fd74046a480562adeeee6cc",
      "Id": "fe04c8ab5ee54b979f6d019f2a0e3e3a",
      "IsHidden": "False"
    },
    {
      "Start": "58d4c2441d63491a9c4bc4b28eb38cde",
      "End": "b943e26da38f455f97b1cc3b5cf6c29e",
      "Id": "42693219f64e42bab8876f57e7610a86",
      "IsHidden": "False"
    },
    {
      "Start": "6bc0ad59b0c645f39286b60c8955f721",
      "End": "69ff254e563247f38a79862b038aca36",
      "Id": "fcdee22aa9524235af39e2ec733aa2d2",
      "IsHidden": "False"
    },
    {
      "Start": "ef83822462604601af089fbe29bf4f7e",
      "End": "781ed36da83e4bd3ade71e44738a4f22",
      "Id": "97ce0a2b5e98411e980a15c324a8935c",
      "IsHidden": "False"
    },
    {
      "Start": "c1379570469b4d71aaa985fb6543c305",
      "End": "18a7d16daf29417ea35087ccd993c42b",
      "Id": "2ac9c95623b4436a93bb37179c6dd82b",
      "IsHidden": "False"
    },
    {
      "Start": "1b906070cc0b41ed9f82b70aaf40371f",
      "End": "2dbfd04548d440ffb90ed3e058f2b4c8",
      "Id": "e6396428f0ef46288fe6e847ec639ec1",
      "IsHidden": "False"
    },
    {
      "Start": "3b401d89556d4b68ac1de39c87349180",
      "End": "ea44662eafa0488182b60abfa3c30903",
      "Id": "784e0c139e364fc58a27160964c70a0d",
      "IsHidden": "False"
    },
    {
      "Start": "935ef61be0ed443ca3385803ae008cc2",
      "End": "a4bb97f1815347439586435a19014e01",
      "Id": "103d9b5b2549446da1297938a6f5cc51",
      "IsHidden": "False"
    },
    {
      "Start": "fd2b864d4eed45258f169b3a0cbd0d52",
      "End": "05c4b85f37994c39a95a2c60b8fc0a2d",
      "Id": "876a99ba79ad4ae695fe15e3af5f9eaf",
      "IsHidden": "False"
    },
    {
      "Start": "a35c26e247334d0bbfdb032b4edc6dca",
      "End": "b6e2c60fe2b84f23b0aecd857652234d",
      "Id": "dcb8a544d42a414aaeea3de002c3d034",
      "IsHidden": "False"
    },
    {
      "Start": "e81756ca2bbe466ea4172188ac59b216",
      "End": "41f84079c257497686c1cc196454b38a",
      "Id": "6bd8bbe67b964beabf2bc21084b9cbd9",
      "IsHidden": "False"
    },
    {
      "Start": "e81756ca2bbe466ea4172188ac59b216",
      "End": "94400c8f7adf4070be48dfa8a89cb7d3",
      "Id": "d310aa9440324f6cb25c5b406fcaca95",
      "IsHidden": "False"
    },
    {
      "Start": "e33a3457351b43dc9b1bd06df296e613",
      "End": "81229efe66854f83b9319c1702f2ef14",
      "Id": "728b11e957384087a516e4467353a107",
      "IsHidden": "False"
    },
    {
      "Start": "2fe5d380f99f427183267532cf074ef4",
      "End": "aef1845632d442af95aea4ef64c20e8b",
      "Id": "d7a438d4fbfb48abb34d950864d99a01",
      "IsHidden": "False"
    },
    {
      "Start": "54bf5929549d43afa0185ed88c4b3f72",
      "End": "7cfa4faf8ac9436a97bd77c4539ede50",
      "Id": "5b8d5050e50d40fb95d369cbd7e37675",
      "IsHidden": "False"
    },
    {
      "Start": "1668a60785cb4c6ca373f3ac5cc0f52a",
      "End": "767f506fb09b4d4280447fb37809732b",
      "Id": "6d25a05f94e64edd938d52face37327b",
      "IsHidden": "False"
    },
    {
      "Start": "be5b383deab9418883c11665898f94a2",
      "End": "09f74ca5a3f2454d9de7f0abd6bed28c",
      "Id": "ebf2c38939344a7a963eb3ea684292ea",
      "IsHidden": "False"
    },
    {
      "Start": "d2712c5184b34d699d09f72903596851",
      "End": "b3192b2a355d45a0abce3844efe84a70",
      "Id": "e3ef9172914b416a8d4b1a99fbb2e498",
      "IsHidden": "False"
    },
    {
      "Start": "2a05c08c9d4f4d26be08fb467ffa5013",
      "End": "4af492b75cda43cea3ef55a3f5197d29",
      "Id": "0abf1aae2aeb4b2faf71e7c5c9cdf82a",
      "IsHidden": "False"
    },
    {
      "Start": "de385ca5ec91492c921800c9846cf9e6",
      "End": "6100bc574149427cb884163492763799",
      "Id": "7dde5ce313f64bf6b6f47ba4fae94705",
      "IsHidden": "False"
    },
    {
      "Start": "490f75de4c2f4d0a8dc0338b6cdb441e",
      "End": "20f3dc2a1af344f8a244063fee0e9025",
      "Id": "416a2adddfb7414f87c4af3091e2ab18",
      "IsHidden": "False"
    },
    {
      "Start": "490f75de4c2f4d0a8dc0338b6cdb441e",
      "End": "ecde1d5240da4390887e6219c4793339",
      "Id": "28032deb552f465f98db248838dda78f",
      "IsHidden": "False"
    },
    {
      "Start": "490f75de4c2f4d0a8dc0338b6cdb441e",
      "End": "af0d4bc4121748758c7780753196e108",
      "Id": "7a69ef7693cc4a86919487886d713a7f",
      "IsHidden": "False"
    },
    {
      "Start": "59fd61b9a25643208b174fde95d81709",
      "End": "05162a6677ce41cca0df4955ce99c0e2",
      "Id": "4b140a7b13204b0bb8d40cd6e6618364",
      "IsHidden": "False"
    },
    {
      "Start": "57db494f886944c18d779fc1e87c70c6",
      "End": "c856f8600ffe49d7b9a75d9760caa60f",
      "Id": "78240a7451b0461ba86a28259e262e7b",
      "IsHidden": "False"
    },
    {
      "Start": "4fc204055d2a4b1aa6b56a9f34a28d2d",
      "End": "461e6c0a240f4efea8f676e112122573",
      "Id": "781d6f319a4f46a896a8e856f71b5795",
      "IsHidden": "False"
    },
    {
      "Start": "f39f61fea17048fe9c9f7919f0632619",
      "End": "cfc6247723014ae9ac2320d792cb8ad8",
      "Id": "533ad30c85e041ad8269ec19bef03950",
      "IsHidden": "False"
    },
    {
      "Start": "22f504331dc24676b845ff9c3236b3fb",
      "End": "280a9ef13b4f4eee82270b5fea759c64",
      "Id": "6171833a16dd4abeac7c49ceef59b3e7",
      "IsHidden": "False"
    },
    {
      "Start": "d0b0659a45b84db1856fdfcc7f9f1e47",
      "End": "c7e874c326f44809978201cf58ff7fe1",
      "Id": "dd18bc6244a5465193f855e8ac13f353",
      "IsHidden": "False"
    },
    {
      "Start": "3a8bb84313104d72b1d1cbed87f249d7",
      "End": "52c4d32daafe4033a18460e87bc9c161",
      "Id": "78b83c96b16f47b7b8610779e087ebf5",
      "IsHidden": "False"
    },
    {
      "Start": "3a8bb84313104d72b1d1cbed87f249d7",
      "End": "81be602106c948fbb1f98d912e4423e4",
      "Id": "6fb32ed97b3f4822946e5c90f3227c4b",
      "IsHidden": "False"
    },
    {
      "Start": "f86b0d9e8d454cee8eaf347b722a7d0b",
      "End": "9dc2902baae44a2fa7503ec8724a7968",
      "Id": "9b498c5bb6194cec8b236e0776a23962",
      "IsHidden": "False"
    },
    {
      "Start": "24fa9f6532df4897b39b93a77195be19",
      "End": "0a0dcf3f94bf4fc5a4c3ce4c22ce8483",
      "Id": "22365af4b42f4020bba3c124651b052d",
      "IsHidden": "False"
    },
    {
      "Start": "0fe42dd3aa2a4a2db0917dfb5425a039",
      "End": "fe3f9236295741a3a6320f2e5d1cd0cd",
      "Id": "ec71605c9d214b1aa014765ff08bbdd4",
      "IsHidden": "False"
    },
    {
      "Start": "0fe42dd3aa2a4a2db0917dfb5425a039",
      "End": "fa39a5cdece741c587b785a2bce04bb3",
      "Id": "8e48c42aabb14f8a8ed13a1ea387d713",
      "IsHidden": "False"
    },
    {
      "Start": "11bc94e6c0c646cd9ef3dedd2cb56d2e",
      "End": "bc7e312b9e67433ca51a1d3d8efc9ca4",
      "Id": "f5102ce054c04e78a1a9f45a95b37c5b",
      "IsHidden": "False"
    },
    {
      "Start": "11bc94e6c0c646cd9ef3dedd2cb56d2e",
      "End": "dc129c25fcdd44b08cfea159891e5dd2",
      "Id": "6680c92ea10a4f31a1330eb984daf83f",
      "IsHidden": "False"
    },
    {
      "Start": "cd3d91ab1c784b8ea731fc65e111aa6b",
      "End": "53ea1a8a795240c3be71101ccbd4a450",
      "Id": "667f8cd23b0f4628a45952f64765ec48",
      "IsHidden": "False"
    },
    {
      "Start": "cd3d91ab1c784b8ea731fc65e111aa6b",
      "End": "430aa6c6829f4825a61aa57674c1494e",
      "Id": "61c56db7f90f4d40b1d9ccca7edfec88",
      "IsHidden": "False"
    },
    {
      "Start": "7e5729bc0e28439887341c8788eec95d",
      "End": "80446d840dc042e19fa8949b7e1fadc3",
      "Id": "ed817713313440678bd7a2223e5fd5b7",
      "IsHidden": "False"
    },
    {
      "Start": "018c769761354448b66876b83e58f0f6",
      "End": "181808daff9b4ae58c8edd195e32824d",
      "Id": "c84c9a934ffe449c826d31aa114f6f4a",
      "IsHidden": "False"
    },
    {
      "Start": "2180bf3b950141cdad2a7c95a1b59521",
      "End": "45a16e2c88044b42bd86d33cd2c24c83",
      "Id": "d048a3d7ec084898a63a40d370924ec0",
      "IsHidden": "False"
    },
    {
      "Start": "64e1226517334b3b8b8158ccfb326823",
      "End": "44724d23bae749eb9873e445397e7993",
      "Id": "01e5ffc17990474085d0d590cfb81b3e",
      "IsHidden": "False"
    },
    {
      "Start": "35918ee94aee4cd5b1d4356aba9f3278",
      "End": "6fa70be5a991405c89cec37862bc1a11",
      "Id": "4f90d0ddb0d24ff59030e514406671b3",
      "IsHidden": "False"
    },
    {
      "Start": "4cfc2fb369c246d9a5a928ded1801864",
      "End": "539b636bf05d482aa9755efb83504d06",
      "Id": "1165cb40932a4f3391273104f9f6c7b8",
      "IsHidden": "False"
    },
    {
      "Start": "4cfc2fb369c246d9a5a928ded1801864",
      "End": "5a83e5c255fd462780e13665007f979d",
      "Id": "18fea8379a3a45749723d1c50dd8fa2c",
      "IsHidden": "False"
    },
    {
      "Start": "d6d447380e6847c8b61414756995e92d",
      "End": "8690eefb8dc0441aa7f4538f26ac0c7b",
      "Id": "f5e02d35c3c14b43b1834e6fc68b2642",
      "IsHidden": "False"
    },
    {
      "Start": "ce9e327ca44b456fb4b123a3226ef2dc",
      "End": "5d9e6a1be94644e5bb33d71dd677cc72",
      "Id": "693da684a2834f45887515946980c42b",
      "IsHidden": "False"
    },
    {
      "Start": "fe304bdf135b4a518ceed1d8eddb36de",
      "End": "61a0026e60a440a9b1545ced4efc1a6f",
      "Id": "d0d7f367f503402c8b37fa62d899b45c",
      "IsHidden": "False"
    },
    {
      "Start": "fe304bdf135b4a518ceed1d8eddb36de",
      "End": "6d8e910490964cbfaf8e5f95e32a3d7a",
      "Id": "8379ddc246f04e9ea97866be04f52ae3",
      "IsHidden": "False"
    },
    {
      "Start": "7f7dc9c183ab4a9e9cc001f9f4e20313",
      "End": "613523355f354bff92a26ecd08975374",
      "Id": "9faecfbb65cd4db5a47bb06d8156c943",
      "IsHidden": "False"
    },
    {
      "Start": "464e86319fda4ee9ba0461e11693fa42",
      "End": "517fb581e6d740ea9f1d193aa9fa5806",
      "Id": "816ab68d915c4886848562526cd1650b",
      "IsHidden": "False"
    },
    {
      "Start": "621d216c3918467383cb13d9eed80086",
      "End": "71960ea913464a2ab5b1e6b442b40957",
      "Id": "6f17e84b7b394f1c943c60d4b0c1380e",
      "IsHidden": "False"
    },
    {
      "Start": "dc46a045c24741a5997aa615fe5bf5be",
      "End": "4f8d3be407614e6f8924f3b4705ef50c",
      "Id": "9f92283853d04bb282d73a6c79f93bd4",
      "IsHidden": "False"
    },
    {
      "Start": "8669e227259247449c5665ab9bfabba8",
      "End": "cb3b335a815046f6a8f7a3dcd158047a",
      "Id": "dee1864e0b5b489fb3e852fd922430e4",
      "IsHidden": "False"
    },
    {
      "Start": "b3215403f3ca4425b85c7eae429fc404",
      "End": "b1147736737e40079818fd55a1937e07",
      "Id": "b6750175bb424dbcb6ca372e7ce08ef6",
      "IsHidden": "False"
    },
    {
      "Start": "bfb9b07cae694d0c8ae7d51d0893280b",
      "End": "fa1e861ef440421cb7b5d8b600fd1367",
      "Id": "4d9f3b3ea8eb4f97bdb738c4710f0088",
      "IsHidden": "False"
    },
    {
      "Start": "db8034cec3c64e619057c00e5280a80b",
      "End": "c815110baa704329af0544f7cc50bc07",
      "Id": "0c23b5f0c710473d90376d46cd958b11",
      "IsHidden": "False"
    },
    {
      "Start": "cf66f1c9559343d7b5d4fe1c3ed17060",
      "End": "915b5ef5ed7343eab389e5e7c895cb23",
      "Id": "bf57c5d8d9f645afb65cad1915596de2",
      "IsHidden": "False"
    },
    {
      "Start": "69a7cf5b7bd34bb68f0ab5ace041e46c",
      "End": "2deb2d128fe5469a82c3f165fa7d30a6",
      "Id": "d65fa36b87ee45a38b57b52834db6682",
      "IsHidden": "False"
    },
    {
      "Start": "f0d04c9e63ac44ff9fe55fe353bf58aa",
      "End": "8e3d4c1199744da3952d1ae59c1ec259",
      "Id": "d71c23f3fc9745379019ed3f4617637c",
      "IsHidden": "False"
    },
    {
      "Start": "f0d04c9e63ac44ff9fe55fe353bf58aa",
      "End": "5a2590fe53084290ba1adfeb19a145b0",
      "Id": "3530f02b77d14c338be6955942216d31",
      "IsHidden": "False"
    },
    {
      "Start": "f0d04c9e63ac44ff9fe55fe353bf58aa",
      "End": "0a07551b0ac748c69023451631c2b406",
      "Id": "d300131b882347d8a432a6a2867f5912",
      "IsHidden": "False"
    },
    {
      "Start": "961ce56654024e27989a85b800ef6a40",
      "End": "bbb81748babb4200b13ac1ced6df0e6b",
      "Id": "e76425647fe047e18d21172e2daf30f3",
      "IsHidden": "False"
    },
    {
      "Start": "7b038e2b550042cb83b20993797a463c",
      "End": "c7f0b29eb2884547bcfbc071bc4c8267",
      "Id": "de79b4bb936a4ea6ba2a97c3c1e65d5d",
      "IsHidden": "False"
    },
    {
      "Start": "e08cba6c99b0409787b90e41cbc88e27",
      "End": "a0a0d54668514e5aa469da32e48a7da2",
      "Id": "464214e10a6643fe8a6abf596a551728",
      "IsHidden": "False"
    },
    {
      "Start": "b8b678d4e0f64caa80ffa6360c5aa444",
      "End": "7556d86e4e4145eab2889d75e96daf12",
      "Id": "44a15ab4a8a346c98a789d440d5c682e",
      "IsHidden": "False"
    },
    {
      "Start": "2d15eec653754d1f9fd19f530cba16f4",
      "End": "339db873ddbe4b1a898f5e707c622606",
      "Id": "49ee43d2a31d43b9a9c4f74ecd53a857",
      "IsHidden": "False"
    },
    {
      "Start": "850fe05866414359a1774eb082692daf",
      "End": "898cad142f1c47f0b144ec36cba39a27",
      "Id": "df01bac8ba2f428f905a7e94ae1e2798",
      "IsHidden": "False"
    },
    {
      "Start": "3a09b5a7e0e941d3afd02367123302d3",
      "End": "1dab94ca54c74e73a1b1fc29c6fceee3",
      "Id": "f20d2f86ea3a474b9696b0f0bdeab6a6",
      "IsHidden": "False"
    },
    {
      "Start": "e624eedaaa2e4cf7852e24a7c9603fce",
      "End": "219408af29bc462581d6aa6e4201fbd5",
      "Id": "f08a6322698042babc26cf19ab9d732d",
      "IsHidden": "False"
    },
    {
      "Start": "e624eedaaa2e4cf7852e24a7c9603fce",
      "End": "a33ac32f8d6b467dbfdff33960c59046",
      "Id": "299b2836f313488f8223525ed565c15a",
      "IsHidden": "False"
    },
    {
      "Start": "ed854d53049740f3a1f79b45ba6f2b9b",
      "End": "0ab4c3453afb4dbc9f77dddbfcf9b24d",
      "Id": "7448f638e25e4301ab9c159654fb7f9e",
      "IsHidden": "False"
    },
    {
      "Start": "bd100f5fcf1b45baa7878df06f740d1e",
      "End": "b89a5a2a792f44268a9ea40853e77c8b",
      "Id": "abb829aa05cf4e709e781130d10c1d55",
      "IsHidden": "False"
    },
    {
      "Start": "2ca6728ca1354ee6ae1a4e8492ddb6f0",
      "End": "1de5ec5ee84649959a8a2ef57d6050a0",
      "Id": "b699b30c147a4dc98af04fba1e138b92",
      "IsHidden": "False"
    },
    {
      "Start": "2fd61e6c839142fc94f474962dbb59cb",
      "End": "bdb6afc5b21b4168a4978fb87f10640d",
      "Id": "fd93e9e210c94c6197176782e16f252d",
      "IsHidden": "False"
    },
    {
      "Start": "8a3e48a24b914aafb40324df512c403d",
      "End": "f2b3f99d32424a54b62a41b218c3f510",
      "Id": "280d56a3e8144106b6fcfa57a211b9b5",
      "IsHidden": "False"
    },
    {
      "Start": "f6943d0031d64717a91c5a14851f2c77",
      "End": "47dcd466acf643e48eb3b98ae692f2d3",
      "Id": "6bfffeb125c74657a57db4b34b364dfe",
      "IsHidden": "False"
    },
    {
      "Start": "498d33dea8074174815d1d707f38d050",
      "End": "e9eff70af4c340d2b1c1d53b98aef5ac",
      "Id": "ed66b7a8dfef479e9c9a6bc851fff8be",
      "IsHidden": "False"
    },
    {
      "Start": "530669e5f5e14352b5bdf2b08aec8212",
      "End": "c9bdcf61c7c54ffcb9a58986e9982942",
      "Id": "ff7cfdf1997f42c59c819a5263d8bdbd",
      "IsHidden": "False"
    },
    {
      "Start": "03eddc54ed3b495c9d247b35a6197714",
      "End": "406815b2dd4e4d25b671b2fc359bd29f",
      "Id": "2154ad43ee6c4857bef25e5898bebdb1",
      "IsHidden": "False"
    },
    {
      "Start": "c2bdaf09e99a4f099c7123a7a729df0d",
      "End": "74858441e43348c29476d435b974d56e",
      "Id": "b7dadf8aed734e6fb8a86fdfad590f3f",
      "IsHidden": "False"
    },
    {
      "Start": "01170e634c6249ba874181c99ce7c721",
      "End": "d3885266cb594d23b6c67b9d5d25dc73",
      "Id": "bd173b4bc39c43c2b98e3ad29516755a",
      "IsHidden": "False"
    },
    {
      "Start": "f025cb79b0b24354a46829acaa362bdf",
      "End": "19086b61632c45ee80fdafa986c71044",
      "Id": "fc10934a61044a18bf9a7c971d22ab08",
      "IsHidden": "False"
    },
    {
      "Start": "e003bbd1239e4a06be574fea0a157b88",
      "End": "9e763370e4ad4b6f9e7568a380cbddc1",
      "Id": "b5a2f35dc85547a18440911392ee101a",
      "IsHidden": "False"
    },
    {
      "Start": "f7b90435d43f417480e01bb6bed4acce",
      "End": "b835fc611ac24b02b12a1e878c585376",
      "Id": "de1bf22b6dcf4eb7a9d9097c8b9ddc7f",
      "IsHidden": "False"
    },
    {
      "Start": "f7b90435d43f417480e01bb6bed4acce",
      "End": "e5fdfc46a9e94d9caf95e593e96d6871",
      "Id": "cb638e4583814ba68433843b8219c39e",
      "IsHidden": "False"
    },
    {
      "Start": "f7b90435d43f417480e01bb6bed4acce",
      "End": "8dabd27acd53459391f35b40104aebbc",
      "Id": "b0684ecd774b4b3b8d02414fc0714cda",
      "IsHidden": "False"
    },
    {
      "Start": "f7b90435d43f417480e01bb6bed4acce",
      "End": "3c7745b2cf6b4d72bc85aef3feefa6c4",
      "Id": "95be82b6be1c4d819bed2ff0e639571b",
      "IsHidden": "False"
    },
    {
      "Start": "d773e8ce582b4c349268479c00b43a68",
      "End": "1c53eb83a0b04f92b778826c37d71a15",
      "Id": "ebbb3023a436403699266ad586f82558",
      "IsHidden": "False"
    },
    {
      "Start": "33b994141bd84e68933a3ba7781a64dc",
      "End": "c257287376bf45ef990cbc51597ca3f4",
      "Id": "7470ec3de1144ccc87d77ebc46a973f3",
      "IsHidden": "False"
    },
    {
      "Start": "33b994141bd84e68933a3ba7781a64dc",
      "End": "9b931889776b472e8fa453848301fe7a",
      "Id": "6f953bb09ad441a7aa9c1a9dcefa2b61",
      "IsHidden": "False"
    },
    {
      "Start": "ec64038eb7304a06a6ad36f136340fde",
      "End": "8b81833c901e4440a2b5071617254830",
      "Id": "282947cc03cb4502be38577711d201d3",
      "IsHidden": "False"
    },
    {
      "Start": "a6b56b12bd6043d985b41b364f550fce",
      "End": "955a81abdc7d4d23aa206bed4c27d1e0",
      "Id": "c49a910735ac46b7a8e0de8e0dac9003",
      "IsHidden": "False"
    },
    {
      "Start": "23f14b22d37244c2ba27a147cad43147",
      "End": "c6c3ce24ff5046f3b0dec904b0a1fd09",
      "Id": "b7a34341ee0d414ca09535c692ed9d40",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "9fbd05c0-ec1f-4bd3-bf37-969a1552eab8",
    "c3a36eb7-8fe8-4417-b31e-ccc9fded769b",
    "4abff87f-8dad-41a9-bcf6-98784ac456eb",
    "219697d9-d6eb-4f4a-97d6-1fc8acac27a7",
    "ee2bfd6a-235b-4c14-a309-f5cb3e3e3227",
    "72e88648-ec17-4934-8376-d6c1f6183d67"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Data-Shapes",
      "Version": "2021.2.92",
      "ReferenceType": "Package",
      "Nodes": [
        "761c09e4a3f94f849e44551784bf826f",
        "9154625af5d1471cb212189c28758b9c",
        "58b9d01a62574d50a2824185dd2003d0",
        "9bac6a8c2ba9413da4700fea70f31c02"
      ]
    },
    {
      "Name": "BumbleBee",
      "Version": "2021.25.3",
      "ReferenceType": "Package",
      "Nodes": [
        "2369ce4844024afe8f3070cbed835a37",
        "8717b3a0c1ec499ba4e6d12b97e8de80",
        "6db41ea289fa44a699582ebd09cd64d6",
        "dbbf828dbc8744b080de92030a481fc4",
        "59c15f3e98494ffba9b19ce033d3c513",
        "36ccad711c094b67a51090c1fe0b7ec8"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.16",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "3.0",
      "Data": {}
    }
  ],
  "Author": "None provided",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 100.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.1.2727",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "43020bdc4a64460a9ff519e3e4ae76fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3806.1153511618686,
        "Y": -1019.1614706649659
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e26d1aaf45934f9fa96d127c2e00458b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3531.8541041526987,
        "Y": -1110.0201719779523
      },
      {
        "Name": "List.MinimumItem",
        "ShowGeometry": true,
        "Id": "eaa83c28defa431faa6db05bb3369bd5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4251.7910104563325,
        "Y": -929.07839218607614
      },
      {
        "Name": "List.AllIndicesOf",
        "ShowGeometry": true,
        "Id": "29a4ee7617cc468ab2b00687944425e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4526.0188876388984,
        "Y": -1021.339450855002
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "98e9150c878c46189b613b7d17197783",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4871.8399495071017,
        "Y": -845.45370922192683
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "756fcbcc65ca4e9193a5306e3c7ab53e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5808.4420845667955,
        "Y": -1426.6343976491812
      },
      {
        "Name": "Network evaluator",
        "ShowGeometry": true,
        "Id": "a65456329fb44a5aba776cd022efd2e2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5536.0968864427987,
        "Y": -1426.8363304981804
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "63ad3d979a0c488e893a84a87e3c0c35",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5110.5752068727124,
        "Y": -839.503084397794
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "bdcbe6ee5481476d847e963fc88acced",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6947.7803390137233,
        "Y": -1431.3744593028293
      },
      {
        "Name": "Get Tag",
        "ShowGeometry": true,
        "Id": "9f2a3aeb385f427faa17b63e1b042867",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6739.5969847175547,
        "Y": -1433.1401660617894
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "09240c6d13d04c34ab7570e398744506",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6362.1537733285741,
        "Y": -1426.2058075097493
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "fbae7317fd9a4d0ab61d86de2d86a065",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7415.4642483843763,
        "Y": -1753.8001250402847
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "c4c7965e15fe4885ac71a50eda850244",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6160.43586657633,
        "Y": -1752.92525268504
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "171e5f8a6de94f0bbfb831a66468ecf4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7412.959335009361,
        "Y": -1432.3353016897943
      },
      {
        "Name": "List.GroupByKey",
        "ShowGeometry": true,
        "Id": "fc7230bff85f48fe9e8f7bb5db000b34",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7743.1909678261418,
        "Y": -1591.3993967216163
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "1a8c928ceee642bfb2968f91b32d39ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8324.71590430243,
        "Y": -1452.7070323761409
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "4099482e5ff74dff92068b2e73ab650a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8762.38126098324,
        "Y": -1451.8720848213791
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "703edad22b334dbeb55625ddf4f923fa",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8497.89754356378,
        "Y": -1284.9704608401066
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "2c095377e6054599883850feb66e8bf1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7998.3827405377542,
        "Y": -1325.0758664650593
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "813b3cc850bc4ccd8afdf054bc85a5b2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9034.4159675054889,
        "Y": -1588.819666949981
      },
      {
        "Name": "List.FirstItem",
        "ShowGeometry": true,
        "Id": "a514f651b3074cbfbadbd6970ed60577",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12060.071227651424,
        "Y": -1584.193271830487
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "8f2e07d536654e0c9e4146c98f265743",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12558.451199320622,
        "Y": -1585.3569963707489
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "47619e899a2a45cc82daf7fbbbf1cbe7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12061.845263475618,
        "Y": -1749.7180871496314
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "772e8c0b6ca744b9a3f5703f7c5214d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12555.264098725193,
        "Y": -1344.4941548423408
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "c64abc80c6314b23835d7d89edd3ccd6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12077.557079628308,
        "Y": -1311.02306062102
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "e1d26b8170ac4b28afdba241b953d780",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12978.650675085921,
        "Y": -1451.4347115324208
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5c8f947c816a4955a82a4c10bf71b280",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12408.971752535434,
        "Y": -342.12462137335524
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "91834ff8561d475fbb62ca068a1ad16e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13209.205324854602,
        "Y": -581.45842005126315
      },
      {
        "Name": "ReplaceByCondition",
        "ShowGeometry": true,
        "Id": "c08185316ac7467d8c090fe7bc8aef42",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13810.394567458419,
        "Y": -580.62015269044809
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "11dfa29e4abf4eee9063480962523472",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13594.769509648668,
        "Y": -421.62400789567346
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "a720510f21a2471498ffdeaf6d2eb46b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13383.977313394573,
        "Y": -395.59172601886428
      },
      {
        "Name": "All Elements of Category",
        "ShowGeometry": true,
        "Id": "1882c671546e44509c7c4f0eeb15cfd9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14392.514890189816,
        "Y": -1933.9910894163806
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "65443397eb02415289abb96435ac4b28",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14825.167940886937,
        "Y": -1842.2515194452342
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "c2423694604f4ef592c24144281ec741",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14453.389115632448,
        "Y": -1744.4204693237189
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "3b11fbb6e7e04679aaaaefd918f630cc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15214.21492796816,
        "Y": -1612.8240944977965
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "bdc6d6051f4040988fc4decb89076bba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15532.573079692653,
        "Y": -1930.7252346275982
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "853d7cc1351c423d84e6532d79375912",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16055.491988690019,
        "Y": -1928.7118996168522
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "662b500fe1f648f7864e9681efc9345f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15536.353336153537,
        "Y": -1691.0518587950214
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "7e592b20f44849db9033ca9658d9b41f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16060.024953402368,
        "Y": -1704.1795780759076
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "c6101d7632dc4d74bd56afcb223bf43a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15989.033583407054,
        "Y": -1125.1848551508542
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "47d56e95a76a4ac5930dfd7aaee0bde0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16663.643970708155,
        "Y": -1923.0470420852409
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "1bfc455afa8c4c78a01814cdf50b69d6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16432.476024437739,
        "Y": -1706.0154904916667
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "40bf5b73c1ab4407a5d4a6b62cb3e2a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16422.5447407916,
        "Y": -1926.5567471260765
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "48bebaae93bb4cfc8462dbf7e78aaad0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17701.54944525069,
        "Y": -574.72598980022531
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "e4041faedcd6473c8c9638661b158a82",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17915.406809200649,
        "Y": -576.13151762013138
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "6e77c0b768fb4ad3b2547bca5b5bcbaf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14170.695829760747,
        "Y": -580.61330951335572
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "f02fccdd127c4da7a4f7ffe650ca65c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17157.148486240505,
        "Y": -1921.1706547182796
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "107ca0209393455699720389ef47163e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16998.732700692788,
        "Y": -1437.0983653350279
      },
      {
        "Name": "List.Count",
        "ShowGeometry": true,
        "Id": "8710c7ee392d49c4ba7bcbfb5c752805",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18204.184551306054,
        "Y": -291.25546688733812
      },
      {
        "Name": "List.Count",
        "ShowGeometry": true,
        "Id": "75c606a1c2484387a3b59f95a6527ba7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16510.237058768726,
        "Y": -1125.6843799742153
      },
      {
        "Name": "List.Cycle",
        "ShowGeometry": true,
        "Id": "606cbb7537fa47ed8b4562a2dd1ed306",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16770.493268508417,
        "Y": -1229.7989525138125
      },
      {
        "Name": "String.Remove",
        "ShowGeometry": true,
        "Id": "447deab26b2a4666b41d861ea9df5bbb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16730.990332684443,
        "Y": -1437.2967476149165
      },
      {
        "Name": "String from Object",
        "ShowGeometry": true,
        "Id": "d85486c2e0564202bb9fb8877d966534",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16289.574370906035,
        "Y": -1437.4329905915879
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "cfa48e6ad6274273abaa06a9601a9325",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16519.676102621932,
        "Y": -1533.6042870262
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "fba962e884394a55be3f7fd79e263fbe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16520.131255557302,
        "Y": -1302.1099210049661
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "90785ab9c47b4b528f04785c85bdf178",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13351.745899202533,
        "Y": 529.55157674576878
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "7d072189b33845ca9d9484d069a5b676",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13167.740369413032,
        "Y": 638.76198090423441
      },
      {
        "Name": "String from Object",
        "ShowGeometry": true,
        "Id": "5123decef70d491189c9a77e9d2bd7b2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13746.443419050382,
        "Y": 530.7863943258817
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "6f1b60c4d79d4b0696134f9a87527750",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14006.680537661168,
        "Y": 530.70593175205158
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5ac79b264c174a2d8a0900ed5d2a5fb5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13503.720533204965,
        "Y": 701.75161485355386
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "5ecef992f16642af9d2cb06eb66c8b79",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14245.420763489608,
        "Y": 366.2440648586678
      },
      {
        "Name": "Python Script",
        "ShowGeometry": true,
        "Id": "a664684d6b944b28aecd8c5ef9dcb74d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12323.743930168221,
        "Y": 526.963568552261
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "e8cff726379e46ab8d80d9bb279b5172",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12070.652297712721,
        "Y": 527.31974724453244
      },
      {
        "Name": "List.Chop",
        "ShowGeometry": true,
        "Id": "25908245358940678fff82b5b0fef1a9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12580.065827988063,
        "Y": 360.99956989268662
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "aef6a66b059e4eefb705ed8fb738b01a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12882.921565124387,
        "Y": 364.07301289623365
      },
      {
        "Name": "List.UniqueItems",
        "ShowGeometry": true,
        "Id": "3cbc971aabc64f77afcf74cf8cb15107",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14511.376983367358,
        "Y": 368.24027349768096
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "7e3e8f19b01b4e06b4a689035f5d3b21",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15217.252133687121,
        "Y": 368.0322884514062
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e9c4130ba300407e8ef7371abe906ae1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14804.953558719475,
        "Y": 254.94163244868093
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "73268fac90e34939956babdac21934a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15224.820904928558,
        "Y": 665.55154666736053
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "9dc524dd89744ebb96af87560299264d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15235.705600781479,
        "Y": 945.88288081898338
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "0322f62d695a41e19476d0c464cf2a76",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15626.880381388193,
        "Y": 369.23678747242354
      },
      {
        "Name": "List.TrueForAny",
        "ShowGeometry": true,
        "Id": "b304b95140e8464db31713b9d1d3b104",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15847.144626964835,
        "Y": 370.11753868772144
      },
      {
        "Name": "Object.Identity",
        "ShowGeometry": true,
        "Id": "8ffc651c0d594f45afc6264d5025aad1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15578.356621406829,
        "Y": 524.424413801929
      },
      {
        "Name": "List.TrueForAny",
        "ShowGeometry": true,
        "Id": "f941b794b7094a818f3ab9c33feda19a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15848.722192721449,
        "Y": 666.38406677201783
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "6b9e42bc39e343b191acf994f212c890",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15627.654732731953,
        "Y": 665.6095128537188
      },
      {
        "Name": "Object.Identity",
        "ShowGeometry": true,
        "Id": "5a76ef10aaab46a091530282245af8bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15576.077180484603,
        "Y": 811.65062116658873
      },
      {
        "Name": "List.TrueForAny",
        "ShowGeometry": true,
        "Id": "8773770933f745b2b50cb316ceb1d623",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15853.402602524462,
        "Y": 946.97814678393843
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e855387bfc9445e6a336db97a6fd41f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15625.879632895494,
        "Y": 946.73091986386191
      },
      {
        "Name": "Object.Identity",
        "ShowGeometry": true,
        "Id": "43273feef8ab4192bd532a0af1451620",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15575.304261298883,
        "Y": 1100.7894733826824
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "bd09947521354a5c8b6307957cae6d37",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16211.557412814909,
        "Y": 631.7688447346784
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "5d8bd03fb6144599b85f8072f9e03369",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16422.301710422358,
        "Y": 631.195632040674
      },
      {
        "Name": "List.TrueForAny",
        "ShowGeometry": true,
        "Id": "c130d83e3a9340428f7a926f96138566",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16701.269231680482,
        "Y": 630.95534842158588
      },
      {
        "Name": "Object.Identity",
        "ShowGeometry": true,
        "Id": "570b2b1336bd40078ce3ac0318579cd8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16404.720618198287,
        "Y": 761.4803104714465
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "71aeed0ce4254bde8b1c99517f263331",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16969.788591154935,
        "Y": 634.63451875572321
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ca39c4a6992543e69d176a0cc70991d5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17395.3494031489,
        "Y": -474.39394150260671
      },
      {
        "Name": "List.OfRepeatedItem",
        "ShowGeometry": true,
        "Id": "2710576984534798a364b760b6ea4df8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18568.625726281956,
        "Y": -119.46816389244935
      },
      {
        "Name": "List.AddItemToFront",
        "ShowGeometry": true,
        "Id": "84a494cf97194698ab6a9fe921b55de0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18891.523598818876,
        "Y": -118.8356384690799
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "8877ddbba02f404b8faed2dcffc2c266",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16429.802877388374,
        "Y": 1456.1221681594018
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8eca213c8fa842388685b4922f7e3c71",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16239.183190702221,
        "Y": 1563.8133719945185
      },
      {
        "Name": "Level.Name",
        "ShowGeometry": true,
        "Id": "ad5617dd1c5a44a29eb3f46404930f48",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16842.692250349675,
        "Y": 1457.3120367820386
      },
      {
        "Name": "Sizing Connection Parameters",
        "ShowGeometry": true,
        "Id": "76ca8cd7e8a64dc19502410eba6633f0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15953.59043422522,
        "Y": 1770.2286194477292
      },
      {
        "Name": "List.AddItemToFront",
        "ShowGeometry": true,
        "Id": "1a58533ddc79477aac4db6346c226b94",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17109.683902005931,
        "Y": 1701.8237827498358
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "f638eef75fae432a87092c1676549b53",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15086.684768697314,
        "Y": 1464.319223762915
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "730a31b628a1435781740f4dd3885fb6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14819.610246122966,
        "Y": 1497.9715060539802
      },
      {
        "Name": "List.SortByKey",
        "ShowGeometry": true,
        "Id": "328b5b52810948d6bce8220265c31df4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15775.742866996348,
        "Y": 1453.3890260406442
      },
      {
        "Name": "List.Reverse",
        "ShowGeometry": true,
        "Id": "786c3d614ef54843a095f7a04ac6ff29",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16035.689963028943,
        "Y": 1454.6307101001762
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "7c331fddfac241e4b992ce64ae357bb9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16435.834896185414,
        "Y": 1738.6344337134763
      },
      {
        "Name": "List.AddItemToFront",
        "ShowGeometry": true,
        "Id": "4e8a2e32aaf4452f91b434afe40e1329",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19323.908694544967,
        "Y": -577.81927611324852
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "509b946ac1024e56ac69a7d064331101",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20446.751188665443,
        "Y": -504.13685578397497
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "858181d4056a44c2a9bd8df944075ff9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20212.844097360517,
        "Y": -617.12915609104448
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "2e9e526acbc24c8a8a0122702988b88e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10783.584465297236,
        "Y": -1499.3239524139674
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "7542e4da52744299a79061e3ab429a69",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10554.756741821533,
        "Y": -1354.6389827090215
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "31c62f9d37784ef9b668c43dd41c9e76",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10276.8409205015,
        "Y": -1587.38966496983
      },
      {
        "Name": "!=",
        "ShowGeometry": true,
        "Id": "f5e409f3df2044e596795ebc8aafd9c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10030.4638180382,
        "Y": -1504.96527041833
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "87d01b658b3a415fbc648aa65abed968",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9781.82967710494,
        "Y": -1342.50604451509
      },
      {
        "Name": "List.Reverse",
        "ShowGeometry": true,
        "Id": "ca8775ba343f4adbbd39f3a6c7721f30",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9373.64853924108,
        "Y": -1589.31504068844
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "908e1638d8c84c36913c911edee15208",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9335.98364515573,
        "Y": -1418.39878858777
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "d592f1851137406c9aa9ebac96b9ccbc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9591.31882613481,
        "Y": -1504.61681338321
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "ed797e5f5fda4b2694385ef3be28ae4c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11371.619007134885,
        "Y": -1498.5785364280543
      },
      {
        "Name": "List.UniqueItems",
        "ShowGeometry": true,
        "Id": "c6293a4573f349cfbc84502461f9bc3c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11149.585782727534,
        "Y": -1397.6490394358709
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "df85a14ce5484edd9e9e5681210ee32c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11606.707833993363,
        "Y": -1588.8488639907207
      },
      {
        "Name": "Level.Name",
        "ShowGeometry": true,
        "Id": "ece371a0b6824990b77cf34ccefa7f7c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11343.057762607195,
        "Y": -2955.5156006881725
      },
      {
        "Name": "List.SortByFunction",
        "ShowGeometry": true,
        "Id": "86de41aa76494b69954cbdc589ffdbe8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10983.037550808447,
        "Y": -3155.2840946965944
      },
      {
        "Name": "All Elements of Category",
        "ShowGeometry": true,
        "Id": "86ea297ac01c430280ef933c74d7825d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10641.396936884088,
        "Y": -3155.977744466179
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "4d2da3ecbbc549989fd3f75246bd2d71",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14517.430412997861,
        "Y": -2926.9809931503578
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "77a64806612043aeb8308d51981107c9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14865.734496297177,
        "Y": -2740.18156808839
      },
      {
        "Name": "List.AddItemToFront",
        "ShowGeometry": true,
        "Id": "b147363d256d4d239f81d90c66a6b6c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15318.387230829025,
        "Y": -2588.1743613147614
      },
      {
        "Name": "List.OfRepeatedItem",
        "ShowGeometry": true,
        "Id": "b1872427e70444ffb951e754ee875f30",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19108.775828430331,
        "Y": -2392.8160507033122
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "80a549047b094da78629fa734de37659",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18521.3181886784,
        "Y": -2385.60655203498
      },
      {
        "Name": "List.AddItemToFront",
        "ShowGeometry": true,
        "Id": "4d10082a22304025bfc6005e9d669ab4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19389.530225714749,
        "Y": -2610.8201025864751
      },
      {
        "Name": "List.AddItemToFront",
        "ShowGeometry": true,
        "Id": "cb3385e2ae8041bc8315487d8fb47768",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19723.656856615522,
        "Y": -2429.0046800053983
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "5d47ca68ea554722a810b7f0035c4e29",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20610.757438446846,
        "Y": -2365.8990509517816
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "f47720629c8b47d6a7a85b84a14551ec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20361.03288885791,
        "Y": -2332.5587289055793
      },
      {
        "Name": "Element.Id",
        "ShowGeometry": true,
        "Id": "97b6d62bf8134e6c833f450c03ccfb89",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14594.702757173647,
        "Y": -2279.5002211125966
      },
      {
        "Name": "List.AddItemToFront",
        "ShowGeometry": true,
        "Id": "f6cd3ee3fa764527893ab48338e63ad4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14991.316168326272,
        "Y": -2429.9303116154515
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "26cc3cd8334340f9932263d14a84424e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15588.07517852122,
        "Y": -2591.2330108368551
      },
      {
        "Name": "List.Join",
        "ShowGeometry": true,
        "Id": "9a8b0e664fea4c02acd859c646a3e2ce",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18203.278739356148,
        "Y": -121.03448212347826
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "9a231e7c543a4664b7f7d3ac814eb2b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17934.756901207675,
        "Y": -215.3641945125911
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "3a4ad099eb0f41a98bfd1d2d2813e35a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13691.4857039671,
        "Y": -3401.51156516581
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "290afcf5fa6b430db79b7e548dd7ae32",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13458.3451640531,
        "Y": -3404.85355471894
      },
      {
        "Name": ">",
        "ShowGeometry": true,
        "Id": "883052f204ce413dad814e3f7aded6de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13202.3696548069,
        "Y": -3404.09866058146
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "bcabc496458941ff962045c3b58a4325",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13214.346228649882,
        "Y": -3234.1393336372507
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "192796d6a94f4822904683e567b89cfc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13914.323823433082,
        "Y": -2961.5063252002633
      },
      {
        "Name": "List.Count",
        "ShowGeometry": true,
        "Id": "10086fadb9df4bfebbacbc990ba0e93c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11989.7581948714,
        "Y": -2391.08697788245
      },
      {
        "Name": "List.Chop",
        "ShowGeometry": true,
        "Id": "83aa3b746f7449c588eefccdb0ff5f91",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14272.985073235226,
        "Y": -2430.0929729748736
      },
      {
        "Name": "Element.GetLocation",
        "ShowGeometry": true,
        "Id": "98608c080b404b3a896764b308e36888",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12085.8074256292,
        "Y": -3530.92081625173
      },
      {
        "Name": "Curve.StartPoint",
        "ShowGeometry": true,
        "Id": "677560d958654d1f91bbb92d61fb99fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12411.7880639736,
        "Y": -3649.06748569625
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "8a2bfc6226d04c72aaf3277b36b101ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11839.0749088779,
        "Y": -3530.02115513877
      },
      {
        "Name": "Point.Z",
        "ShowGeometry": true,
        "Id": "4d2aa0603b014f88b197fed856c233c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12648.7079019244,
        "Y": -3650.25242831819
      },
      {
        "Name": "Curve.EndPoint",
        "ShowGeometry": true,
        "Id": "af86a42435b848a0a6c75afe11c2bcef",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12409.071958349998,
        "Y": -3466.2323591820964
      },
      {
        "Name": "Point.Z",
        "ShowGeometry": true,
        "Id": "77bbbb4dd117432caa464988edf3ba47",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12651.080195491997,
        "Y": -3467.0865086059262
      },
      {
        "Name": "Math.Max",
        "ShowGeometry": true,
        "Id": "c45b01dabf3f4cc4aa5f6f773c9c9450",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12943.941960658,
        "Y": -3529.07297156944
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "878d5da457f445e1a9aeb621c872074d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18905.811606130897,
        "Y": 1245.1248832942597
      },
      {
        "Name": "Element.ElementType",
        "ShowGeometry": true,
        "Id": "63cd9b7f14cc426cb6dec151033d898b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19146.946278335821,
        "Y": 1216.7316733749581
      },
      {
        "Name": "Element.GetCategory",
        "ShowGeometry": true,
        "Id": "f46e9220434b492694147fac14f52201",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6514.9469648184631,
        "Y": -1977.5582361831944
      },
      {
        "Name": "String from Object",
        "ShowGeometry": true,
        "Id": "63e17e25d9214278b4d415cd434c5b35",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6787.6297397921535,
        "Y": -1977.1920837235143
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "36f90f9ab94f4dc7be06e538c37b3025",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7053.7038396028584,
        "Y": -1977.3562889102611
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "b5ace48024574ce7998398402552bb63",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6790.517438729993,
        "Y": -1839.9311917503544
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "7e414b44ccba43e8b0d38f206482e3df",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16333.974102553833,
        "Y": -3376.7671227188648
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "4ec05ae726994caba4176be0f9c61280",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16004.171408239257,
        "Y": -3529.3111093375396
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8657e06fa3f643899dff8c944067bfd2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16634.559169112723,
        "Y": -3541.874481730249
      },
      {
        "Name": "List.Chop",
        "ShowGeometry": true,
        "Id": "3e656fa284264fcb93a2c8fb641046b6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16667.331518645104,
        "Y": -3376.8289498879335
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "4430c518157141ad9d8c10ad8953c63c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16401.51636823465,
        "Y": -3206.8184989385604
      },
      {
        "Name": "List.AddItemToFront",
        "ShowGeometry": true,
        "Id": "7e9ea4bf81d24d10ad436129af5dd2a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16967.127611326014,
        "Y": -3412.7689052340779
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "634b80fe885c4ce882e666b5a24c162a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17222.959969937918,
        "Y": -3414.8566637716085
      },
      {
        "Name": "List.AddItemToEnd",
        "ShowGeometry": true,
        "Id": "6eb4b1bef0c548c18ea71d2d5c8400e7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17465.618964801026,
        "Y": -3515.7461714679171
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "513a21031eb9426180592be16aa3bab0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17709.485530308339,
        "Y": -3409.1916701817354
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "b1a80e601da84b219d87bc0714c28cb6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15984.045319479934,
        "Y": -3375.1840581285346
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "6af6141975924f3abf014e9a99edc96f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16330.892777284085,
        "Y": -3060.4040810484435
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "6d5289aa59d5426eab8f824b17c08294",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 16011.386304015761,
        "Y": -3027.1748871808231
      },
      {
        "Name": "List.AddItemToEnd",
        "ShowGeometry": true,
        "Id": "faf49d3896334f76a6c120ba0aeab955",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18007.415814278811,
        "Y": -3073.3097920940454
      },
      {
        "Name": "List.AddItemToEnd",
        "ShowGeometry": true,
        "Id": "dbc880dd65d643a095c2f5c212df98a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20020.164542061782,
        "Y": -3082.8480226646852
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "02135bdee6444df799a38a3fca8f6966",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 17124.917190650503,
        "Y": -3608.4447987751505
      },
      {
        "Name": "List.OfRepeatedItem",
        "ShowGeometry": true,
        "Id": "27b2cca90a3d4d4e8194e1d49eebbc6c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19112.733193168191,
        "Y": -2798.8589090445948
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "11c4c95425a64b7dae267b5a88bb2b5f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18886.838059987862,
        "Y": -2881.5110769782282
      },
      {
        "Name": "List.Count",
        "ShowGeometry": true,
        "Id": "8f8cba75e23f423d897a65c653b61ff9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18877.719690129838,
        "Y": -2652.3363981628581
      },
      {
        "Name": "List.OfRepeatedItem",
        "ShowGeometry": true,
        "Id": "0e0ddd289c8a4e3bb537175d27c678a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19486.970354227073,
        "Y": -2799.9937083835407
      },
      {
        "Name": "List.AddItemToEnd",
        "ShowGeometry": true,
        "Id": "87c13a1374c343bd8f2171034877a995",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20309.686521887186,
        "Y": -2801.890323568573
      },
      {
        "Name": "List.AddItemToEnd",
        "ShowGeometry": true,
        "Id": "54fb5f1c16564076b4baded8bc62de9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19808.478300503852,
        "Y": 110.6733273491227
      },
      {
        "Name": "List.Count",
        "ShowGeometry": true,
        "Id": "d7e92a84cc284a32be49078359b94155",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18424.690298237729,
        "Y": 222.97128797501097
      },
      {
        "Name": "List.OfRepeatedItem",
        "ShowGeometry": true,
        "Id": "e44b5335d8f444c38711f7093adc54d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19328.08977439925,
        "Y": -321.66864870409665
      },
      {
        "Name": "List.OfRepeatedItem",
        "ShowGeometry": true,
        "Id": "bf319ce0734c4f95b014624f5b18f9fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18942.495862956672,
        "Y": 257.525870618533
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "bf469116af2e4534983b322c82ded4d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18734.707177673612,
        "Y": 83.694968380848081
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "c83390beff744e09a56ef5baec6559d6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18736.843857740336,
        "Y": 228.33242857624555
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "2eacc83899ce4814a02bea92c7220c41",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18987.087504457937,
        "Y": 422.8057890508714
      },
      {
        "Name": "List.Join",
        "ShowGeometry": true,
        "Id": "f8273ce5bb844e109c8153787b859b89",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19275.559957721776,
        "Y": 258.07624543505364
      },
      {
        "Name": "List.OfRepeatedItem",
        "ShowGeometry": true,
        "Id": "d4c6bae3bf4945b7ac4da64a5320c94b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18947.139630730908,
        "Y": 81.075886708025109
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "fe43b486ffa84fc8bba22b77be57f84f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18448.942091171124,
        "Y": 662.753886972718
      },
      {
        "Name": "Math.Sum",
        "ShowGeometry": true,
        "Id": "19b8e375ba8a4786842c21c4e93a8fd7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 18690.396921816362,
        "Y": 663.30288444993744
      },
      {
        "Name": "List.AddItemToEnd",
        "ShowGeometry": true,
        "Id": "2ad2732b686f4345be1a922c8a8aacf2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19557.343241645794,
        "Y": 664.67412959663375
      },
      {
        "Name": "List.AddItemToEnd",
        "ShowGeometry": true,
        "Id": "3977a461dd3245ea95d4f109ca24fdc8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20145.04603484421,
        "Y": -323.45618350076649
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "4fa04a11ab2348528468e553ae1188a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2760.090731120164,
        "Y": -1063.4922082398855
      },
      {
        "Name": "Category.Name",
        "ShowGeometry": true,
        "Id": "4a81315845d64f49ba4c249d75b238c3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2475.3831001787635,
        "Y": -1062.7537716294057
      },
      {
        "Name": "Element.GetCategory",
        "ShowGeometry": true,
        "Id": "083fcbe66c1641e9bd63d0ac712e25c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2196.924746123464,
        "Y": -1064.0281805724555
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "5d4a3bf65543467c8bf3f990d6e23dac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2534.1445926065639,
        "Y": -935.35856992466529
      },
      {
        "Name": "Python: Pipe Network",
        "ShowGeometry": true,
        "Id": "b52f43ba2f934aa89d10b5e2582532df",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -208.50506361156204,
        "Y": -859.19017813541973
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "25c461b6b69649a5a563b78cfd21e0f7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -783.95408410000573,
        "Y": -587.43017690867987
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "cbb1aa13d1fa47b79a5909eacca481c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1990.0459991716489,
        "Y": -582.326123863879
      },
      {
        "Name": "MultipleInputForm ++",
        "ShowGeometry": true,
        "Id": "761c09e4a3f94f849e44551784bf826f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1454.2343230365796,
        "Y": -446.75233604984828
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "b8f4e4a6c38a4f6db8f6988767b29e53",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1976.9607094019166,
        "Y": -102.81848363201948
      },
      {
        "Name": "Listview Data",
        "ShowGeometry": true,
        "Id": "9154625af5d1471cb212189c28758b9c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2717.0527851890429,
        "Y": -348.03606057610591
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "626b72997c774390b37ef84d7edf2741",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3163.8628803799429,
        "Y": -466.44445280749619
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "92286fe331554ad69637b553b26a0753",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -766.78913472025761,
        "Y": 526.40982062103535
      },
      {
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Id": "e6f364a085024b37b6a51b6a4f133dcf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3795.8184833846435,
        "Y": -133.54524881812608
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "32efe35954a94cab8784af2213505297",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3563.8780280995425,
        "Y": 322.99017860656409
      },
      {
        "Name": "Python to sort strings with numbers",
        "ShowGeometry": true,
        "Id": "ca28b553ff394925ab28350fdeffa51d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4182.7404727401436,
        "Y": -316.23557154320565
      },
      {
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Id": "4fa47f8a5b53489fb3faa8439accf10e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4469.4550994568426,
        "Y": -133.54524881812608
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "b7a5870f65054faf940ff4591d2acd2f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4733.8678374627425,
        "Y": 322.99017860656409
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "bff24f250c2045369449b03c1df3d93d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -4994.0971182624417,
        "Y": 0.26793715834378418
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "0a7f2f3d0d364f9ca4da94ffb1a23a06",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5258.3751355990426,
        "Y": 142.92270626331378
      },
      {
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Id": "87968a4b2bc041259f68cbd2b95e60ed",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5505.409341988543,
        "Y": 143.93602449122432
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ebac83c2137e4a379f489544d3037a8d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6026.1565631749436,
        "Y": 299.22996462599372
      },
      {
        "Name": "Element.ElementType",
        "ShowGeometry": true,
        "Id": "e27fc74ba0144f58ac5ce92c274ba132",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -5808.7544403514439,
        "Y": 144.4392221926239
      },
      {
        "Name": "All Elements of Category",
        "ShowGeometry": true,
        "Id": "7eea5245523a4db0a0500979955476ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6110.0052831876455,
        "Y": 0.26793715834378418
      },
      {
        "Name": "Category.ByName",
        "ShowGeometry": true,
        "Id": "f9e2041064914f298dba909b18223162",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6367.9178904813452,
        "Y": 119.62704619894453
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "cf4bbd0bc8f041019d4a81a5a7844423",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -6625.1124952868449,
        "Y": 119.86578419927378
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "b269e5e6fd5b43b89ab7dd9aa6b48e25",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3073.8955873702648,
        "Y": -842.80508573896554
      },
      {
        "Name": "RadioButtons Data",
        "ShowGeometry": true,
        "Id": "58b9d01a62574d50a2824185dd2003d0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2718.3314802677714,
        "Y": 171.36221749899983
      },
      {
        "Name": "FilePath Data",
        "ShowGeometry": true,
        "Id": "9bac6a8c2ba9413da4700fea70f31c02",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2715.1581056908135,
        "Y": 440.92665772887631
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "73e9486c14aa41b98ad5dbb02edc554b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3135.8026010142003,
        "Y": 440.19625199246
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "a5a63ed47bee43e799cf673ef2b218a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3144.3511122291238,
        "Y": 124.57785336750044
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "581918af981b44caaef6993ad5eac3b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1984.8180474661467,
        "Y": -344.915743956117
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8667cb08fc8340af9becb5409d09faca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -777.0213417142636,
        "Y": -301.28765721526065
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "fb11fb8cf3784331b23edd743b10c6b0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -773.36985524290594,
        "Y": 2.7533734017026745
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "874675e66aa14e9a80d5856c8ab4093d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 353.98033598416123,
        "Y": -1302.0706181728954
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "3b5c580065f945b8b6d9078e9d40bc6d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 86.973133211325148,
        "Y": -1340.3768345565843
      },
      {
        "Name": "String from Object",
        "ShowGeometry": true,
        "Id": "c7edacf00156490c812fb95584a53225",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 797.00115842287687,
        "Y": -1300.4104539510834
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "79be690903674332a1b7929a8c8cf38e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1051.7956691995946,
        "Y": -1301.4825495274197
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "09f13a316774443daececa35962e2486",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 520.550113070356,
        "Y": -1132.6969569003816
      },
      {
        "Name": "List.TrueForAny",
        "ShowGeometry": true,
        "Id": "57565604ce064456bdb0c0eeff657916",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1343.9646486025072,
        "Y": -1300.8275252781734
      },
      {
        "Name": "Object.Identity",
        "ShowGeometry": true,
        "Id": "1f3539fae9524393841c011ba4c0e5c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1053.3268221359886,
        "Y": -1101.654004335606
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "b21f292bfb514bb38f89635706bb6987",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1730.4946538885829,
        "Y": -846.49723518151836
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "094793c38b33459f88ade7cc21753aca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10171.784153605959,
        "Y": -3274.0181860460775
      },
      {
        "Name": "Category.ByName",
        "ShowGeometry": true,
        "Id": "45d62dbc516e41c7bc3c0bab4e8cd033",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10359.649939331402,
        "Y": -3271.6975832342732
      },
      {
        "Name": "Level.ProjectElevation",
        "ShowGeometry": true,
        "Id": "0e94d9c8d04e44c7b6b915049fcae76f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10655.823305015945,
        "Y": -3010.1948812699461
      },
      {
        "Name": "Level.ProjectElevation",
        "ShowGeometry": true,
        "Id": "9cf87ad71eec47bf8e846d886af1dab0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11341.49178865332,
        "Y": -3369.0139578913959
      },
      {
        "Name": "Category.ByName",
        "ShowGeometry": true,
        "Id": "09ca0be0504f41d8b0af22b519a88c27",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14110.116541053654,
        "Y": -1933.849049329888
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "d8457ff3e1c742b9be07c694aa2764b4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13862.461807654468,
        "Y": -1934.7484985131362
      },
      {
        "Name": "Level.ProjectElevation",
        "ShowGeometry": true,
        "Id": "cb79eab257ff45be89bf6890e7b9fc97",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15485.645494061891,
        "Y": 1583.5835389888512
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "0c7ebb62b9af4bebb47a9e1c1b02fff7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19589.986165259666,
        "Y": 996.8161614118651
      },
      {
        "Name": "List.MaximumItem",
        "ShowGeometry": true,
        "Id": "3eef81fb84af409a9422382352919879",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20035.4772642115,
        "Y": 996.46644077134965
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e9d376e498074c168ef2891f0947499e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19071.7576660784,
        "Y": 1032.2315690017863
      },
      {
        "Name": "BB Data",
        "ShowGeometry": true,
        "Id": "2369ce4844024afe8f3070cbed835a37",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21164.038237909255,
        "Y": -2432.6050748723928
      },
      {
        "Name": "Write Excel",
        "ShowGeometry": true,
        "Id": "8717b3a0c1ec499ba4e6d12b97e8de80",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21557.678085988631,
        "Y": -2287.6732689503051
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "a2d56018f03743c784ea03651019a0dd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20860.225031391223,
        "Y": -2566.6265977116755
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "8aab4ee5c1994f7fa10d4fe6f3a5cc3c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20692.206418341328,
        "Y": -1643.3026566090944
      },
      {
        "Name": "Write Excel",
        "ShowGeometry": true,
        "Id": "6db41ea289fa44a699582ebd09cd64d6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21553.038844362829,
        "Y": -907.22688596931948
      },
      {
        "Name": "Write Excel",
        "ShowGeometry": true,
        "Id": "dbbf828dbc8744b080de92030a481fc4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21559.960381325829,
        "Y": -326.87602902441711
      },
      {
        "Name": "BB Data",
        "ShowGeometry": true,
        "Id": "59c15f3e98494ffba9b19ce033d3c513",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21218.172402630113,
        "Y": -1050.4729302058001
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "776dd0cbd01648feb201e2273bf9b6f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 20738.508645509406,
        "Y": -1051.2811850531934
      },
      {
        "Name": "BB Data",
        "ShowGeometry": true,
        "Id": "36ccad711c094b67a51090c1fe0b7ec8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21223.171329122692,
        "Y": -497.58023908536143
      }
    ],
    "Annotations": [
      {
        "Id": "4472588485394f18a1969596ede72f99",
        "Title": "Get only pipes",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "4fa04a11ab2348528468e553ae1188a1",
          "b269e5e6fd5b43b89ab7dd9aa6b48e25",
          "4a81315845d64f49ba4c249d75b238c3",
          "5d4a3bf65543467c8bf3f990d6e23dac",
          "083fcbe66c1641e9bd63d0ac712e25c4"
        ],
        "HasNestedGroups": false,
        "Left": 2186.924746123464,
        "Top": -1122.8281805724555,
        "Width": 1131.770841246801,
        "Height": 447.42309483348993,
        "FontSize": 24.0,
        "InitialTop": -1064.0281805724555,
        "InitialHeight": 366.22309483349,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "2f1cf5b82a8741b4b9c2e051d8238fcf",
        "Title": "Python to get all elements in network",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b52f43ba2f934aa89d10b5e2582532df"
        ],
        "HasNestedGroups": false,
        "Left": -218.50506361156204,
        "Top": -946.79017813541975,
        "Width": 254.8,
        "Height": 220.20000000000005,
        "FontSize": 24.0,
        "InitialTop": -859.19017813541973,
        "InitialHeight": 145.0,
        "TextblockHeight": 77.6,
        "Background": "#FFFFFF00"
      },
      {
        "Id": "69197bf2eb7649eba963e82063d63270",
        "Title": "User Selection: Selected Piping System",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "25c461b6b69649a5a563b78cfd21e0f7"
        ],
        "HasNestedGroups": false,
        "Left": -793.95408410000573,
        "Top": -646.23017690867982,
        "Width": 440.0,
        "Height": 190.99999999999994,
        "FontSize": 24.0,
        "InitialTop": -587.43017690867987,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "b8a48699a6f1453e91487b1becf53d68",
        "Title": "User Interface",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "761c09e4a3f94f849e44551784bf826f",
          "cbb1aa13d1fa47b79a5909eacca481c4",
          "b8f4e4a6c38a4f6db8f6988767b29e53",
          "9154625af5d1471cb212189c28758b9c",
          "626b72997c774390b37ef84d7edf2741",
          "581918af981b44caaef6993ad5eac3b7",
          "58b9d01a62574d50a2824185dd2003d0",
          "a5a63ed47bee43e799cf673ef2b218a0",
          "73e9486c14aa41b98ad5dbb02edc554b",
          "9bac6a8c2ba9413da4700fea70f31c02"
        ],
        "HasNestedGroups": false,
        "Left": -3173.8628803799429,
        "Top": -641.126123863879,
        "Width": 2096.0285573433634,
        "Height": 1279.8527815927553,
        "FontSize": 24.0,
        "InitialTop": -582.326123863879,
        "InitialHeight": 1168.2527815927554,
        "TextblockHeight": 48.8,
        "Background": "#FF90EE90"
      },
      {
        "Id": "4b1cf03742064f42bce38aaa4922a831",
        "Title": "Conditional",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "92286fe331554ad69637b553b26a0753"
        ],
        "HasNestedGroups": false,
        "Left": -776.78913472025761,
        "Top": 467.60982062103534,
        "Width": 773.6,
        "Height": 221.40000000000003,
        "FontSize": 24.0,
        "InitialTop": 526.40982062103535,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFFFA500"
      },
      {
        "Id": "d3833a249ac0459aba871180de7b8421",
        "Title": "Python to sort strings with numbers",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ca28b553ff394925ab28350fdeffa51d"
        ],
        "HasNestedGroups": false,
        "Left": -4192.7404727401436,
        "Top": -403.83557154320567,
        "Width": 365.19999999999982,
        "Height": 220.20000000000002,
        "FontSize": 24.0,
        "InitialTop": -316.23557154320565,
        "InitialHeight": 145.0,
        "TextblockHeight": 77.6,
        "Background": "#FFFFFF00"
      },
      {
        "Id": "e4d7c34b367544cdae905c99f9355f69",
        "Title": "Get all piping systems, filter them to only show Discharge",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "4fa47f8a5b53489fb3faa8439accf10e",
          "bff24f250c2045369449b03c1df3d93d",
          "b7a5870f65054faf940ff4591d2acd2f",
          "0a7f2f3d0d364f9ca4da94ffb1a23a06",
          "87968a4b2bc041259f68cbd2b95e60ed",
          "ebac83c2137e4a379f489544d3037a8d",
          "e27fc74ba0144f58ac5ce92c274ba132",
          "7eea5245523a4db0a0500979955476ac",
          "f9e2041064914f298dba909b18223162",
          "cf4bbd0bc8f041019d4a81a5a7844423"
        ],
        "HasNestedGroups": false,
        "Left": -6635.1124952868449,
        "Top": -192.34524881812609,
        "Width": 2388.4573958300025,
        "Height": 677.93542742469026,
        "FontSize": 24.0,
        "InitialTop": -133.54524881812608,
        "InitialHeight": 601.53542742469017,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "eea6c78c33b9452682ad03163a0e68c0",
        "Title": "DYNAMO COLOUR CODING LEGEND",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7de2fb71f5c74fe19eaff1de7c9c66fd",
          "210c830eb92c4c5fbf7cf82c3a771a74"
        ],
        "HasNestedGroups": false,
        "Left": -6632.0612481144126,
        "Top": -1084.0767759059486,
        "Width": 1523.6544997558713,
        "Height": 159.0384723043436,
        "FontSize": 24.0,
        "InitialTop": -1025.2767759059486,
        "InitialHeight": 195.83847230434367,
        "TextblockHeight": 48.8,
        "Background": "#FF848484"
      },
      {
        "Id": "8bcc0c6ee2f74382a068573db6192212",
        "Title": "Monitor",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "65d80307a96d43c69735a0a622f8ceeb"
        ],
        "HasNestedGroups": false,
        "Left": -5322.7689366548257,
        "Top": -876.61853436647334,
        "Width": 218.80000000000018,
        "Height": 122.59999999999991,
        "FontSize": 24.0,
        "InitialTop": -817.81853436647339,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "4dc222e205bf439e9e3dddc80ba628fc",
        "Title": "Conditional",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d8a00173e45d49379f6b2a4749f55d9b"
        ],
        "HasNestedGroups": false,
        "Left": -5527.0457104818815,
        "Top": -876.43138374773616,
        "Width": 189.19999999999982,
        "Height": 122.59999999999991,
        "FontSize": 24.0,
        "InitialTop": -817.63138374773621,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFFFA500"
      },
      {
        "Id": "c2eeac9256cd4501ad9e1a6d20f766d5",
        "Title": "Python",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "295ad000c4aa450883e8cd65aa776134"
        ],
        "HasNestedGroups": false,
        "Left": -5701.0719560937,
        "Top": -876.35727914198969,
        "Width": 158.0,
        "Height": 122.59999999999991,
        "FontSize": 24.0,
        "InitialTop": -817.55727914198974,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFFFFF00"
      },
      {
        "Id": "4710974b8f1f467d9b6f27bf0f83fa07",
        "Title": "To Revit",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "8b8c0464b89442739268c02a06f06c85"
        ],
        "HasNestedGroups": false,
        "Left": -5891.1197574593607,
        "Top": -877.1745051421226,
        "Width": 174.39999999999964,
        "Height": 122.59999999999991,
        "FontSize": 24.0,
        "InitialTop": -818.37450514212264,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFFF6347"
      },
      {
        "Id": "23f95ffb0c35479198e3dee28be057fa",
        "Title": "Input",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7833bb6beb0b46c6883f06a3f7b348ef"
        ],
        "HasNestedGroups": false,
        "Left": -6385.2394620396881,
        "Top": -878.4498445295244,
        "Width": 230.39999999999964,
        "Height": 122.59999999999991,
        "FontSize": 24.0,
        "InitialTop": -819.64984452952444,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFDDA0DD"
      },
      {
        "Id": "a054c51f6d1b4dddab6505d7417396b7",
        "Title": "Control",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "961c5bd0d08f48b9a75a9d037f65d19d"
        ],
        "HasNestedGroups": false,
        "Left": -6137.5888704344761,
        "Top": -878.02447977658676,
        "Width": 232.39999999999964,
        "Height": 122.59999999999991,
        "FontSize": 24.0,
        "InitialTop": -819.2244797765868,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FF90EE90"
      },
      {
        "Id": "86d82bccfdd64f4193f7906424e1907e",
        "Title": "Background",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "daec320ff24c48a68f807779b2468122"
        ],
        "HasNestedGroups": false,
        "Left": -6631.1396104344858,
        "Top": -878.51770167174209,
        "Width": 230.0,
        "Height": 122.59999999999991,
        "FontSize": 24.0,
        "InitialTop": -819.71770167174213,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "211f4551c92f49818be697e53eb8722d",
        "Title": "User Selection: Use Manual System Name",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "8667cb08fc8340af9becb5409d09faca"
        ],
        "HasNestedGroups": false,
        "Left": -787.0213417142636,
        "Top": -388.88765721526067,
        "Width": 443.2,
        "Height": 219.8,
        "FontSize": 24.0,
        "InitialTop": -301.28765721526065,
        "InitialHeight": 145.0,
        "TextblockHeight": 77.6,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "0b883fc3a4f048359feebb833286ae00",
        "Title": "User Selection: Selected Excel File",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "fb11fb8cf3784331b23edd743b10c6b0"
        ],
        "HasNestedGroups": false,
        "Left": -783.36985524290594,
        "Top": -84.84662659829732,
        "Width": 277.20000000000005,
        "Height": 219.8,
        "FontSize": 24.0,
        "InitialTop": 2.7533734017026745,
        "InitialHeight": 145.0,
        "TextblockHeight": 77.6,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "c626f08b75814aba9abaa1a739cc4ed0",
        "Title": "Check if piping system contains \"HL_FoulDrainage_SizingConnection\" family",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c7edacf00156490c812fb95584a53225",
          "79be690903674332a1b7929a8c8cf38e",
          "57565604ce064456bdb0c0eeff657916",
          "874675e66aa14e9a80d5856c8ab4093d",
          "3b5c580065f945b8b6d9078e9d40bc6d",
          "09f13a316774443daececa35962e2486",
          "1f3539fae9524393841c011ba4c0e5c4"
        ],
        "HasNestedGroups": false,
        "Left": 76.973133211325148,
        "Top": -1399.1768345565843,
        "Width": 1516.5915153911819,
        "Height": 429.72283022097827,
        "FontSize": 24.0,
        "InitialTop": -1340.3768345565843,
        "InitialHeight": 383.72283022097827,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "16d014332b9b45889c57e03a62670422",
        "Title": "Get lowest pipe in the system",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "29a4ee7617cc468ab2b00687944425e1",
          "eaa83c28defa431faa6db05bb3369bd5",
          "98e9150c878c46189b613b7d17197783",
          "63ad3d979a0c488e893a84a87e3c0c35",
          "43020bdc4a64460a9ff519e3e4ae76fd",
          "e26d1aaf45934f9fa96d127c2e00458b"
        ],
        "HasNestedGroups": false,
        "Left": 3521.8541041526987,
        "Top": -1168.8201719779522,
        "Width": 1792.7211027200137,
        "Height": 491.91708758015818,
        "FontSize": 24.0,
        "InitialTop": -1110.0201719779523,
        "InitialHeight": 415.5170875801582,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "7e9de8c4781444468186afce626ca866",
        "Title": "Python to evaluate elements in each network and output a \r\nsublist for each branch",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "756fcbcc65ca4e9193a5306e3c7ab53e",
          "a65456329fb44a5aba776cd022efd2e2"
        ],
        "HasNestedGroups": false,
        "Left": 5526.0968864427987,
        "Top": -1543.2363304981805,
        "Width": 449.14519812399703,
        "Height": 249.0,
        "FontSize": 24.0,
        "InitialTop": -1426.8363304981804,
        "InitialHeight": 145.20193284899915,
        "TextblockHeight": 106.4,
        "Background": "#FFFFFF00"
      },
      {
        "Id": "0ec5d35ea7a6427683481d3cb716b02a",
        "Title": "Python to get a number for each item in a list depending on depth and sub list number",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "bdcbe6ee5481476d847e963fc88acced",
          "9f2a3aeb385f427faa17b63e1b042867",
          "09240c6d13d04c34ab7570e398744506"
        ],
        "HasNestedGroups": false,
        "Left": 6352.1537733285741,
        "Top": -1520.7401660617893,
        "Width": 799.62656568514922,
        "Height": 251.96570675895987,
        "FontSize": 24.0,
        "InitialTop": -1433.1401660617894,
        "InitialHeight": 151.93435855204007,
        "TextblockHeight": 77.6,
        "Background": "#FFFFFF00"
      },
      {
        "Id": "596d6a9185ec480b8de7c436d29385df",
        "Title": "Get only pipes",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "f46e9220434b492694147fac14f52201",
          "63e17e25d9214278b4d415cd434c5b35",
          "36f90f9ab94f4dc7be06e538c37b3025",
          "b5ace48024574ce7998398402552bb63"
        ],
        "HasNestedGroups": false,
        "Left": 6504.9469648184631,
        "Top": -2036.3582361831943,
        "Width": 779.15687478439486,
        "Height": 328.62704443283997,
        "FontSize": 24.0,
        "InitialTop": -1977.5582361831944,
        "InitialHeight": 282.62704443283997,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "9ab19c7d0ead46cf83e58eef8cb223df",
        "Title": "Get only discharge pipes",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "813b3cc850bc4ccd8afdf054bc85a5b2",
          "1a8c928ceee642bfb2968f91b32d39ed",
          "4099482e5ff74dff92068b2e73ab650a",
          "703edad22b334dbeb55625ddf4f923fa",
          "2c095377e6054599883850feb66e8bf1"
        ],
        "HasNestedGroups": false,
        "Left": 7988.3827405377542,
        "Top": -1647.6196669499809,
        "Width": 1290.8332269677339,
        "Height": 494.84920610987433,
        "FontSize": 24.0,
        "InitialTop": -1588.819666949981,
        "InitialHeight": 448.84920610987433,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "05be11b5a6974fd68f90c6d2dbfbcd13",
        "Title": "Get only pipes with DU > 0",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "31c62f9d37784ef9b668c43dd41c9e76",
          "f5e409f3df2044e596795ebc8aafd9c7",
          "d592f1851137406c9aa9ebac96b9ccbc",
          "87d01b658b3a415fbc648aa65abed968",
          "ca8775ba343f4adbbd39f3a6c7721f30",
          "908e1638d8c84c36913c911edee15208"
        ],
        "HasNestedGroups": false,
        "Left": 9325.98364515573,
        "Top": -1648.1150406884399,
        "Width": 1195.6572753457694,
        "Height": 437.8089961733499,
        "FontSize": 24.0,
        "InitialTop": -1589.31504068844,
        "InitialHeight": 391.8089961733499,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "102f067f983248cba7cdfc002bc24954",
        "Title": "Get first indices of pipes with DU's > 0",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "ed797e5f5fda4b2694385ef3be28ae4c",
          "df85a14ce5484edd9e9e5681210ee32c",
          "2e9e526acbc24c8a8a0122702988b88e",
          "c6293a4573f349cfbc84502461f9bc3c",
          "7542e4da52744299a79061e3ab429a69"
        ],
        "HasNestedGroups": false,
        "Left": 10544.756741821533,
        "Top": -1647.6488639907207,
        "Width": 1295.5510921718305,
        "Height": 425.20988128169915,
        "FontSize": 24.0,
        "InitialTop": -1588.8488639907207,
        "InitialHeight": 379.20988128169915,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "b69be5166f0447e08a1e5ec48eac37e0",
        "Title": "Sort levels based on elevation",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "86de41aa76494b69954cbdc589ffdbe8",
          "86ea297ac01c430280ef933c74d7825d",
          "45d62dbc516e41c7bc3c0bab4e8cd033",
          "0e94d9c8d04e44c7b6b915049fcae76f",
          "094793c38b33459f88ade7cc21753aca"
        ],
        "HasNestedGroups": false,
        "Left": 10161.784153605959,
        "Top": -3332.8181860460777,
        "Width": 1092.8533972024888,
        "Height": 454.82330477613141,
        "FontSize": 24.0,
        "InitialTop": -3274.0181860460775,
        "InitialHeight": 408.82330477613141,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "d914c27919924d0795d43dadb8285647",
        "Title": "Determine levels where pipes are located",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3a4ad099eb0f41a98bfd1d2d2813e35a",
          "290afcf5fa6b430db79b7e548dd7ae32",
          "883052f204ce413dad814e3f7aded6de",
          "bcabc496458941ff962045c3b58a4325",
          "192796d6a94f4822904683e567b89cfc",
          "c45b01dabf3f4cc4aa5f6f773c9c9450",
          "4d2aa0603b014f88b197fed856c233c1",
          "77bbbb4dd117432caa464988edf3ba47",
          "677560d958654d1f91bbb92d61fb99fc",
          "af86a42435b848a0a6c75afe11c2bcef",
          "83aa3b746f7449c588eefccdb0ff5f91",
          "98608c080b404b3a896764b308e36888",
          "10086fadb9df4bfebbacbc990ba0e93c",
          "8a2bfc6226d04c72aaf3277b36b101ac"
        ],
        "HasNestedGroups": false,
        "Left": 11829.0749088779,
        "Top": -3709.0524283181903,
        "Width": 2653.1101643573274,
        "Height": 1450.1654504357402,
        "FontSize": 24.0,
        "InitialTop": -3650.25242831819,
        "InitialHeight": 1404.1654504357402,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "cb9d581a5630450dbb97d608786c4683",
        "Title": "Conditional",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5c8f947c816a4955a82a4c10bf71b280"
        ],
        "HasNestedGroups": false,
        "Left": 12398.971752535434,
        "Top": -400.92462137335525,
        "Width": 517.20000000000073,
        "Height": 191.0,
        "FontSize": 24.0,
        "InitialTop": -342.12462137335524,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFFFA500"
      },
      {
        "Id": "9d10f1c491784b28a606caa308b3ca93",
        "Title": "Get only Sizing Connections",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5ecef992f16642af9d2cb06eb66c8b79",
          "3cbc971aabc64f77afcf74cf8cb15107",
          "5123decef70d491189c9a77e9d2bd7b2",
          "6f1b60c4d79d4b0696134f9a87527750",
          "90785ab9c47b4b528f04785c85bdf178",
          "5ac79b264c174a2d8a0900ed5d2a5fb5",
          "7d072189b33845ca9d9484d069a5b676"
        ],
        "HasNestedGroups": false,
        "Left": 13157.740369413032,
        "Top": 307.44406485866779,
        "Width": 1564.0366139543257,
        "Height": 526.50754999488618,
        "FontSize": 24.0,
        "InitialTop": 366.2440648586678,
        "InitialHeight": 480.50754999488606,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "52f666af6a5747dda29bda8699b0556a",
        "Title": "Python to get fittings connected to pipes",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a664684d6b944b28aecd8c5ef9dcb74d",
          "e8cff726379e46ab8d80d9bb279b5172"
        ],
        "HasNestedGroups": false,
        "Left": 12060.652297712721,
        "Top": 439.363568552261,
        "Width": 447.49163245549971,
        "Height": 250.55617869227149,
        "FontSize": 24.0,
        "InitialTop": 526.963568552261,
        "InitialHeight": 145.35617869227144,
        "TextblockHeight": 77.6,
        "Background": "#FFFFFF00"
      },
      {
        "Id": "6750ae81f44042db8621b014b336afe2",
        "Title": "Get all Piping Systems",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1882c671546e44509c7c4f0eeb15cfd9",
          "09ca0be0504f41d8b0af22b519a88c27",
          "d8457ff3e1c742b9be07c694aa2764b4"
        ],
        "HasNestedGroups": false,
        "Left": 13852.461807654468,
        "Top": -1993.5484985131361,
        "Width": 807.25308253534786,
        "Height": 191.89944918324818,
        "FontSize": 24.0,
        "InitialTop": -1934.7484985131362,
        "InitialHeight": 145.89944918324818,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "016c2986fa754763980975a6c82462b5",
        "Title": "Get sizing connections parameters",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "8877ddbba02f404b8faed2dcffc2c266",
          "ad5617dd1c5a44a29eb3f46404930f48",
          "8eca213c8fa842388685b4922f7e3c71",
          "1a58533ddc79477aac4db6346c226b94",
          "76ca8cd7e8a64dc19502410eba6633f0",
          "328b5b52810948d6bce8220265c31df4",
          "786c3d614ef54843a095f7a04ac6ff29",
          "7c331fddfac241e4b992ce64ae357bb9",
          "f638eef75fae432a87092c1676549b53",
          "730a31b628a1435781740f4dd3885fb6",
          "cb79eab257ff45be89bf6890e7b9fc97"
        ],
        "HasNestedGroups": false,
        "Left": 14809.610246122966,
        "Top": 1394.5890260406443,
        "Width": 2534.8736558829642,
        "Height": 778.23959340708484,
        "FontSize": 24.0,
        "InitialTop": 1453.3890260406442,
        "InitialHeight": 461.839593407085,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "089cf408361143389b6ed99091a24dd8",
        "Title": "Get DU's for User Defined Appliances",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "63cd9b7f14cc426cb6dec151033d898b",
          "878d5da457f445e1a9aeb621c872074d",
          "0c7ebb62b9af4bebb47a9e1c1b02fff7",
          "3eef81fb84af409a9422382352919879",
          "e9d376e498074c168ef2891f0947499e"
        ],
        "HasNestedGroups": false,
        "Left": 18895.811606130897,
        "Top": 937.6664407713497,
        "Width": 1362.0656580806026,
        "Height": 470.0584425229099,
        "FontSize": 24.0,
        "InitialTop": 996.46644077134965,
        "InitialHeight": 393.65844252291004,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "bc54359dcde84a8781b43aad01637ac0",
        "Title": "Check whether systems contain WC",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5d8bd03fb6144599b85f8072f9e03369",
          "c130d83e3a9340428f7a926f96138566",
          "71aeed0ce4254bde8b1c99517f263331",
          "bd09947521354a5c8b6307957cae6d37",
          "570b2b1336bd40078ce3ac0318579cd8",
          "b304b95140e8464db31713b9d1d3b104",
          "f941b794b7094a818f3ab9c33feda19a",
          "8773770933f745b2b50cb316ceb1d623",
          "0322f62d695a41e19476d0c464cf2a76",
          "6b9e42bc39e343b191acf994f212c890",
          "e855387bfc9445e6a336db97a6fd41f7",
          "7e3e8f19b01b4e06b4a689035f5d3b21",
          "73268fac90e34939956babdac21934a5",
          "9dc524dd89744ebb96af87560299264d",
          "8ffc651c0d594f45afc6264d5025aad1",
          "5a76ef10aaab46a091530282245af8bc",
          "43273feef8ab4192bd532a0af1451620",
          "e9c4130ba300407e8ef7371abe906ae1"
        ],
        "HasNestedGroups": false,
        "Left": 14794.953558719475,
        "Top": 196.14163244868092,
        "Width": 2512.0350324354604,
        "Height": 1036.8478409340016,
        "FontSize": 24.0,
        "InitialTop": 254.94163244868093,
        "InitialHeight": 990.84784093400151,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "95083ce7f3464f60a88401f8d7c96fd5",
        "Title": "Conditional",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c08185316ac7467d8c090fe7bc8aef42",
          "11dfa29e4abf4eee9063480962523472",
          "a720510f21a2471498ffdeaf6d2eb46b",
          "91834ff8561d475fbb62ca068a1ad16e"
        ],
        "HasNestedGroups": false,
        "Left": 13199.205324854602,
        "Top": -640.2584200512631,
        "Width": 843.58924260381718,
        "Height": 381.23441215558967,
        "FontSize": 24.0,
        "InitialTop": -581.45842005126315,
        "InitialHeight": 330.86669403239887,
        "TextblockHeight": 48.8,
        "Background": "#FFFFA500"
      },
      {
        "Id": "f3c59201a6824c6fbf17361cb6ec9931",
        "Title": "Conditional",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "47d56e95a76a4ac5930dfd7aaee0bde0",
          "40bf5b73c1ab4407a5d4a6b62cb3e2a6",
          "1bfc455afa8c4c78a01814cdf50b69d6"
        ],
        "HasNestedGroups": false,
        "Left": 16412.5447407916,
        "Top": -1985.3567471260765,
        "Width": 709.49922991655694,
        "Height": 411.54125663440982,
        "FontSize": 24.0,
        "InitialTop": -1926.5567471260765,
        "InitialHeight": 365.54125663440982,
        "TextblockHeight": 48.8,
        "Background": "#FFFFA500"
      },
      {
        "Id": "a6df4075651c426187b7e7ad00f1c6ab",
        "Title": "Write Discharge Systems & Pipes data to Excel",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2369ce4844024afe8f3070cbed835a37",
          "a2d56018f03743c784ea03651019a0dd",
          "8717b3a0c1ec499ba4e6d12b97e8de80"
        ],
        "HasNestedGroups": false,
        "Left": 20850.225031391223,
        "Top": -2625.4265977116756,
        "Width": 929.85305459740994,
        "Height": 570.75332876137054,
        "FontSize": 24.0,
        "InitialTop": -2566.6265977116755,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFFF6347"
      },
      {
        "Id": "15894799c10b4291acfb691d97cb8b67",
        "Title": "Write Discharge Systems & Sizing Connections data to Excel",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "59c15f3e98494ffba9b19ce033d3c513",
          "6db41ea289fa44a699582ebd09cd64d6",
          "776dd0cbd01648feb201e2273bf9b6f8"
        ],
        "HasNestedGroups": false,
        "Left": 20728.508645509406,
        "Top": -1110.0811850531934,
        "Width": 1046.9301988534244,
        "Height": 435.85429908387391,
        "FontSize": 24.0,
        "InitialTop": -1051.2811850531934,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFFF6347"
      },
      {
        "Id": "3adcd5ffdb8e48fd81b064507eec567e",
        "Title": "Write User Defined Appliances data to Excel",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "dbbf828dbc8744b080de92030a481fc4",
          "36ccad711c094b67a51090c1fe0b7ec8"
        ],
        "HasNestedGroups": false,
        "Left": 21213.171329122692,
        "Top": -556.38023908536138,
        "Width": 569.189052203139,
        "Height": 462.50421006094427,
        "FontSize": 24.0,
        "InitialTop": -497.58023908536143,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFFF6347"
      },
      {
        "Id": "210c830eb92c4c5fbf7cf82c3a771a74",
        "Title": "COLOUR CODING LEGEND",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -5283.2067483585415,
        "Top": -966.438303601605,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "65d80307a96d43c69735a0a622f8ceeb",
        "Title": "USE:\r\nFOR IMPORTANT WATCH NODES",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -5312.7689366548257,
        "Top": -809.81853436647339,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "d8a00173e45d49379f6b2a4749f55d9b",
        "Title": "USE:\r\nFOR CONDITIONAL NODES",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -5517.0457104818815,
        "Top": -809.63138374773621,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "295ad000c4aa450883e8cd65aa776134",
        "Title": "USE:\r\nFOR PYTHON NODES",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -5691.0719560937,
        "Top": -809.55727914198974,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "8b8c0464b89442739268c02a06f06c85",
        "Title": "USE:\r\nFOR CHANGES TO REVIT",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -5881.1197574593607,
        "Top": -810.37450514212264,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7de2fb71f5c74fe19eaff1de7c9c66fd",
        "Title": "COLOUR CODING LEGEND",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -6622.0612481144126,
        "Top": -1017.2767759059486,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "7833bb6beb0b46c6883f06a3f7b348ef",
        "Title": "USE:\r\nFOR FIXED INPUT (FILE PATHS ETC.)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -6375.2394620396881,
        "Top": -811.64984452952444,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "961c5bd0d08f48b9a75a9d037f65d19d",
        "Title": "USE:\r\nFOR USER CONTROL (SLIDERS ETC.)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -6127.5888704344761,
        "Top": -811.2244797765868,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "daec320ff24c48a68f807779b2468122",
        "Title": "USE:\r\nFOR GENERAL WORKFLOW NODES",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -6621.1396104344858,
        "Top": -811.71770167174213,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 2766.8141165081906,
    "Y": 793.56359493251512,
    "Zoom": 0.41074711488287508
  }
}