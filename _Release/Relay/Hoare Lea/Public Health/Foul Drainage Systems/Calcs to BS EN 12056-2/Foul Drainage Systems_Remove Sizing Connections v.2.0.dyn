{
  "Uuid": "023c8344-8fca-413c-8fb5-d78bae6bd691",
  "IsCustomNode": false,
  "Description": null,
  "Name": "Foul Drainage Systems_Remove Sizing Connections v.2.0",
  "ElementResolver": {
    "ResolutionMap": {
      "String": {
        "Key": "DSCore.String",
        "Value": "DSCoreNodes.dll"
      },
      "Category": {
        "Key": "Revit.Elements.Category",
        "Value": "RevitNodes.dll"
      },
      "List.FilterByBoolMask": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      },
      "Dictionary": {
        "Key": "DesignScript.Builtin.Dictionary",
        "Value": "DesignScriptBuiltin.dll"
      },
      "Element": {
        "Key": "Revit.Elements.Element",
        "Value": "RevitNodes.dll"
      },
      "Math": {
        "Key": "DSCore.Math",
        "Value": "DSCoreNodes.dll"
      },
      "DSCore.List.Empty": {
        "Key": "DSCore.List",
        "Value": "DSCoreNodes.dll"
      },
      "DSCore.List": {
        "Key": "DSCore.List",
        "Value": "DSCoreNodes.dll"
      },
      "Get.ItemAtIndex": {
        "Key": "DesignScript.Builtin.Get",
        "Value": "DesignScriptBuiltin.dll"
      }
    }
  },
  "Inputs": [],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "UseManualSystemName[1];",
      "Id": "1992d40de464401d88a79b4eab16b428",
      "Inputs": [
        {
          "Id": "63265ee75ca74ca9ace454755089b071",
          "Name": "UseManualSystemName",
          "Description": "UseManualSystemName",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0bf3c3fd53f949058348a9bedb2a642a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\n\nclr.AddReference(\"RevitServices\")\nimport RevitServices\nfrom RevitServices.Persistence import DocumentManager\nfrom RevitServices.Transactions import TransactionManager\ndoc = DocumentManager.Instance.CurrentDBDocument\n\nclr.AddReference(\"RevitAPI\")\nimport Autodesk\nfrom Autodesk.Revit.DB import *\n\nclr.AddReference(\"RevitNodes\")\nimport Revit\nclr.ImportExtensions(Revit.Elements)\nclr.ImportExtensions(Revit.GeometryConversion)\n\n#Many thanks to Konrad K Sobon for his awesome ProcessList function!\ndef Unwrap(item):\n\treturn UnwrapElement(item)\n\ndef ProcessList(_func, _list):\n    return map( lambda x: ProcessList(_func, x) if type(x)==list else _func(x), _list )\n\nif isinstance(IN[0], list):\n\tsystems = ProcessList(Unwrap, IN[0])\nelse:\n\tsystems = [Unwrap(IN[0])]\n\t\n\t\ndef getNetwork(system):\n\tnetwork = None\n\ttry:\n\t\tnetwork = [x.ToDSType(True) for x in system.PipingNetwork]\n\texcept:\n\t\tpass\n\treturn network\n\n\t\t\t\n#Assign your output to the OUT variable.\n\nOUT = ProcessList(getNetwork, systems)",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "60e034fbddee4bba9fe6721e41063c35",
      "Inputs": [
        {
          "Id": "00fd9de51b87457ab8961cbabb5fc3cd",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ff53803a97254ff1ae924a5da351b142",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "SelectedPipingSystem[0];",
      "Id": "bca4a2c43f404448bca9fb8e5e255036",
      "Inputs": [
        {
          "Id": "0a9a265b193244bfa07a06005e9dc39b",
          "Name": "SelectedPipingSystem",
          "Description": "SelectedPipingSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7f16564bfb874d099f6fb082b84e3a60",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "f919a17b1af8462d838a94a3182a897f",
      "Inputs": [
        {
          "Id": "a677c169f2c540939b4e1c4bf8156bbf",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "25d2a87c3f4c41b3beed864a07305cd4",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "055c45bf50ef4e1586e3ad1a1213a581",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Manual System Name\";",
      "Id": "13fc91b270534bac865584add19fe541",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5bcf8544f67241cd90422d24a7d3f284",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "2f58e4f491aa48f7965ff22a04b24c88",
      "Inputs": [
        {
          "Id": "c198534aeb79453b905ab94807d9edf1",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1b7b088a704a44f18e8581c9db26269b",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Sort@var[]",
      "Id": "2137f2040bfc422ab5653155bfd582c1",
      "Inputs": [
        {
          "Id": "60865c7f6c8a48cdb3eec68f1fa7a83c",
          "Name": "list",
          "Description": "List of items to be sorted\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f1fc49f42bca459aad53f4ee46ad029a",
          "Name": "int[]",
          "Description": "The indices of the items in the sorted list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Sorts a list by the items and return their indices.\n\nList.Sort (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "ac04a566a2114574892b3185db6b4742",
      "Inputs": [
        {
          "Id": "9704aae12bf0454baf83060d24c2851b",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bcf58a4dd0fa40a9ae1ce8ffe33ac9fe",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af0a8a33c2ab4f859a1d5d81d7d0ba98",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Length@string",
      "Id": "289ed23a5ee44569b22e3729363dd707",
      "Inputs": [
        {
          "Id": "4a4a8b55fa914ffd950ed276efeaf3de",
          "Name": "string",
          "Description": "String to find the length of\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0d9fac58b7a14ea09cc3035807b0074a",
          "Name": "int",
          "Description": "Number of characters in the string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of characters contained in the given string.\n\nString.Length (string: string): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x>0;",
      "Id": "e9bb49cf8ba74f44acb3f67fc018ff99",
      "Inputs": [
        {
          "Id": "00baf13576be4029a12c38dfb8651f7f",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "82aeeb8686ba4a289773ae351bda7d30",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "List.TrueForAll@var[]..[],Function",
      "Id": "836ff35bb2ed4ae88eb1448f0ff7c4b7",
      "Inputs": [
        {
          "Id": "625deb69e31142329c97d4893a98ee71",
          "Name": "list",
          "Description": "List from which to evaluate items by query function\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5c8cb027b99405699f55babecbc47b4",
          "Name": "queryFunction",
          "Description": "Function to evaluate list\n\nFunction",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5783c995743c49d4a1ca3f6dfac1d7ca",
          "Name": "bool",
          "Description": "Returns true if all items in the list evaluate to true with the given query function",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns true if all items in the list evaluate to true with the given query function\n\nList.TrueForAll (list: var[]..[], queryFunction: Function): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.Object.Identity@var",
      "Id": "3691af966a5c4c098f2b7cbca524ec3c",
      "Inputs": [
        {
          "Id": "06dd4ca6bc49413c83a97e6dd5f45bbb",
          "Name": "object",
          "Description": "An object.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c159e93023874860a04c2653c05ccb35",
          "Name": "object",
          "Description": "Same object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns what is passed in, doing nothing.\n\nObject.Identity (object: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "ed6b486ded01425eb7b6d1aaa67241b8",
      "Inputs": [
        {
          "Id": "95b730a4d6f74c60b9e7cc958ef0adc1",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "911cef39270d42caaac1c93bfbd3f908",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "49c49f1bb17449698db0e4d29c44c1e8",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "List.TrueForAll@var[]..[],Function",
      "Id": "6378b1a4351e434cb36379e2349065db",
      "Inputs": [
        {
          "Id": "c03dbda79476407f97e9bc613ad9d94a",
          "Name": "list",
          "Description": "List from which to evaluate items by query function\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24f642d8d8e4499ab6abe1c263b233ce",
          "Name": "queryFunction",
          "Description": "Function to evaluate list\n\nFunction",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "23e0a54589cd44cf9bf1e42ca613b9c3",
          "Name": "bool",
          "Description": "Returns true if all items in the list evaluate to true with the given query function",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns true if all items in the list evaluate to true with the given query function\n\nList.TrueForAll (list: var[]..[], queryFunction: Function): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "577c7f0a4d90468aa81f7bbb863cd907",
      "Inputs": [
        {
          "Id": "2b1ea63703cd40e2981733c3786ceafa",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d6aef6e6278f46b2a324b2da333b5e32",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "82b453e0f1284e9890fab74569822469",
          "Name": "list",
          "Description": "A list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetCategory",
      "Id": "3b5bc256c66640adbb7d764bf48ef1a1",
      "Inputs": [
        {
          "Id": "73900b30899e4901b42f610a2ca13001",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "aa321029b36c4ce68d24b2696f9c991e",
          "Name": "Category",
          "Description": "Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get Element Category\n\nElement.GetCategory: Category"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Category.Name",
      "Id": "f7b017915d4b45c08698b8cf8fdd72bb",
      "Inputs": [
        {
          "Id": "e5dd730123de4737a7814ffb9cf2f32a",
          "Name": "category",
          "Description": "Revit.Elements.Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "062909bc77a84ec884ae00158e4dae47",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The name of the Category.\n\nCategory.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "db33459537184e34a17585b7834db6c6",
      "Inputs": [
        {
          "Id": "816fcc582fdf4398b696a5d7319ff9a2",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0bb2a6e472944ba9aff8ea6420456b63",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb666824f3db4b85be56cd5b2ff6e338",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "285a62f35e0348fbacc7878704134722",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Pipes\";",
      "Id": "6bb255afcc6440e1b5e030ac854de0d2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c175019d05814a1ca89e605a29e46b22",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "fc00f9d7ef1f435798802ae59c03cb4f",
      "Inputs": [
        {
          "Id": "4a415deda5034a1dbccfec8704b6b1e1",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "96cb58536e7f41d2943d517a3fbf253f",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "55a6aac633804f73b260f9c05fe3e9d8",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "32dcc5db378047579b56bf4d3e4163f2",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "SelectedLevels[0];",
      "Id": "140db3a8d51c44fbb321f4e6814ef357",
      "Inputs": [
        {
          "Id": "d17b3944b7ad43d4acac866b00603253",
          "Name": "SelectedLevels",
          "Description": "SelectedLevels",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e23739ba01c412ba587850205d34ab8",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "300e1985ad544960bc5e49bb3114bd2b",
      "Inputs": [
        {
          "Id": "71ae57d400044ae6a49f6133cffa25b6",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d00898b1ae7b4d51829b3de8948c0531",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f76ee31b637c47948a9cdf6625f10219",
          "Name": "list",
          "Description": "A list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"\";",
      "Id": "8fff634a9de44d18a6ce4c30b20e9dbb",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a89d0762adf14968991271ba270e7c8c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "c8bdf417393841feb865e20cf329842b",
      "Inputs": [
        {
          "Id": "c4c2a71dada84a8a87e81322d852c378",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2243018f62034e5bba71acf124b0eae0",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "02b0f1fc5e2b47d28253a35c40b58ea2",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x==false? 0 : 1;",
      "Id": "313888face5b4f34b2d31205e9af4af8",
      "Inputs": [
        {
          "Id": "8f3d44595c4d418097fdd57ca8934c19",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "069e764ecc394c8da21f663f8038b52d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "849f6aac043a4a6e8bcb8b9d5fa9a8de",
      "Inputs": [
        {
          "Id": "238f3ccc4ca14f6292343a3af484e663",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b5513475056d4bdaa6d17d6fbff6c921",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b80f0ad9f5834f219d7c7e3f1c093ff0",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "<@var[]..[],var[]..[]",
      "Id": "5dd4d45871504ce7a6f4dfb3b9086b7b",
      "Inputs": [
        {
          "Id": "f81c408981954930a824a6d83042ad18",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "f392355b1c194dc4a33a0ff34ac84a9b",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e8d9d0f098b433cb621845e8ed538db",
          "Name": "bool",
          "Description": "Result of check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Compares if x is lower to y\n\n< (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FirstIndexOf@var[]..[],var",
      "Id": "5a9cd82838714bc69f916e870829c691",
      "Inputs": [
        {
          "Id": "168a5be348f5496886712d1be30ac30f",
          "Name": "list",
          "Description": "List to search in. If this argument is null, -1 is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "9a14e3c847ee4c94830a4cf72c7b79cf",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "be3c1ed78d4e4f73a302b2b3404f4ce5",
          "Name": "int",
          "Description": "Zero-based index of the item in the list, or -1 if it is not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Given an item, returns the zero-based index of its first occurrence in the list. If the item cannot be found in the list, -1 is returned.\n\nList.FirstIndexOf (list: var[]..[], item: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x-1;",
      "Id": "a7cb7caff4dc46778bd4f0db0337f417",
      "Inputs": [
        {
          "Id": "2e1d17dd4baf4ca282808c136de876f4",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7fbc030bc80e4ca8b317420ea74fd5d4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetLocation",
      "Id": "86f8b98fc50d4c1ca157c24f97801675",
      "Inputs": [
        {
          "Id": "2741c7e6092745d5870dce3b34216000",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "878337e169924249901924441576187a",
          "Name": "Geometry",
          "Description": "Location Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get an existing element's location\n\nElement.GetLocation ( ): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Point.Z",
      "Id": "43f6e7be38424afe9bda146d12df3dd9",
      "Inputs": [
        {
          "Id": "156084a92168498397ef0e42cf9d567c",
          "Name": "point",
          "Description": "Autodesk.DesignScript.Geometry.Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "65ba5765b38e45cb8a1a19bc97721bbd",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Z component of a Point\n\nPoint.Z: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "true;",
      "Id": "e32cbbd6385a4d01aafaa535ee2120fe",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b963bf9a0ffa4e00848986d532801fe0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "73c75d3beea3444ba3713ab5522ae34d",
      "Inputs": [
        {
          "Id": "3f86e3c3c0044bda9d9832bcc3a47462",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "51ef2be43b464ef6a31458b48846e311",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d545e0de5ff643aa8ca68956a3d74b6e",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.Name",
      "Id": "f3af12a46b694584a009dfbe6bef4e09",
      "Inputs": [
        {
          "Id": "4eeeb1f6c0ce4867ad98db2fb653413d",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0084f24770c495593d3efec384b33e3",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The name of the level\n\nLevel.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "List.SortByFunction@var[]..[],Function",
      "Id": "5c3c12c1cc054620a5d03867c9f0db1a",
      "Inputs": [
        {
          "Id": "dfe1b8daaf2846fda984f00f754fe949",
          "Name": "list",
          "Description": "list of values\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c167cea3c0014b4e94d74504aa248fd6",
          "Name": "sortFunction",
          "Description": "function used to sort list\n\nFunction",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ec36dc3ab4c44d4fbdab59c9f43d88ab",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Use a function to determine how list items should be sorted.\n\nList.SortByFunction (list: var[]..[], sortFunction: Function): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "ca24493bdff34bc19be91d9a8a74998a",
      "Inputs": [
        {
          "Id": "d6b6d21705844e80a6ad101785f4e3ec",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "02b023a1c6f342f3911e715f173a6c78",
          "Name": "Elements",
          "Description": "An element type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GroupByKey@var[]..[],var[]..[]",
      "Id": "7617cdba3ae2415b83f82fe41dcb37a8",
      "Inputs": [
        {
          "Id": "c956a13e64a249ca94f9f811f6b09b9a",
          "Name": "list",
          "Description": "List of items to group as sublists\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1e8ac1d3a71847b0a5fc2b41bc26c06c",
          "Name": "keys",
          "Description": "Key values, one per item in the input list, used for grouping the items\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25ba6624a4984bf4a4fa42b333f8c33a",
          "Name": "groups",
          "Description": "list of sublists, with items grouped by like key values",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8dd8fdb34ea54ae996e562d825ad6550",
          "Name": "uniqueKeys",
          "Description": "key value corresponding to each group",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Group items into sub-lists based on their like key values\n\nList.GroupByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a36f5ab7a951410781bf2dd487879b9d",
      "Inputs": [
        {
          "Id": "9be48347ecb54d5ea092566b9b0778c8",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7fc5d387e7da422cb7f96244ce7b8938",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3694ae008a8f45b98b2dc9551e2b19c5",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nclr.AddReference(\"RevitAPI\")\r\nimport Autodesk\r\nfrom Autodesk.Revit.DB import *\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\n\r\n# The inputs to this node will be stored as a list in the IN variables.\r\n# Angled branching network evaluator by Jared Linden jaredlindena@hoarelea.com \r\n\r\ndataEnteringNode = UnwrapElement(IN[0])\r\n\r\ndebug = []\r\n\r\nclass Run:\r\n\r\n\tdef __init__(self, _number, _parent, _start_id):\r\n\t\tself.parent = _parent\r\n\t\tself.start_id = _start_id\r\n\t\tself.number = _number\r\n\t\tself.__branches = 0\r\n\t\t\r\n\tdef depth(self):\r\n\t\treturn self.parent.depth() + 1 if self.parent else 1\r\n\t\t\r\n\tdef runString(self):\r\n\t\treturn str(self.number) if self.parent is None else self.parent.runString() + \".\" + str(self.number)\r\n\t\t\r\n\tdef branch(self, start_id):\r\n\t\tself.__branches += 1\r\n\t\treturn Run(self.__branches, self, start_id)\r\n\t\t\r\n\tdef __eq__(self, other):\r\n\t\tif not isinstance(other, Run): \r\n\t\t\treturn False\r\n\t\treturn self.number == other.number and self.depth() == other.depth() if self.parent == other.parent else False\r\n\t\t\r\n\tdef __lt__(self, other):\r\n\t\tif self.depth() == other.depth() and self.number == other.number:\r\n\t\t\treturn self.parent < other.parent if self.parent else - 1\r\n\t\telse:\r\n\t\t\treturn self.number < other.number if self.depth() == other.depth() else self.depth() < other.depth()\r\n\t\r\n\tdef __hash__(self):\r\n\t\treturn self.number * 31 + self.depth()\r\n\t\r\n\r\nclass Edge:\r\n\t\r\n\tdef __init__(self, _run, _start_connector):\r\n\t\tself.run = _run\r\n\t\tself.end = None\r\n\t\tself.start = _start_connector.node\r\n\t\tself.__connector = _start_connector\r\n\t\t\r\n\tdef evaluate(self):\r\n\t\tcurrent = self.__connector.connectedElement()\r\n\t\twhile(isinstance(current, SectionElement)):\r\n\t\t\tcurrent = current.nextElement()\r\n\t\tself.end = current\r\n\t\t\r\nclass ConnectorHelper:\r\n\t\r\n\tdef __init__(self, _node, _connector, _element_container):\r\n\t\tself.node = _node\r\n\t\tself.id = connected(_connector).Owner.Id.IntegerValue\r\n\t\tself.direction = _connector.CoordinateSystem.BasisZ\r\n\t\tself.edge = None\r\n\t\tself.__connector = _connector\r\n\t\tself.__element_container = _element_container\r\n\t\t\r\n\tdef setEdge(self, _edge):\r\n\t\tself.edge = _edge\r\n\t\t\r\n\tdef hasEvaluated(self):\r\n\t\treturn self.edge is not None\r\n\t\t\r\n\tdef evaluateEdge(self, run):\r\n\t\tself.edge = Edge(run, self)\r\n\t\tself.edge.evaluate()\r\n\r\n\t\t\r\n\tdef connectedElement(self):\r\n\t\treturn self.__element_container.getNetworkElement(connected(self.__connector).Owner, self.node, self.edge)\r\n\r\nclass SectionElement:\r\n\r\n\tdef __init__(self, _elem, _edge, _prev_id, _source, _added):\r\n\t\tself.edge = _edge\r\n\t\tself.added = _added\r\n\t\tself.prev_id = _prev_id\r\n\t\tself.element = _elem\r\n\t\tself.source = _source\r\n\t\tself.id = _elem.Id.IntegerValue\r\n\t\tself.main_run = _edge.run\r\n\t\t\r\n\tdef getMainRun(self):\r\n\t\treturn self.edge.run\r\n\t\t\r\n\tdef nextElement(self):\r\n\t\ttry:\r\n\t\t\tnext_elem = next(iter(y.Owner for y in [connected(x) for x in getNodeConnectors(self.element)] if y.Owner.Id.IntegerValue != self.prev_id))\r\n\t\texcept:\r\n\t\t\tnext_elem = next(iter(y.Owner for y in [connected(x) for x in getAllConnectors(self.element)] if y.Owner.Id.IntegerValue != self.prev_id))\r\n\t\treturn self.source.getNetworkElement(next_elem, self, self.edge)\r\n\r\n\r\nclass TerminalElement:\r\n\tdef __init__(self, _element, _edge, _added):\r\n\t\tself.element = _element\r\n\t\tself.added = _added\r\n\t\tself.edge = _edge\r\n\t\tself.id = _element.Id.IntegerValue\r\n\t\t\r\n\tdef getMainRun(self):\r\n\t\treturn self.edge.run\r\n\r\n\r\nclass BranchElement(object):\r\n\t\r\n\tdef __init__(self, element):\r\n\t\tself.id = element.Id.IntegerValue\r\n\r\n\r\nclass StartElement(BranchElement):\r\n\t\r\n\tdef __init__(self, _element, _run, _element_source, _added):\r\n\t\tself.element = _element\r\n\t\tself.__source = _element_source\r\n\t\tself.added = _added\r\n\t\tself.main_run = _run\r\n\t\tself.paused = False\r\n\t\tself.id = _element.Id.IntegerValue\r\n\t\tself.__connectors = [ConnectorHelper(self, x, _element_source) for x in getAllConnectors(_element)]\r\n\t\tif len(self.__connectors) != 0:\r\n\t\t\tself.__out1 = self.__connectors[0]\r\n\t\t\tself.__out2 = None\r\n\t\t\tif len(self.__connectors) > 1:\r\n\t\t\t\tself.__out2 = self.__connectors[1]\r\n\t\tsuper(StartElement, self).__init__(_element)\r\n\t\t\r\n\tdef getMainRun(self):\r\n\t\treturn self.main_run\r\n\r\n\tdef hasMainNext(self):\r\n\t\treturn True\r\n\t\r\n\tdef evaluateMain(self):\r\n\t\tif not self.__out1.hasEvaluated():\r\n\t\t\treturn self.__out1.evaluateEdge(self.main_run)\r\n\t\telif self.__out2 is not None and not self.__out2.hasEvaluated():\r\n\t\t\treturn self.__out2.evaluateEdge(self.main_run)\r\n\t\telse:\r\n\t\t\treturn self.__out1.evaluateEdge(self.main_run)\r\n\t\t\t\r\n\tdef evaluateNextBranch(self):\r\n\t\tcon = sorted((x for x in self.__connectors if not x.hasEvaluated()), key = lambda x: self.__out1.direction.AngleTo(x.direction))[0]\r\n\t\tcon.evaluateEdge(self.getMainRun().branch(self.id))\r\n\t\t\r\n\tdef hasEvaluated(self):\r\n\t\treturn all(x.hasEvaluated() for x in self.__connectors)\r\n\t\t\r\n\tdef hasEvaluatedMain(self):\r\n\t\treturn self.__out1.hasEvaluated() and (self.__out2 is None or self.__out2.hasEvaluated())\r\n\t\t\r\n\tdef setIncomingEdge(self, connector_id, edge):\r\n\t\t[x for x in self.__connectors if x.id == connector_id][0].setEdge(edge)\r\n\t\t\t\r\n\r\nclass NodeElement(BranchElement):\r\n\r\n\tdef __init__(self, _element, _edge, _prev_id, _source, _added):\r\n\t\tself.element = _element\r\n\t\tself.__source = _source\r\n\t\tself.__prev_id = _prev_id\r\n\t\tself.id = _element.Id.IntegerValue\r\n\t\tself.added = _added\r\n\t\tself.__connectors = [ConnectorHelper(self, x, _source) for x in getAllConnectors(_element)]\r\n\t\tself.paused = False\r\n\t\tnext(iter(x for x in self.__connectors if x.id == _prev_id)).setEdge(_edge)\r\n\t\tself.paused = not self.hasMainNext()\r\n\t\tsuper(NodeElement, self).__init__(_element)\r\n\t\t\r\n\tdef inConnectors(self):\r\n\t\treturn (x for x in self.__connectors if x.edge is not None and x.edge.start.id != self.id)\r\n\t\t\r\n\tdef getInMain(self):\r\n\t\treturn sorted(self.inConnectors(), key = lambda x: x.edge.run)[0]\r\n\t\t\r\n\tdef getMainRun(self):\r\n\t\treturn sorted((x for x in self.__connectors if x.hasEvaluated()), key = lambda x: x.edge.run)[0].edge.run\r\n\t\t\r\n\tdef hasMainNext(self):\r\n\t\tmain_in_dir = self.getInMain().direction.Negate()\r\n\t\treturn len([x for x in self.__connectors if not x.hasEvaluated()]) == 1 or any(x for x in self.__connectors if x.direction.AngleTo(main_in_dir) < 0.05 and not x.hasEvaluated())\r\n\t\t\r\n\tdef evaluateMain(self):\r\n\t\tself.paused = False\r\n\t\tmain_in_dir = self.getInMain().direction.Negate()\r\n\t\tsorted((x for x in self.__connectors if not x.hasEvaluated()), key = lambda x: main_in_dir.AngleTo(x.direction))[0].evaluateEdge(self.getMainRun())\r\n\t\t\r\n\tdef evaluateNextBranch(self):\r\n\t\tmain_in_dir = self.getInMain().direction.Negate()\r\n\t\tcon = sorted((x for x in self.__connectors if not x.hasEvaluated()), key = lambda x: main_in_dir.AngleTo(x.direction))[0]\r\n\t\tcon.evaluateEdge(self.getMainRun().branch(self.id))\r\n\t\t\r\n\tdef hasEvaluated(self):\r\n\t\treturn all(x.hasEvaluated() for x in self.__connectors)\r\n\t\t\r\n\tdef hasEvaluatedMain(self):\r\n\t\treturn len([x for x in self.__connectors if x.hasEvaluated() and x.edge.run == self.getMainRun()]) == 2\r\n\t\t\r\n\tdef setIncomingEdge(self, connector_id, edge):\r\n\t\tnext(iter(x for x in self.__connectors if x.id == connector_id)).setEdge(edge)\r\n\t\t\r\n\t\t\t\r\nclass ElementContainer:\r\n\r\n\tdef __init__(self):\r\n\t\tself.__elems = {}\r\n\t\tself.__number = 1\r\n\t\t\r\n\tdef getNetworkElement(self, element, prev, edge):\r\n\t\tid = element.Id.IntegerValue\r\n\t\tif id in self.__elems:\r\n\t\t\telem = self.__elems[id]\r\n\t\t\tif isinstance(elem, NodeElement):\r\n\t\t\t\telem.setIncomingEdge(prev.id, edge)\r\n\t\t\treturn elem\r\n\t\telse:\r\n\t\t\tif isNodeElement(element):\r\n\t\t\t\tnew = NodeElement(element, edge, prev.id, self, self.__number)\r\n\t\t\telif isSectionElement(element):\r\n\t\t\t\tnew = SectionElement(element, edge, prev.id, self, self.__number)\r\n\t\t\telif isTermainalElement(element):\r\n\t\t\t\tnew = TerminalElement(element, edge, self.__number)\r\n\t\t\telse:\r\n\t\t\t\traise Exception(\"Unknow element type connected to network\")\r\n\t\t\tself.__elems[id] = new\r\n\t\t\tself.__number += 1\r\n\t\t\treturn new\r\n\t\t\t\r\n\tdef networkElements(self):\r\n\t\treturn sorted(sorted(self.__elems.values(), key = lambda x:x.getMainRun()), key = lambda y:y.added)\r\n\t\t\r\n\tdef setStart(self, start_node):\r\n\t\tself.__elems[start_node.id] = start_node\r\n\t\t\r\n\tdef nodes(self):\r\n\t\treturn (x for x in self.__elems.values() if isinstance(x, BranchElement)) #or isinstance(x, NodeElement))\r\n\r\n\r\ndef isValidConnector(connector):\r\n\treturn (connector.ConnectorType == ConnectorType.End or connector.ConnectorType == ConnectorType.Curve) and connector.IsConnected and (isinstance(connector.Owner, MEPCurve) or isinstance(connector.Owner, FamilyInstance))\r\n\r\n#Return Connector\r\ndef connected(connector):\r\n\ttry:\r\n\t\treturn [x for x in connector.AllRefs if isValidConnector(x) and x.Owner.Id.IntegerValue != connector.Owner.Id.IntegerValue][0]\r\n\texcept:\r\n\t\traise Exception(\"Connector not connected\")\r\n\t\r\ndef connectedId(connector):\r\n\treturn connected(connector).Owner.Id.IntegerValue\r\n\t\r\ndef getAllConnectors(element):\r\n\ttry:\r\n\t\tconnectors = element.MEPModel.ConnectorManager.Connectors\r\n\texcept:\r\n\t\tconnectors = element.ConnectorManager.Connectors\r\n\treturn [x for x in connectors if isValidIterableConnector(x)]\r\n\t\r\ndef isValidIterableConnector(connector):\r\n\treturn isValidConnector(connector) and len([x for x in connected(connector).ConnectorManager.Connectors]) > 1\r\n\t\r\ndef getNodeConnectors(element):\r\n\treturn [x for x in getAllConnectors(element) if not isPipeConnectedToCap(connected(x).Owner)]\r\n\t\r\ndef isPipeConnectedToCap(elem):\r\n\ttry:\r\n\t\tlength = elem.Location.Curve.Length\r\n\texcept:\r\n\t\tlength = 10\r\n\tif length > 1.5:\r\n\t\treturn False\r\n\ttry:\r\n\t\tconnectors = elem.MEPModel.ConnectorManager.Connectors\r\n\texcept:\r\n\t\tconnectors = elem.ConnectorManager.Connectors\r\n\treturn any(len([y for y in connected(x).ConnectorManager.Connectors if isValidConnector(y)]) < 2 for x in [z for z in connectors if isValidConnector(z)])\r\n\t\r\ndef isSectionElement(element):\r\n\treturn len(getAllConnectors(element)) == 2 or len(getNodeConnectors(element)) == 2\r\n\t\r\ndef isNodeElement(element):\r\n\treturn len(getNodeConnectors(element)) > 2\r\n\t\r\ndef isTermainalElement(element):\r\n\treturn len(getAllConnectors(element)) == 1 or len(getNodeConnectors(element)) == 1\r\n\t\r\ndef firstOrNone(list):\r\n\treturn next(iter(list), None)\r\n\t\r\ndef mainLoop(root_element):\r\n\r\n\telement_container = ElementContainer()\r\n\troot_run = Run(1, None, root_element.Id.IntegerValue)\r\n\tstart_node = StartElement(root_element, root_run, element_container, 0)\r\n\telement_container.setStart(start_node)\r\n\t\r\n\tsafety = 0\r\n\twhile firstOrNone(x for x in element_container.nodes() if not x.hasEvaluated()) is not None:\r\n\t\tordered_unevaluated = sorted(sorted((x for x in element_container.nodes() if not x.hasEvaluated()), key = lambda x: x.getMainRun()), key = lambda y:y.added)\r\n\t\tsafety +=1\r\n\t\tif safety > 999:\r\n\t\t\traise Exception(\"To many loops\")\r\n\t\tfirst_with_next = firstOrNone((x for x in ordered_unevaluated if not x.hasEvaluatedMain() and not x.paused and x.hasMainNext()))\r\n\t\tif first_with_next is not None:\r\n\t\t\tfirst_with_next.evaluateMain()\r\n\t\t\tcontinue\r\n\t\t\t\r\n\t\tfirst_with_branch = firstOrNone((x for x in ordered_unevaluated if x.hasEvaluatedMain() and not x.paused))\r\n\t\tif first_with_branch is not None:\r\n\t\t\tfirst_with_branch.evaluateNextBranch()\r\n\t\t\tcontinue\r\n\t\t\t\r\n\t\tfirst_paused_with_main = firstOrNone((x for x in ordered_unevaluated if x.hasMainNext() and x.paused and not x.hasEvaluatedMain()))\r\n\t\tif first_paused_with_main is not None:\r\n\t\t\tfirst_paused_with_main.evaluateMain()\r\n\t\t\tcontinue\r\n\t\t\t\r\n\t\tfirst_paused_branch = firstOrNone((x for x in ordered_unevaluated if not x.hasEvaluatedMain() and x.paused))\r\n\t\tif first_paused_branch is not None:\r\n\t\t\tfirst_paused_branch.evaluateMain()\r\n\t\t\tcontinue\r\n\t\t\t\r\n\t\traise Exception(\"Unknown state\")\r\n\treturn element_container.networkElements()\r\n\r\n\r\n\t\r\nin_elements = dataEnteringNode\r\n\r\n\r\noutput = []\r\n\r\n\r\ndef addToRunsDict(elem, runsdict):\r\n\trun = elem.getMainRun()\r\n\trunstart = run.start_id\r\n\trunstring = run\r\n\tif runstart not in runsdict:\r\n\t\trunsdict[runstart] = {}\r\n\tif runstring not in runsdict[runstart]:\r\n\t\trunsdict[runstart][runstring] = []\r\n\trunsdict[runstart][runstring].append(elem)\r\n\t\r\nsafe1 = 0\r\n\r\ndef getRunElements(elems, runsdict):\r\n\tlist = []\r\n\tglobal safe1\r\n\tsafe1 +=1\r\n\tif safe1 > 100:\r\n\t\traise Exception(\"Too many recursions\")\r\n\tsorted_elems = sorted(elems, key = lambda x:x.added)\r\n\tfor x in sorted_elems:\r\n\t\tlist.append(x.element)\r\n\t\tif x.id in runsdict:\r\n\t\t\tfor key in sorted(runsdict[x.id].keys()):\r\n\t\t\t\tsubl = runsdict[x.id].pop(key)\r\n\t\t\t\tlist.append(getRunElements(subl, runsdict))\r\n\treturn list\r\n\t\r\nnetworks = []\r\nall_done =[]\r\nfor element in (me for me in in_elements if me.Id.IntegerValue not in all_done):\r\n\trunsdict = {}\r\n\toutput = []\r\n\tnetwork = mainLoop(element)\r\n\tfor x in network:\r\n\t\taddToRunsDict(x, runsdict)\r\n\t\r\n\t#done_list.append(element.Id.IntegerValue)\r\n\tfirst = runsdict[element.Id.IntegerValue].keys()[0]\r\n\tlems = runsdict[element.Id.IntegerValue].pop(first)\r\n\tnetworks.append(getRunElements(lems, runsdict))\r\n\tall_done.extend([x.id for x in network])\r\n#debug = [[x.getMainRun().runString(), x.element, x.added, x] for x in network]\r\n\r\nOUT = networks#, debug",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "db63d0bc58b94ca791dcdb165e0d3b50",
      "Inputs": [
        {
          "Id": "5cd07a1a4d9742698fc1c7dcb62cf6c4",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c8b6b9e6c566477a9b2dd3dde5bd511e",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "# Enable Python support and load DesignScript library\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\n#By Jared Linden jaredlinden@hoarela.com\r\n# The inputs to this node will be stored as a list in the IN variables.\r\ndataEnteringNode = IN[0]\r\nnumber = IN[1]\r\n\r\noutput = []\r\n\r\n#Sweet sweet recursion\r\ndef GetTagRecursive(item, current_branch):\r\n\t\t\r\n\titem_tags = []\r\n\t\r\n\tnext_branches = current_branch[:]+[0]\r\n\tfor x in item:\r\n\t\t#Check iterable\r\n\t\tif isinstance(x,list):\r\n\t\t\tnext_branches[-1] = next_branches[-1] + 1\r\n\t\t\titem_tags.append(GetTagRecursive(x, next_branches))\r\n\t\telse:\r\n\t\t\tst = str(current_branch[0])\r\n\t\t\tfor i in current_branch[1:]:\r\n\t\t\t\tst += \".\" + str(i)\r\n\t\t\titem_tags.append(st)\r\n\treturn item_tags\t\r\n\t\r\ncurrent_number = number\r\nfor network in dataEnteringNode:\r\n\tnetwork_tags = []\r\n\tblobs = GetTagRecursive(network, [number])\r\n\tfor x in blobs:\r\n\t\tnetwork_tags.append(x)\r\n\toutput.append(network_tags)\r\n\tnumber +=1\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = output",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "0a40ca02e17c4be196e3f2d98933207d",
      "Inputs": [
        {
          "Id": "02add5d3acc0437aa60a45741ddf9a42",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f2cd17796b5f4aa6b6e762110db4cd51",
          "Name": "IN[1]",
          "Description": "Input #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "53a0fde7c88d4e97a0f66bdb1f571625",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "ElementTree;\nTreeNumber=1;",
      "Id": "d0b4fd18b3c845c78e0e87d0a59a68a9",
      "Inputs": [
        {
          "Id": "a79a3ac4420742c1ba472799d83f4a3f",
          "Name": "ElementTree",
          "Description": "ElementTree",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7782e42a9aeb4aed8b4d317e031f6f4c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e941dfd00ec24e75ac7ecff13e1abe5b",
          "Name": "",
          "Description": "TreeNumber",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "3ccea3479e4c4c9181e1041ca51cb8e6",
      "Inputs": [
        {
          "Id": "576b51e766e542c3adca4bba51404beb",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2737c4090666495ab5d4af2480a6390e",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a2a81069bc7a4cf4b968ea0b34c30dac",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "0412bec6640a4b69bdc7f1199ae2404f",
      "Inputs": [
        {
          "Id": "b6d661ad362b4cc8a57a4b1ca33b033a",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "095527e92be94ed18a6f4137b448b9d5",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4648f008573b4a7cbce8b31327c1b668",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "7dbf9379fa3e48458b3277afc9cf5795",
      "Inputs": [
        {
          "Id": "b3e154caf30942039d48db7aebbbb8a1",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f43c673f4f8542cc869f69ed4afd413e",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0b34924ef6d8478e8c586186bbeae0c5",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "80c7c407d7014e7f869011b53324b64f",
      "Inputs": [
        {
          "Id": "4ad78ff945084d2ebfc29af7fdf83508",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "459dd64589c04c89bc6b110e4338181d",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0621630f58264f058ae844dab0e5f563",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Invert Elevation\";",
      "Id": "bae67ff8bcfb41f98c891ead6fa9e16a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "492a4ad7fabc4d62954ebe7e670f687c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.MinimumItem@var[]",
      "Id": "6f54122b872a42209a352172ffa244d4",
      "Inputs": [
        {
          "Id": "af5f0b47c5c34e899df5b07ef7ffd085",
          "Name": "list",
          "Description": "List of comparable items to take the minimum value from\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cc4684658bb64aa890793ffd5f8c037a",
          "Name": "item",
          "Description": "Minimum item from the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the minimum value from a list.\n\nList.MinimumItem (list: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.ElementType",
      "Id": "dae92156b09d4c11977d8afff73e84cb",
      "Inputs": [
        {
          "Id": "19b2fca9c3c44e27a472577302cad833",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1f894bd7455c4edc93161221ce73608b",
          "Name": "ElementType",
          "Description": "Element Type or Null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the ElementType for this Element. Returns null if the Element cannot have an ElementType assigned.\n\nElement.ElementType: ElementType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "0e736c876f064590b60cbb81b225e87b",
      "Inputs": [
        {
          "Id": "e373564cf05b4733913fb50b3340ae55",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3d97a106b49e42b68ef53ca9f16c875c",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5266816cfc1e4f38a4628683ad7f9447",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Family Name\";",
      "Id": "9c2040edd4564e5a911963de09105fa3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6fd78bea826e4acdaede5168972cafd0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "6a8352ca88e84fce9cff8492c07e1e97",
      "Inputs": [
        {
          "Id": "23d32a90f250431a942c21537b5ccadd",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a2459a5f5da64efeb6c2ec6722f4282e",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "90c3e4d111414e09807663bf5b889013",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e011d99a20f748e387d48a0a0526d4ae",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"SizingConnection\";",
      "Id": "0d766061becc43b792e26bc15c20b6a6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6b23182f6ef14688a28322d17b80227b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "80e11b5668b54bf2854713df57bd0855",
      "Inputs": [
        {
          "Id": "90241526cd7743b7af7e7ced2e07ba3e",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6f472fc9021a4dbb9009e7815a38d69c",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "37697b61c69f4b1b970d9bf8a225671e",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "57bc376a974747a3b4059232d9cb745e",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetCategory",
      "Id": "bf41fb1cfa9d428f84c8d0644080d1c3",
      "Inputs": [
        {
          "Id": "145a795c2d4046ccb34d4fd56e4ea355",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8b18500b2d1a4663a532bf5fbf9f398a",
          "Name": "Category",
          "Description": "Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get Element Category\n\nElement.GetCategory: Category"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Category.Name",
      "Id": "faa5cea5d1764b4d808e613cfd91d0b8",
      "Inputs": [
        {
          "Id": "46297cf456154e25b07732dc10d7c9a8",
          "Name": "category",
          "Description": "Revit.Elements.Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b72be4227f2d44758c327c2d00cdb6c4",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "The name of the Category.\n\nCategory.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "bfc5f444e01248188dfdac1a0b4d6137",
      "Inputs": [
        {
          "Id": "61a9ca8b58dc4e029e0861605d5b8077",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b9811ba39063419b8a57b7dd86549de2",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8bb3cf5fb7ad4470a7074de6e31ca1df",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "eb2ed0b1984e46d58d7d3a5c194358e3",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Pipes\";",
      "Id": "f8eb57b41757430394f6fc87e04a60e5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6e9ce7846ddf4822a23361c27b87d8a4",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "960ece72c1ab4188aa7edda80291d9f6",
      "Inputs": [
        {
          "Id": "b35fc77ddfa74427beb3b1bbf051b652",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4a8bc983a6674ba9b5c03722a54ec089",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4fc8de5f13734903b1d1abb4bd4b96e1",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c6cf347f5cd34276aaf471048dedc210",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "06eebc6e500c476ab914a873aefb35b9",
      "Inputs": [
        {
          "Id": "44ed26caaf384035bf66e259aecdbb03",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9ad248d456f42848328ce3e10c13db8",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3331f5dc57dd414ab8cde0d250b31f40",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"System Classification\";",
      "Id": "9da0f031ec9e4e15961e960287751fa6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "497037b28f66438482dbfedcd1ae8c80",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "d970de63eedf41d9950c6404ef6041d8",
      "Inputs": [
        {
          "Id": "eada4e93194846f991d8dbbe01590289",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "74c259543a1f49328d81b24011204c59",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "afb98c1c04d046eba60d92d06f82c99f",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1aba4c1b151e44e6a9b1777e913c649b",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "aa30823c15354919a1559539a30158fd",
      "Inputs": [
        {
          "Id": "0a574f19a8a142b5a9b4c18f11f96a03",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3fb27d16033e44c6baf30fa3320cf3b9",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f5a9d1a041ed4363980711cf60a5a52e",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3785f18fa5ea454aa42b034b3964b8a6",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Sanitary\";",
      "Id": "5ca5b7cf9321486b94f25d26dea4a89c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "834800ddd462451cb892313dcd6dd5be",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "ec794750f3164cc28dbfb0922c4be6a5",
      "Inputs": [
        {
          "Id": "cc3ad341e69e4928b92ea0ec28b23bf5",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0331cc50853f49d69e959827b35ee7d0",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3b5ab780ef1d4edb8975679311684cdc",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "1b37da7083894359840cace6709785d8",
      "Inputs": [
        {
          "Id": "cc2a6ab2b5884370a49bfa4a8a0eff6d",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2c692a945b134c90a3cad8b836523936",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c45b47e9249f44f1b20c365f88ddfb06",
          "Name": "list",
          "Description": "A list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "8a77d83d53da40f8876a91650e977d73",
      "Inputs": [
        {
          "Id": "39ae63a3edcc4eea8af8644260512d97",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "76c035f0d46c45c2a37681d5b9e8135d",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "da4f2c3004b54623bef02ac4f79dcce8",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "05e0cc77233b49b6af0d605e620680a0",
      "Inputs": [
        {
          "Id": "353ba226befe49a29a896e0475521cb7",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b3ce0e1f27314fd998eb46d432cd36ce",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "47b1837e74fd4404b0f0a0030bd375ca",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "4bcb148e36db40798c1fc258cf6d4597",
      "Inputs": [
        {
          "Id": "be1b6f7dfd8b4d48ae6e7d66e77078a5",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2b0fd93210ae4e5ba8b640d23613ce14",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "2793bbbbab0b4667a4eec480cac4a1cb",
      "Inputs": [
        {
          "Id": "a8ef8c6d2e744633b95e262a4dfdd553",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8004daa7be3846ebb396624dfb1063b4",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e1b2b093dce41258087c9b3ed4b69a7",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "1bb475b884ea4abda02706981e22a60f",
      "Inputs": [
        {
          "Id": "0dd70ea8c3a94c2ba8d96179aff586bd",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "81447c69729042a9aa921958a3d297b1",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d9554e63c664483fa594fc3ac4b40985",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "6c62c408b34c42d78441d1f28f428a26",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8f5a83e4398f498db16860fc8d59587e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "524a768617a4477f84ea519ea0a3e76d",
      "Inputs": [
        {
          "Id": "2d03a2ab51604c6892b58fd5a6786300",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b73d8e7176e24788b701e99c4b8c4597",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0ad0815fcb8475d8f3cca35e363032c",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "2a333299a7b5469581afe1f539206641",
      "Inputs": [
        {
          "Id": "c5d615173f65490fa547496584e99b85",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d6a5305365864eaf9a8631ea763a63e1",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac81c10d5d334f5ab4fd2bd10a0d99ac",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Delete@Revit.Elements.Element",
      "Id": "044cd3c514d44b50b748277811004c86",
      "Inputs": [
        {
          "Id": "3ec4c04cb43f4ea68792554fef1fcef9",
          "Name": "element",
          "Description": "The element to delete.\n\nElement",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fade8b32915a4522be8a2934c074fae3",
          "Name": "int[]",
          "Description": "The list of element id's deleted, including any dependent elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Delete the element and any elements that are totally dependent upon the element.\n\nElement.Delete (element: Element): int[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "8d8f40a9f6b44024bd3facb1f796e944",
      "Inputs": [
        {
          "Id": "b541f5e6b8724f1cbfe50f3939ab9c1e",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "537ff0403da744529c06cef313b042bf",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "95b0f088bed548b78c1d1fd4c93b521e",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"System Name\";",
      "Id": "5d5632cc02564701a5048260132916a3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5fcdd4c577704420962a0edba3fcddce",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "69d22a46bf9c4262886628fbb0028089",
      "Inputs": [
        {
          "Id": "ca008fdca2984628a177c2db8cfda552",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0029bea3d017455088ae3b61e413eeae",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c68e9b3943d140e1aeea1be401920343",
          "Name": "list",
          "Description": "A list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "20ea2a44e9e041e6922a26cdadcc785e",
      "Inputs": [
        {
          "Id": "bdd527e7102f44309b1f1c5522e47dba",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ceb864d4c6c54a1bb95b8db1c8bf03d9",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dd325c63ccd44b0eb26b29ed92275774",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "78cc4529bc7c4ad5bcca76a826e24544",
      "Inputs": [
        {
          "Id": "c0be0208823748e0a95535c68db397f3",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8bbb883e39284651ba6405c0d54e31d9",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bb59c2f50fdb41a6a7fc5d185460ec3c",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "4abff87f-8dad-41a9-bcf6-98784ac456eb",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "a22fecf3170444b28a8f274b49189841",
      "Inputs": [
        {
          "Id": "666d03a9a74a4f8e809460d4a3c45b93",
          "Name": "InputName",
          "Description": "string\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b9473ab15ef9450b8b88c5f43e04ef8a",
          "Name": "Keys",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "af668400ef6546a4984c56e1d0f09a61",
          "Name": "Values",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b423f61e7fe46c1af676fcb557535fc",
          "Name": "DefaultValueIndex",
          "Description": "int\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0c1e02a168734c2a8768be1db0343e1a",
          "Name": "RadioButton input",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create radio buttons input for UI.MultipleInputForm ++ . "
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Use 'Manual System Name' Parameter?\";\n[\"Yes\",\"No\"];\n[true, false];\n1;",
      "Id": "0996b25f289a4c33a875b860b3cfcd83",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1b650634037248cc91c31042bb4dc27a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3fb589fdd62a43589f4043413c6ad3f8",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5ad7583ce98b4800b59085c369e6dc75",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "05414e9f6a2847869bfe937274f56200",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Remove Sizing Connections\";\nnull;\n\"Proceed\";\n\"Cancel\";\n800;\n700;\n300;",
      "Id": "b80995ad718548f9bd49e356763abc81",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "1f924a8aa5cb4be8803eb6861df3ef37",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0d28b3af4cb34b7ea80216606fabfcf0",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a038e5b8c7d64ac5b2b6e464af36b88e",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b8acd96515284146ba530f9a81f9986d",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cdb36c1fb71f4769838705ad16050f70",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b8551dac9a204e2987bda6b1caef8163",
          "Name": "",
          "Description": "Value of expression at line 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a4ef72f3cbb849bfbc3087d49cff25b8",
          "Name": "",
          "Description": "Value of expression at line 7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": true,
      "Id": "5001610997b64ea88e7d8a44a0fa17e6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8f2889c8a6cf424495b8e8dd3b682486",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "9fbd05c0-ec1f-4bd3-bf37-969a1552eab8",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "34a856b06ef94a9fa1cff425e6b85281",
      "Inputs": [
        {
          "Id": "676365d73b7949169236bf61b8ff2ce3",
          "Name": "Description_optional",
          "Description": "string\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ade468cca8e143059a642d0ae79c8f3d",
          "Name": "Logo_optional",
          "Description": "var\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e30c82f8d8b2471c808df07951fafd90",
          "Name": "ButtonText_optional",
          "Description": "string\nDefault value : \"Set Values\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "26825644442348a4a76ce78985885fb8",
          "Name": "Inputs",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6349774381b543f1a9ec77d4eda061d7",
          "Name": "Toggle",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "de5ff10607d547489385a32e2f4d1ee6",
          "Name": "LinkToHelp_optional",
          "Description": "string\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5f5226f62dfc43fa8bf2e751b2f7855a",
          "Name": "CancelButtonText_optional",
          "Description": " Cancel button will only be displayed if a label text is entered here\n\nstring\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c749a47acb5245cea74da514002fe32b",
          "Name": "MaxHeight_optional",
          "Description": "int\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "42b81488443144efb9c3ae213ff698b2",
          "Name": "Width_optional",
          "Description": "int\nDefault value : 400",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c802d601e99c4879a4262e4467aa1e18",
          "Name": "LabelWidth_optional",
          "Description": "int\nDefault value : 140",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b979df2357a642bc8d9b8b3ac4538942",
          "Name": "User Inputs",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "db2c2fddb98541c5a8a5de33b48f7d68",
          "Name": "Was Run ",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff8fafabed5448c1a96ed511a4214162",
          "Name": "Was Cancelled",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a form with multiple inputs. \r\nsee www.data-shapes.net for tutorials and infos!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "WasRun == true && WasCancelled == false && ManualSystemName == true? true : false;",
      "Id": "0985240687db4493a307b43242d52ef5",
      "Inputs": [
        {
          "Id": "7e19f80a69fc4b7fbb90884d5f292c15",
          "Name": "WasRun",
          "Description": "WasRun",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "201608c0a44945ca92e991c48caf9169",
          "Name": "WasCancelled",
          "Description": "WasCancelled",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3416fb33f82f4e7bab610d3fc6522922",
          "Name": "ManualSystemName",
          "Description": "ManualSystemName",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "26326cb9d4b9450b94006784eb16bc4b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.IndexOf@var[]..[],var",
      "Id": "2ceaf255b98c4fe897a3bb2a027335fc",
      "Inputs": [
        {
          "Id": "3125db494c11430bbfc96702af571902",
          "Name": "list",
          "Description": "The list to find the element in.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "43d982094b5e401a82858188b1063062",
          "Name": "element",
          "Description": "The element whose index is to be returned.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "feb53ae53ca74550aadb164bd76b466f",
          "Name": "int",
          "Description": "The index of the element in the list. Invalid index -1 will be returned if strict match not found.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the index of the element in the given list. Match between given list and target element must be a strict match (i.e. int to int, double to double, string to string, object to object etc.)\n\nList.IndexOf (list: var[]..[], element: var): int"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import re\r\n\r\nlist = IN[0]\r\n\r\ndef natural_sort(l): \r\n    convert = lambda text: int(text) if text.isdigit() else text.lower() \r\n    alphanum_key = lambda key: [ convert(c) for c in re.split('([0-9]+)', key) ] \r\n    return sorted(l, key = alphanum_key)\r\n\r\nOUT = natural_sort(list)",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "90b3d1dcf50e402994ea162e028584e3",
      "Inputs": [
        {
          "Id": "0e51dcbbcf3e462fbbf8bae37f7d7fb6",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c75b02ab7bf04329b077e61b1b766768",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "44daa4089f1f408eacca229eeda5567f",
      "Inputs": [
        {
          "Id": "2a379d4d67b447a99ebbbe002e7a0212",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b2f768add3c74cd5ae4c97a1870ff5bd",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "1e5221d6f4854292a22a3f1ea8709746",
      "Inputs": [
        {
          "Id": "f7d17140a25646c9ba64b8ba3b74aa78",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0c46cfc7bccb4bdeb1dba2f0d5f82cf6",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "09409640f302480a9b1e5ec324e60b1b",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "8c075496210343ad9fdfdfcb905eae1e",
      "Inputs": [
        {
          "Id": "814e6b1708184e00a0e3965114e528ed",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8a0f38d43bc949be9da1f7d1c527fc94",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e1cd062a6ad34326a2a74c378d63fa18",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Name",
      "Id": "f5b309fb41dd4a67b0718ee1d1b5eaa7",
      "Inputs": [
        {
          "Id": "9ff36910520c40a0badf14e3e0799cfb",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8d3ac363bb844a3bbe82d6f17b2d0ae5",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the Name of the Element\n\nElement.Name: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "db5ba023fa304888af5d26b20b9d207f",
      "Inputs": [
        {
          "Id": "8189cf2631e24118baf52ed91d197e4e",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0b0b5e0159034c28859f2b9a37038391",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "c538f0fd0d554823b287498449414556",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "73a01727692c4d338a7393598d6bd70d",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "[\"Ss_50_30_04_97 - Discharge\", \"Ss_50_30_04_97 - HT Discharge\", \"Ss_50_30_04_97 - Lab Discharge\"];",
      "Id": "8e07551d89264094917f065ce2feff7a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2ea6e69cc9664aceae0d724875a22cd0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "8bc3ac4715b6408db906711997b4ab31",
      "Inputs": [
        {
          "Id": "b654c53734bf4e9c83d595cec174f5fb",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "977fcbd140d84601bb6943894c5756e3",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bd8ed5020143454cb8ff3615ccb493dd",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7c83bc8befb246438c09fe847c12ee4b",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.ElementType",
      "Id": "741056a48df6470399e170de7f160aca",
      "Inputs": [
        {
          "Id": "fa1584b02b5948ed9a922a4c05e19af5",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1859fdfb191e453e8b8f55371795ce8f",
          "Name": "ElementType",
          "Description": "Element Type or Null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the ElementType for this Element. Returns null if the Element cannot have an ElementType assigned.\n\nElement.ElementType: ElementType"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "a571a99014414947900f7bdf52b56b18",
      "Inputs": [
        {
          "Id": "bf276a9cf60b4ac4a7268633949b01e7",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d31c9bd20eda44e4b39b455e5413a45c",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Category.ByName@string",
      "Id": "3d0104d85fc249a6b0d23dba79281b31",
      "Inputs": [
        {
          "Id": "d32cb76849d34af9935247f0331df73b",
          "Name": "name",
          "Description": "The built in category name.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4267a86a287d4b00979fa1152cb79461",
          "Name": "Category",
          "Description": "Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a Revit category by the built-in category name.\n\nCategory.ByName (name: string): Category"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Piping Systems\";",
      "Id": "4c831ce67ab3432cb0eac6e73b27d526",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "86b16fc3c03947c8aaa839161533732b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Select System\";\nfalse;",
      "Id": "cadedcde2398403bbbba6c33f30f2a64",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0f7b957783024ce6bd12beb17e10aabb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2ff316b81bcd42ebab9a5ead3b060aec",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "b409775c-5d88-4d47-96a3-5135c775d26a",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "9780a4aaf96441239c3f1b4f996ec0a6",
      "Inputs": [
        {
          "Id": "54eb76491eea4dfeb698a6c047a08076",
          "Name": "InputName",
          "Description": "string\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "99439d1dd4e34944a2087ed62ce72922",
          "Name": "Keys_",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "952b6368965746cbb65029d2fa2b81a1",
          "Name": "Values_",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a29d05cb3ba048a78f5d6e6ef7f769e2",
          "Name": "DefaultValueIndex",
          "Description": "int\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a4a3ae7ce1734a52a0d4cb466b4e6d04",
          "Name": "Sorted_optional",
          "Description": "bool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "77bdf40bf44541d196d361eba54171a4",
          "Name": "DropDown input",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create data for DropDown input in UI.MultiInputForm ++ . Check out www.data-shapes.net for more infos."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "c3a36eb7-8fe8-4417-b31e-ccc9fded769b",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "88357308e25849ad9b01bd76e118488c",
      "Inputs": [
        {
          "Id": "6dd5a7cb950649dfa498da4cecebae9a",
          "Name": "InputName",
          "Description": "string\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d9ffbe86a77c492e97821b7c6039a2c6",
          "Name": "Keys_",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bbfeb977c5d54dd08c69f2f315278733",
          "Name": "Values_",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cae75abd2339430d85a264aee7f17ed6",
          "Name": "Height_optionnal",
          "Description": "int\nDefault value : 200",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "73437297bf974cc29861c5c2545ec77e",
          "Name": "HilightInView_optionnal",
          "Description": " If set to true, clicking elements of the listview will highlight them in a view like Dynamo's watch node\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "80f12c7d8d03408381728e92abf7a182",
          "Name": "DisplayModeOnly_optionnal",
          "Description": " Turns off ability to select elements. Form will not output any data for this element.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cd3a852bb8fc46e48f5f6b2d2d71ae69",
          "Name": "ShowElementCount_optionnal",
          "Description": " Will display the number of elements underneath the input name\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bdabff5b5b984a5893ffd74f8ad469b0",
          "Name": "DefaultValueIndices_optionnal",
          "Description": "int[]\nDefault value : DSCore.List.Empty",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7b35f6755cdb4cac88fcdef0852f533e",
          "Name": "SortItems_optionnal",
          "Description": " Determines wether the ListView items are sorted or not\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ed5f96195c2c4916b7de60b6da840fc7",
          "Name": "ShowId_optionnal",
          "Description": " Warning: disabling this will cause the listview input creation to fail in case there are elements with the same name\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "84edabaaf10840dbbf39935d1cf9efe6",
          "Name": "ListView input",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create data for ListView input in UI.MultiInputForm ++ . Check out www.data-shapes.net for more infos."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Sub-Systems\";\n400;\nfalse;",
      "Id": "97d9d41882c84f21b27e86d94d127c70",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2f08daa90f8c44eaac60a9ee7c6f2772",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6b4b14355df04a6f922ad9bb486446fa",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d4f2ef0b6559415f9b92239e8a9ebc18",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Select Sub-System(s)\";\nnull;\n\"Proceed\";\n\"Cancel\";\n800;\n700;\n300;",
      "Id": "2c688731354b44468fa9fd37901fb26b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "9a33b7079b82463e8f6e6367e942c98d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6d2f246bda5d4c18a66539270ce18c43",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "53383c1d594c4470be004a79f7d1f337",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0711176949c14cd3a111a8d9b8bdb2b0",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "86df073a50114494a619f41245e6b0dd",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a2447d97ff4c4d25a23594d56a52403d",
          "Name": "",
          "Description": "Value of expression at line 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e0937923cb64451a72ff5268a50e214",
          "Name": "",
          "Description": "Value of expression at line 7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "9fbd05c0-ec1f-4bd3-bf37-969a1552eab8",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "405d6bd0625b4a18b5de8cee417501ea",
      "Inputs": [
        {
          "Id": "d719e854ae00430b87b0927b1b79df4b",
          "Name": "Description_optional",
          "Description": "string\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bafa90b49a1b40e887eef53d2a8d07c8",
          "Name": "Logo_optional",
          "Description": "var\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "541e82219f3645748d91d36d712e8f54",
          "Name": "ButtonText_optional",
          "Description": "string\nDefault value : \"Set Values\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7af9c5df2f7741c48216a375bdfbda59",
          "Name": "Inputs",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "21ae1dbf73e64bc3bbdccb7a546b9474",
          "Name": "Toggle",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "31c92be0e8c74a979ac19e0b89ded953",
          "Name": "LinkToHelp_optional",
          "Description": "string\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "66007b29403547e5ba1a33a834a3dd3a",
          "Name": "CancelButtonText_optional",
          "Description": " Cancel button will only be displayed if a label text is entered here\n\nstring\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "835368daaf1d44108174c8bd2b6daaaa",
          "Name": "MaxHeight_optional",
          "Description": "int\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8eee0960f5d4469c9db47769d9765973",
          "Name": "Width_optional",
          "Description": "int\nDefault value : 400",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5fe85350df174008b6b8cc06463b0227",
          "Name": "LabelWidth_optional",
          "Description": "int\nDefault value : 140",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a0d6ad4c3c0c43289008aec7d85778e8",
          "Name": "User Inputs",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f40b5d8ec04149aeb62c5d595d1a9813",
          "Name": "Was Run ",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b0f86056bf2c4ee6b1ae7676f5919f3e",
          "Name": "Was Cancelled",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a form with multiple inputs. \r\nsee www.data-shapes.net for tutorials and infos!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Category.ByName@string",
      "Id": "6304befc45544ced8bfd95879811ac6c",
      "Inputs": [
        {
          "Id": "6e75e6c613854ba2bf0b9c190a9ba821",
          "Name": "name",
          "Description": "The built in category name.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "44f2f4a76a0c4922b144790ed4e708c5",
          "Name": "Category",
          "Description": "Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets a Revit category by the built-in category name.\n\nCategory.ByName (name: string): Category"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Levels",
      "Id": "9516410c350c412982acdc5f368eaf17",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "eb0a7c7887ad4e4b9e523c63f3919765",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "c3a36eb7-8fe8-4417-b31e-ccc9fded769b",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "a9d50330a23b4220879b917f3d86347f",
      "Inputs": [
        {
          "Id": "462602ffb5604a3683aa1fe8ce740637",
          "Name": "InputName",
          "Description": "string\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a420809731ca455b983ad4bf42479ea4",
          "Name": "Keys_",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "de215a2cd3c5471d9ffdbdad10ce8524",
          "Name": "Values_",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fb11fa889f4b44789b9b36a6121ad160",
          "Name": "Height_optionnal",
          "Description": "int\nDefault value : 200",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d9a63c286cfe403080853a068a7110f9",
          "Name": "HilightInView_optionnal",
          "Description": " If set to true, clicking elements of the listview will highlight them in a view like Dynamo's watch node\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a4b9206da83f455a8f09c364f6b199a9",
          "Name": "DisplayModeOnly_optionnal",
          "Description": " Turns off ability to select elements. Form will not output any data for this element.\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b866911f14754937b4810ff907c0e085",
          "Name": "ShowElementCount_optionnal",
          "Description": " Will display the number of elements underneath the input name\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "59fd012ec89e41c3a16a3a5e461d90c6",
          "Name": "DefaultValueIndices_optionnal",
          "Description": "int[]\nDefault value : DSCore.List.Empty",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "08dbc0a6e650452692c0826d55560a8c",
          "Name": "SortItems_optionnal",
          "Description": " Determines wether the ListView items are sorted or not\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b9643ed9b5e94b718beeb336a1573070",
          "Name": "ShowId_optionnal",
          "Description": " Warning: disabling this will cause the listview input creation to fail in case there are elements with the same name\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f6863e8da21f4a5ab7e995506c728755",
          "Name": "ListView input",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create data for ListView input in UI.MultiInputForm ++ . Check out www.data-shapes.net for more infos."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Level(s)\";\n400;\nfalse;",
      "Id": "caecce0b96214263a7839cd756eec3f3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "056d9b41cb23417b8099cc6f27353776",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "848729fe6fa146af89c265c90e10d0cb",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "63fbe3515c41473799f6457efd368796",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "9fbd05c0-ec1f-4bd3-bf37-969a1552eab8",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "9641107e6b164d57af8dabb0e4bbcba9",
      "Inputs": [
        {
          "Id": "753296d16b4b40c187f8242e512e6d37",
          "Name": "Description_optional",
          "Description": "string\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f2aaaf3d764e4e788a41b8af00f4d679",
          "Name": "Logo_optional",
          "Description": "var\nDefault value : \"\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "616f06b1d7cb470ba922f6365c6e366b",
          "Name": "ButtonText_optional",
          "Description": "string\nDefault value : \"Set Values\"",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f11dbcacabef4f51895cb6a9492bebae",
          "Name": "Inputs",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ab297757eef7427a866e2e3687bc12af",
          "Name": "Toggle",
          "Description": "bool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "444def801b614e318fb2fe48bc8efd13",
          "Name": "LinkToHelp_optional",
          "Description": "string\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7efa61b3048b4883a9c1d156805abec3",
          "Name": "CancelButtonText_optional",
          "Description": " Cancel button will only be displayed if a label text is entered here\n\nstring\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "569a5672505648849dc5a52d92feb39d",
          "Name": "MaxHeight_optional",
          "Description": "int\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe0c09d8c3ff4762b13f5b61e46acd24",
          "Name": "Width_optional",
          "Description": "int\nDefault value : 400",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "84e212b8b16f4dcea645a8fa41aa899d",
          "Name": "LabelWidth_optional",
          "Description": "int\nDefault value : 140",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b6ac7410612741e9be73f83000f013ed",
          "Name": "User Inputs",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "92ed3e0780e54eb79a37a51cdd7113c8",
          "Name": "Was Run ",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eaa24e37e20d4239a53bc6007bb1f018",
          "Name": "Was Cancelled",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a form with multiple inputs. \r\nsee www.data-shapes.net for tutorials and infos!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Remove Connection(s) at Selected Level(s)\";\nnull;\n\"Proceed\";\n\"Cancel\";\n800;\n700;\n300;",
      "Id": "8077622c55e9472fbd4adb7d1b6113ad",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "685d3091c404450a80405267beac11f0",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2476de45b01e487b82e7f9b8c39ef828",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3f42b82140944ec69879976be8781803",
          "Name": "",
          "Description": "Value of expression at line 3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b3b28bab5ec14ff4bedca8df0ed47e72",
          "Name": "",
          "Description": "Value of expression at line 4",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "05450c871ee1488298f3b047a83e0a7f",
          "Name": "",
          "Description": "Value of expression at line 5",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e43563f886584282a92befee08e90cf3",
          "Name": "",
          "Description": "Value of expression at line 6",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c46d063c6f7a49ac9633b76bae2aea5b",
          "Name": "",
          "Description": "Value of expression at line 7",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "WasRun == true && WasCancelled == false? true : false;",
      "Id": "4065e2eb62b14fd58dc7816f79ba275a",
      "Inputs": [
        {
          "Id": "69617643493347fd849c34fda6d35994",
          "Name": "WasRun",
          "Description": "WasRun",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "38f97b0eff794b4c89606dc206fac37e",
          "Name": "WasCancelled",
          "Description": "WasCancelled",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b99568f88caa408596729c4dfdfbbab9",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.ProjectElevation",
      "Id": "a6ff3d5ee1734d13bdf9d72f7df03157",
      "Inputs": [
        {
          "Id": "5974124f4fbb467f965ecc7e337321cc",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4151430bc382462b9684d0b6bb15035c",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Elevation relative to the Project origin\n\nLevel.ProjectElevation: double"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Level.ProjectElevation",
      "Id": "ae4abdec87b942d6b2d2df5c2f4f0910",
      "Inputs": [
        {
          "Id": "c93460138d63498fad5d0a6e163845ff",
          "Name": "level",
          "Description": "Revit.Elements.Level",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "06dc61c545f14183877819cca30e4ccc",
          "Name": "double",
          "Description": "double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Elevation relative to the Project origin\n\nLevel.ProjectElevation: double"
    }
  ],
  "Connectors": [
    {
      "Start": "0bf3c3fd53f949058348a9bedb2a642a",
      "End": "95b730a4d6f74c60b9e7cc958ef0adc1",
      "Id": "7217aed76e1f446eb1d2768e61886c20",
      "IsHidden": "False"
    },
    {
      "Start": "ff53803a97254ff1ae924a5da351b142",
      "End": "73900b30899e4901b42f610a2ca13001",
      "Id": "fdbbd16ce543430e9170547398403867",
      "IsHidden": "False"
    },
    {
      "Start": "ff53803a97254ff1ae924a5da351b142",
      "End": "4a415deda5034a1dbccfec8704b6b1e1",
      "Id": "1099cfaf67c24a50ab9785215ca0637b",
      "IsHidden": "False"
    },
    {
      "Start": "7f16564bfb874d099f6fb082b84e3a60",
      "End": "00fd9de51b87457ab8961cbabb5fc3cd",
      "Id": "890c24791d70435dbf9e94ccbf3eb8b0",
      "IsHidden": "False"
    },
    {
      "Start": "055c45bf50ef4e1586e3ad1a1213a581",
      "End": "c198534aeb79453b905ab94807d9edf1",
      "Id": "e2d671b3f1414e7991edff1e0cf897ad",
      "IsHidden": "False"
    },
    {
      "Start": "5bcf8544f67241cd90422d24a7d3f284",
      "End": "25d2a87c3f4c41b3beed864a07305cd4",
      "Id": "392906aa68804e74903d71da8ba7b21d",
      "IsHidden": "False"
    },
    {
      "Start": "1b7b088a704a44f18e8581c9db26269b",
      "End": "60865c7f6c8a48cdb3eec68f1fa7a83c",
      "Id": "d8ccf2b7335a4cb2b07522a91703176d",
      "IsHidden": "False"
    },
    {
      "Start": "f1fc49f42bca459aad53f4ee46ad029a",
      "End": "9704aae12bf0454baf83060d24c2851b",
      "Id": "f7b7e7de5ad74820a2d0b50ce5fb0255",
      "IsHidden": "False"
    },
    {
      "Start": "af0a8a33c2ab4f859a1d5d81d7d0ba98",
      "End": "4a4a8b55fa914ffd950ed276efeaf3de",
      "Id": "056e15272a024f6baa6f786eb406e5e4",
      "IsHidden": "False"
    },
    {
      "Start": "af0a8a33c2ab4f859a1d5d81d7d0ba98",
      "End": "c4c2a71dada84a8a87e81322d852c378",
      "Id": "2327f40ab02c4ec98acd81abe5e3e08b",
      "IsHidden": "False"
    },
    {
      "Start": "af0a8a33c2ab4f859a1d5d81d7d0ba98",
      "End": "0029bea3d017455088ae3b61e413eeae",
      "Id": "fee1e5a640c247fca7ef3d3bf068cea2",
      "IsHidden": "False"
    },
    {
      "Start": "0d9fac58b7a14ea09cc3035807b0074a",
      "End": "00baf13576be4029a12c38dfb8651f7f",
      "Id": "0264f1b6d39f4276b98a4ec2bb7ebea9",
      "IsHidden": "False"
    },
    {
      "Start": "82aeeb8686ba4a289773ae351bda7d30",
      "End": "625deb69e31142329c97d4893a98ee71",
      "Id": "827a03c3fa574c53891741222bc92b08",
      "IsHidden": "False"
    },
    {
      "Start": "5783c995743c49d4a1ca3f6dfac1d7ca",
      "End": "911cef39270d42caaac1c93bfbd3f908",
      "Id": "5d36816a1ce64dc1894714112df4761b",
      "IsHidden": "False"
    },
    {
      "Start": "c159e93023874860a04c2653c05ccb35",
      "End": "c5c8cb027b99405699f55babecbc47b4",
      "Id": "8b264e980171419f813f2c97294eac2f",
      "IsHidden": "False"
    },
    {
      "Start": "c159e93023874860a04c2653c05ccb35",
      "End": "24f642d8d8e4499ab6abe1c263b233ce",
      "Id": "99ac1435782141ae9b563f77320849f1",
      "IsHidden": "False"
    },
    {
      "Start": "49c49f1bb17449698db0e4d29c44c1e8",
      "End": "c03dbda79476407f97e9bc613ad9d94a",
      "Id": "58ec82da812f4a35ad88f719738af0f8",
      "IsHidden": "False"
    },
    {
      "Start": "23e0a54589cd44cf9bf1e42ca613b9c3",
      "End": "8f3d44595c4d418097fdd57ca8934c19",
      "Id": "9aa96fc8faac4c3f9ba24367ef4dc0c8",
      "IsHidden": "False"
    },
    {
      "Start": "23e0a54589cd44cf9bf1e42ca613b9c3",
      "End": "3416fb33f82f4e7bab610d3fc6522922",
      "Id": "c1da5f8439554c649db1da6707520165",
      "IsHidden": "False"
    },
    {
      "Start": "82b453e0f1284e9890fab74569822469",
      "End": "26825644442348a4a76ce78985885fb8",
      "Id": "0e51de59935e44c084594346f704a410",
      "IsHidden": "False"
    },
    {
      "Start": "aa321029b36c4ce68d24b2696f9c991e",
      "End": "e5dd730123de4737a7814ffb9cf2f32a",
      "Id": "ca15f68638d74b0eb98bf39a07ce9475",
      "IsHidden": "False"
    },
    {
      "Start": "062909bc77a84ec884ae00158e4dae47",
      "End": "816fcc582fdf4398b696a5d7319ff9a2",
      "Id": "8c5ebf3d58bf458caf8a078587c8adf4",
      "IsHidden": "False"
    },
    {
      "Start": "285a62f35e0348fbacc7878704134722",
      "End": "96cb58536e7f41d2943d517a3fbf253f",
      "Id": "33b0c128c56d47608701b4a8ab4adc59",
      "IsHidden": "False"
    },
    {
      "Start": "c175019d05814a1ca89e605a29e46b22",
      "End": "0bb2a6e472944ba9aff8ea6420456b63",
      "Id": "eac291d0ef3c40a09252b1ab4ea40764",
      "IsHidden": "False"
    },
    {
      "Start": "55a6aac633804f73b260f9c05fe3e9d8",
      "End": "4ad78ff945084d2ebfc29af7fdf83508",
      "Id": "7f26019b639b45b08c883a022ec2108d",
      "IsHidden": "False"
    },
    {
      "Start": "55a6aac633804f73b260f9c05fe3e9d8",
      "End": "b6d661ad362b4cc8a57a4b1ca33b033a",
      "Id": "ba214e31af8042a086ef8fd722024b6b",
      "IsHidden": "False"
    },
    {
      "Start": "2e23739ba01c412ba587850205d34ab8",
      "End": "8004daa7be3846ebb396624dfb1063b4",
      "Id": "9ff2ea13a540492a952d46ce2e8651ad",
      "IsHidden": "False"
    },
    {
      "Start": "f76ee31b637c47948a9cdf6625f10219",
      "End": "238f3ccc4ca14f6292343a3af484e663",
      "Id": "9eb662aeda954296836aa18984f17a92",
      "IsHidden": "False"
    },
    {
      "Start": "a89d0762adf14968991271ba270e7c8c",
      "End": "71ae57d400044ae6a49f6133cffa25b6",
      "Id": "1296c7c18bc44b3a80e4699c57682294",
      "IsHidden": "False"
    },
    {
      "Start": "02b0f1fc5e2b47d28253a35c40b58ea2",
      "End": "0331cc50853f49d69e959827b35ee7d0",
      "Id": "89390b3385944ba1821e85cc372f5a67",
      "IsHidden": "False"
    },
    {
      "Start": "069e764ecc394c8da21f663f8038b52d",
      "End": "b5513475056d4bdaa6d17d6fbff6c921",
      "Id": "fa0a9db2304743ea82879261a1e5de3c",
      "IsHidden": "False"
    },
    {
      "Start": "069e764ecc394c8da21f663f8038b52d",
      "End": "76c035f0d46c45c2a37681d5b9e8135d",
      "Id": "9efd57cce4e04e05a18cfae66ce63191",
      "IsHidden": "False"
    },
    {
      "Start": "069e764ecc394c8da21f663f8038b52d",
      "End": "8bbb883e39284651ba6405c0d54e31d9",
      "Id": "940a184a405b45ef9325da720b18cca9",
      "IsHidden": "False"
    },
    {
      "Start": "b80f0ad9f5834f219d7c7e3f1c093ff0",
      "End": "2243018f62034e5bba71acf124b0eae0",
      "Id": "bd6deff8da3e497097b1f8ea344549c4",
      "IsHidden": "False"
    },
    {
      "Start": "4e8d9d0f098b433cb621845e8ed538db",
      "End": "168a5be348f5496886712d1be30ac30f",
      "Id": "5025b49ca6284d3e9188ee12c8d07d45",
      "IsHidden": "False"
    },
    {
      "Start": "be3c1ed78d4e4f73a302b2b3404f4ce5",
      "End": "2e1d17dd4baf4ca282808c136de876f4",
      "Id": "4cf02812c3e4474a937752d820da9396",
      "IsHidden": "False"
    },
    {
      "Start": "7fbc030bc80e4ca8b317420ea74fd5d4",
      "End": "51ef2be43b464ef6a31458b48846e311",
      "Id": "b2e75a566a2d4461a87ef91c09ad8dba",
      "IsHidden": "False"
    },
    {
      "Start": "878337e169924249901924441576187a",
      "End": "156084a92168498397ef0e42cf9d567c",
      "Id": "9050e9729c964ad6b6ff499dfb3d3451",
      "IsHidden": "False"
    },
    {
      "Start": "65ba5765b38e45cb8a1a19bc97721bbd",
      "End": "f81c408981954930a824a6d83042ad18",
      "Id": "f3bab216d94f470cb198e28a6bf17f31",
      "IsHidden": "False"
    },
    {
      "Start": "b963bf9a0ffa4e00848986d532801fe0",
      "End": "9a14e3c847ee4c94830a4cf72c7b79cf",
      "Id": "6da77dd3f449449f86a2cbb367a09eb2",
      "IsHidden": "False"
    },
    {
      "Start": "d545e0de5ff643aa8ca68956a3d74b6e",
      "End": "353ba226befe49a29a896e0475521cb7",
      "Id": "5efd22ccb2444dd19c9ddcf5acd96fed",
      "IsHidden": "False"
    },
    {
      "Start": "d0084f24770c495593d3efec384b33e3",
      "End": "3f86e3c3c0044bda9d9832bcc3a47462",
      "Id": "18b8322f430b40cda79b112313efb8c4",
      "IsHidden": "False"
    },
    {
      "Start": "ec36dc3ab4c44d4fbdab59c9f43d88ab",
      "End": "4eeeb1f6c0ce4867ad98db2fb653413d",
      "Id": "a5272d5b43c5406a913dceb653a34f63",
      "IsHidden": "False"
    },
    {
      "Start": "ec36dc3ab4c44d4fbdab59c9f43d88ab",
      "End": "c93460138d63498fad5d0a6e163845ff",
      "Id": "ed4567ee34724cb598930de9458dc202",
      "IsHidden": "False"
    },
    {
      "Start": "02b023a1c6f342f3911e715f173a6c78",
      "End": "dfe1b8daaf2846fda984f00f754fe949",
      "Id": "a254004589d4450aabbe013404c7ce32",
      "IsHidden": "False"
    },
    {
      "Start": "25ba6624a4984bf4a4fa42b333f8c33a",
      "End": "19b2fca9c3c44e27a472577302cad833",
      "Id": "0c9e08495b1d4f2db0d5862005629d10",
      "IsHidden": "False"
    },
    {
      "Start": "25ba6624a4984bf4a4fa42b333f8c33a",
      "End": "90241526cd7743b7af7e7ced2e07ba3e",
      "Id": "86d6807c96484ec7aeafce24422e8b45",
      "IsHidden": "False"
    },
    {
      "Start": "25ba6624a4984bf4a4fa42b333f8c33a",
      "End": "145a795c2d4046ccb34d4fd56e4ea355",
      "Id": "28caa7de8c224feb8dda87f14fe4dc62",
      "IsHidden": "False"
    },
    {
      "Start": "25ba6624a4984bf4a4fa42b333f8c33a",
      "End": "b35fc77ddfa74427beb3b1bbf051b652",
      "Id": "d689c1ed1ce7436a867ec1bcd513f9c1",
      "IsHidden": "False"
    },
    {
      "Start": "3694ae008a8f45b98b2dc9551e2b19c5",
      "End": "c956a13e64a249ca94f9f811f6b09b9a",
      "Id": "6f97e85fa7ae45e48c34b8aafad2bf02",
      "IsHidden": "False"
    },
    {
      "Start": "c8b6b9e6c566477a9b2dd3dde5bd511e",
      "End": "9be48347ecb54d5ea092566b9b0778c8",
      "Id": "c781e84f042a4ef6a5019d248e9b4307",
      "IsHidden": "False"
    },
    {
      "Start": "c8b6b9e6c566477a9b2dd3dde5bd511e",
      "End": "a79a3ac4420742c1ba472799d83f4a3f",
      "Id": "2558e35c06ac41a28c9a3c5aa5e914ac",
      "IsHidden": "False"
    },
    {
      "Start": "53a0fde7c88d4e97a0f66bdb1f571625",
      "End": "576b51e766e542c3adca4bba51404beb",
      "Id": "5c3610ef1ed54564a71526f9be4ff4ae",
      "IsHidden": "False"
    },
    {
      "Start": "7782e42a9aeb4aed8b4d317e031f6f4c",
      "End": "02add5d3acc0437aa60a45741ddf9a42",
      "Id": "a7954444a8de4560b068005efc822980",
      "IsHidden": "False"
    },
    {
      "Start": "e941dfd00ec24e75ac7ecff13e1abe5b",
      "End": "f2cd17796b5f4aa6b6e762110db4cd51",
      "Id": "aac2f9f93d984d60af04aa3e2e333bb5",
      "IsHidden": "False"
    },
    {
      "Start": "a2a81069bc7a4cf4b968ea0b34c30dac",
      "End": "1e8ac1d3a71847b0a5fc2b41bc26c06c",
      "Id": "92c302ddb3104faa818452553dc49e34",
      "IsHidden": "False"
    },
    {
      "Start": "4648f008573b4a7cbce8b31327c1b668",
      "End": "5cd07a1a4d9742698fc1c7dcb62cf6c4",
      "Id": "58b4ad1b0e4b40d7ac54e9685fb8ac31",
      "IsHidden": "False"
    },
    {
      "Start": "0b34924ef6d8478e8c586186bbeae0c5",
      "End": "095527e92be94ed18a6f4137b448b9d5",
      "Id": "e6eb6187928543d7bd134ea6284b1fad",
      "IsHidden": "False"
    },
    {
      "Start": "0621630f58264f058ae844dab0e5f563",
      "End": "b3e154caf30942039d48db7aebbbb8a1",
      "Id": "8c9f7312895845e69d4bb66b22916009",
      "IsHidden": "False"
    },
    {
      "Start": "0621630f58264f058ae844dab0e5f563",
      "End": "af5f0b47c5c34e899df5b07ef7ffd085",
      "Id": "b2ac56d8f95048db9f809f0a85856ad6",
      "IsHidden": "False"
    },
    {
      "Start": "492a4ad7fabc4d62954ebe7e670f687c",
      "End": "459dd64589c04c89bc6b110e4338181d",
      "Id": "2ff40bd86ebf4c21b534858df7c26eb1",
      "IsHidden": "False"
    },
    {
      "Start": "cc4684658bb64aa890793ffd5f8c037a",
      "End": "f43c673f4f8542cc869f69ed4afd413e",
      "Id": "cc9d64d55e5a4c67aeb31242d6e67bdc",
      "IsHidden": "False"
    },
    {
      "Start": "1f894bd7455c4edc93161221ce73608b",
      "End": "e373564cf05b4733913fb50b3340ae55",
      "Id": "0ad5c7670e2c4b8aaa306f551fd8e45e",
      "IsHidden": "False"
    },
    {
      "Start": "5266816cfc1e4f38a4628683ad7f9447",
      "End": "23d32a90f250431a942c21537b5ccadd",
      "Id": "0442a4e839cc4053a5c2f361bc1f3a65",
      "IsHidden": "False"
    },
    {
      "Start": "6fd78bea826e4acdaede5168972cafd0",
      "End": "3d97a106b49e42b68ef53ca9f16c875c",
      "Id": "6e47df184c1e433fb610450d12287424",
      "IsHidden": "False"
    },
    {
      "Start": "e011d99a20f748e387d48a0a0526d4ae",
      "End": "6f472fc9021a4dbb9009e7815a38d69c",
      "Id": "88f86e7d70dd4d42aeeec26f8d28915f",
      "IsHidden": "False"
    },
    {
      "Start": "6b23182f6ef14688a28322d17b80227b",
      "End": "a2459a5f5da64efeb6c2ec6722f4282e",
      "Id": "9f3ac1ae1ad4412a99b180802b897e66",
      "IsHidden": "False"
    },
    {
      "Start": "37697b61c69f4b1b970d9bf8a225671e",
      "End": "cc3ad341e69e4928b92ea0ec28b23bf5",
      "Id": "0b2865391da244a593e6e05c29c742fb",
      "IsHidden": "False"
    },
    {
      "Start": "37697b61c69f4b1b970d9bf8a225671e",
      "End": "cc2a6ab2b5884370a49bfa4a8a0eff6d",
      "Id": "d4b0345925ea40408fc3cbdce2112686",
      "IsHidden": "False"
    },
    {
      "Start": "8b18500b2d1a4663a532bf5fbf9f398a",
      "End": "46297cf456154e25b07732dc10d7c9a8",
      "Id": "713fa0d926e04e76ab002413a3c19392",
      "IsHidden": "False"
    },
    {
      "Start": "b72be4227f2d44758c327c2d00cdb6c4",
      "End": "61a9ca8b58dc4e029e0861605d5b8077",
      "Id": "493cb1359b554c05aa1a161bb3ce32c1",
      "IsHidden": "False"
    },
    {
      "Start": "eb2ed0b1984e46d58d7d3a5c194358e3",
      "End": "4a8bc983a6674ba9b5c03722a54ec089",
      "Id": "f8d90761e0ec41b7b9a560287328d0ec",
      "IsHidden": "False"
    },
    {
      "Start": "6e9ce7846ddf4822a23361c27b87d8a4",
      "End": "b9811ba39063419b8a57b7dd86549de2",
      "Id": "c6dc8941eb1d4c72b0e98adf1fdae601",
      "IsHidden": "False"
    },
    {
      "Start": "4fc8de5f13734903b1d1abb4bd4b96e1",
      "End": "44ed26caaf384035bf66e259aecdbb03",
      "Id": "4530f9bf8a894f2eaca606f89ae27cce",
      "IsHidden": "False"
    },
    {
      "Start": "4fc8de5f13734903b1d1abb4bd4b96e1",
      "End": "0a574f19a8a142b5a9b4c18f11f96a03",
      "Id": "2f12be22d64a4fe48da4f8997e3b581d",
      "IsHidden": "False"
    },
    {
      "Start": "3331f5dc57dd414ab8cde0d250b31f40",
      "End": "eada4e93194846f991d8dbbe01590289",
      "Id": "4749a77fd99e4e3ca165a03f56384c51",
      "IsHidden": "False"
    },
    {
      "Start": "497037b28f66438482dbfedcd1ae8c80",
      "End": "f9ad248d456f42848328ce3e10c13db8",
      "Id": "96e3f8f1cc3e44708c217044fc41759d",
      "IsHidden": "False"
    },
    {
      "Start": "1aba4c1b151e44e6a9b1777e913c649b",
      "End": "3fb27d16033e44c6baf30fa3320cf3b9",
      "Id": "71b031f6c31442898c5ebeef2c33f7f7",
      "IsHidden": "False"
    },
    {
      "Start": "f5a9d1a041ed4363980711cf60a5a52e",
      "End": "a677c169f2c540939b4e1c4bf8156bbf",
      "Id": "3d967341a8a4402290b909a85a98b636",
      "IsHidden": "False"
    },
    {
      "Start": "f5a9d1a041ed4363980711cf60a5a52e",
      "End": "b541f5e6b8724f1cbfe50f3939ab9c1e",
      "Id": "97d6483ad7954a2e9f85eec56ac59d48",
      "IsHidden": "False"
    },
    {
      "Start": "834800ddd462451cb892313dcd6dd5be",
      "End": "74c259543a1f49328d81b24011204c59",
      "Id": "00ed27e8119e4642b6a4064156ec91aa",
      "IsHidden": "False"
    },
    {
      "Start": "3b5ab780ef1d4edb8975679311684cdc",
      "End": "2c692a945b134c90a3cad8b836523936",
      "Id": "ccef280a72fe45299209993b8193b938",
      "IsHidden": "False"
    },
    {
      "Start": "c45b47e9249f44f1b20c365f88ddfb06",
      "End": "39ae63a3edcc4eea8af8644260512d97",
      "Id": "c98f460b06134c57bea6e55f7186445b",
      "IsHidden": "False"
    },
    {
      "Start": "da4f2c3004b54623bef02ac4f79dcce8",
      "End": "2741c7e6092745d5870dce3b34216000",
      "Id": "95e8b97cf7184465bb7b47aff01d7eb4",
      "IsHidden": "False"
    },
    {
      "Start": "da4f2c3004b54623bef02ac4f79dcce8",
      "End": "c5d615173f65490fa547496584e99b85",
      "Id": "92ad5d938f7a4b6e8e27d75646c2cc9d",
      "IsHidden": "False"
    },
    {
      "Start": "47b1837e74fd4404b0f0a0030bd375ca",
      "End": "be1b6f7dfd8b4d48ae6e7d66e77078a5",
      "Id": "579ebe760b234ef2beb6188b134209c5",
      "IsHidden": "False"
    },
    {
      "Start": "47b1837e74fd4404b0f0a0030bd375ca",
      "End": "a8ef8c6d2e744633b95e262a4dfdd553",
      "Id": "5467d70d139f43a58408874eb40537af",
      "IsHidden": "False"
    },
    {
      "Start": "2b0fd93210ae4e5ba8b640d23613ce14",
      "End": "a420809731ca455b983ad4bf42479ea4",
      "Id": "0e9e2eb9840541d6ba73acc9fb19a246",
      "IsHidden": "False"
    },
    {
      "Start": "2b0fd93210ae4e5ba8b640d23613ce14",
      "End": "de215a2cd3c5471d9ffdbdad10ce8524",
      "Id": "02634b827afe4c3c8f0cf7ae87be0e01",
      "IsHidden": "False"
    },
    {
      "Start": "4e1b2b093dce41258087c9b3ed4b69a7",
      "End": "0dd70ea8c3a94c2ba8d96179aff586bd",
      "Id": "b8f3848422ec404d91a9b51208b83e38",
      "IsHidden": "False"
    },
    {
      "Start": "d9554e63c664483fa594fc3ac4b40985",
      "End": "b73d8e7176e24788b701e99c4b8c4597",
      "Id": "14cd2bfda7cd4008bc58dc4e2f120e4c",
      "IsHidden": "False"
    },
    {
      "Start": "8f5a83e4398f498db16860fc8d59587e",
      "End": "81447c69729042a9aa921958a3d297b1",
      "Id": "e772acb9cb334d46a8b7b76dd6f665fc",
      "IsHidden": "False"
    },
    {
      "Start": "d0ad0815fcb8475d8f3cca35e363032c",
      "End": "3ec4c04cb43f4ea68792554fef1fcef9",
      "Id": "efa35827359c4bb59f1fe7c58349bd48",
      "IsHidden": "False"
    },
    {
      "Start": "ac81c10d5d334f5ab4fd2bd10a0d99ac",
      "End": "2d03a2ab51604c6892b58fd5a6786300",
      "Id": "b8a92647a3954055b0e8dda32950ab57",
      "IsHidden": "False"
    },
    {
      "Start": "95b0f088bed548b78c1d1fd4c93b521e",
      "End": "ca008fdca2984628a177c2db8cfda552",
      "Id": "303214f80ff348419e22200a0bb23c14",
      "IsHidden": "False"
    },
    {
      "Start": "5fcdd4c577704420962a0edba3fcddce",
      "End": "537ff0403da744529c06cef313b042bf",
      "Id": "b2c53331f3334e4083841ffb49a4de19",
      "IsHidden": "False"
    },
    {
      "Start": "c68e9b3943d140e1aeea1be401920343",
      "End": "c0be0208823748e0a95535c68db397f3",
      "Id": "94270bbd439646a4bf7042e09d6857ba",
      "IsHidden": "False"
    },
    {
      "Start": "dd325c63ccd44b0eb26b29ed92275774",
      "End": "d9ffbe86a77c492e97821b7c6039a2c6",
      "Id": "665b1a2aedbc499bbfefee4a220f8a4f",
      "IsHidden": "False"
    },
    {
      "Start": "dd325c63ccd44b0eb26b29ed92275774",
      "End": "bbfeb977c5d54dd08c69f2f315278733",
      "Id": "96f5698daf574b2981dfa4dfbfb2c30e",
      "IsHidden": "False"
    },
    {
      "Start": "bb59c2f50fdb41a6a7fc5d185460ec3c",
      "End": "bdd527e7102f44309b1f1c5522e47dba",
      "Id": "a8ca6edc1b2349d8a7e336788809f6fa",
      "IsHidden": "False"
    },
    {
      "Start": "0c1e02a168734c2a8768be1db0343e1a",
      "End": "d6aef6e6278f46b2a324b2da333b5e32",
      "Id": "63cef071c5324672a3bd26989e921fbc",
      "IsHidden": "False"
    },
    {
      "Start": "1b650634037248cc91c31042bb4dc27a",
      "End": "666d03a9a74a4f8e809460d4a3c45b93",
      "Id": "b63f194566eb415bacb99647ac420903",
      "IsHidden": "False"
    },
    {
      "Start": "3fb589fdd62a43589f4043413c6ad3f8",
      "End": "b9473ab15ef9450b8b88c5f43e04ef8a",
      "Id": "0b7bd921b17b4382ba105e63532b573f",
      "IsHidden": "False"
    },
    {
      "Start": "5ad7583ce98b4800b59085c369e6dc75",
      "End": "af668400ef6546a4984c56e1d0f09a61",
      "Id": "a676bcf4a97e416296cb9b037dd3d81c",
      "IsHidden": "False"
    },
    {
      "Start": "05414e9f6a2847869bfe937274f56200",
      "End": "4b423f61e7fe46c1af676fcb557535fc",
      "Id": "041a6c9b11114530bc4b1374d1a1a6c7",
      "IsHidden": "False"
    },
    {
      "Start": "1f924a8aa5cb4be8803eb6861df3ef37",
      "End": "676365d73b7949169236bf61b8ff2ce3",
      "Id": "3e7fcd68a1d947a9863a49f9bc19302e",
      "IsHidden": "False"
    },
    {
      "Start": "0d28b3af4cb34b7ea80216606fabfcf0",
      "End": "ade468cca8e143059a642d0ae79c8f3d",
      "Id": "9c7607b3bcba4c40930c3f0b42858daa",
      "IsHidden": "False"
    },
    {
      "Start": "a038e5b8c7d64ac5b2b6e464af36b88e",
      "End": "e30c82f8d8b2471c808df07951fafd90",
      "Id": "3d65e18b369e445f839614c71e7f8edf",
      "IsHidden": "False"
    },
    {
      "Start": "b8acd96515284146ba530f9a81f9986d",
      "End": "5f5226f62dfc43fa8bf2e751b2f7855a",
      "Id": "8f475ef8621f46259d7c8d5597a0f95f",
      "IsHidden": "False"
    },
    {
      "Start": "cdb36c1fb71f4769838705ad16050f70",
      "End": "c749a47acb5245cea74da514002fe32b",
      "Id": "058c9bd5a8f44022bb31d9ff1d11afd1",
      "IsHidden": "False"
    },
    {
      "Start": "b8551dac9a204e2987bda6b1caef8163",
      "End": "42b81488443144efb9c3ae213ff698b2",
      "Id": "c73a752731404208a5f12be6f1288be2",
      "IsHidden": "False"
    },
    {
      "Start": "a4ef72f3cbb849bfbc3087d49cff25b8",
      "End": "c802d601e99c4879a4262e4467aa1e18",
      "Id": "9ce7b7b2513f4674a899c7016c8447c4",
      "IsHidden": "False"
    },
    {
      "Start": "8f2889c8a6cf424495b8e8dd3b682486",
      "End": "6349774381b543f1a9ec77d4eda061d7",
      "Id": "b61b4384c1974d25be9e26d77a301cbc",
      "IsHidden": "False"
    },
    {
      "Start": "b979df2357a642bc8d9b8b3ac4538942",
      "End": "0a9a265b193244bfa07a06005e9dc39b",
      "Id": "c6883d90035f41289c5b91340786b099",
      "IsHidden": "False"
    },
    {
      "Start": "b979df2357a642bc8d9b8b3ac4538942",
      "End": "63265ee75ca74ca9ace454755089b071",
      "Id": "2c0ac1c666e64e69967ae4adcc2cbbdb",
      "IsHidden": "False"
    },
    {
      "Start": "db2c2fddb98541c5a8a5de33b48f7d68",
      "End": "7e19f80a69fc4b7fbb90884d5f292c15",
      "Id": "d21f765719a347c09b3a2e25a92e21a6",
      "IsHidden": "False"
    },
    {
      "Start": "db2c2fddb98541c5a8a5de33b48f7d68",
      "End": "69617643493347fd849c34fda6d35994",
      "Id": "3b65e56b50c44175acdfa59d5cceb568",
      "IsHidden": "False"
    },
    {
      "Start": "ff8fafabed5448c1a96ed511a4214162",
      "End": "201608c0a44945ca92e991c48caf9169",
      "Id": "cf618439e8534a8496a7abae10a2db2e",
      "IsHidden": "False"
    },
    {
      "Start": "ff8fafabed5448c1a96ed511a4214162",
      "End": "38f97b0eff794b4c89606dc206fac37e",
      "Id": "99ab45ba4d014be6aab7da3d4cec9857",
      "IsHidden": "False"
    },
    {
      "Start": "26326cb9d4b9450b94006784eb16bc4b",
      "End": "21ae1dbf73e64bc3bbdccb7a546b9474",
      "Id": "db7fe291fbd040eaac00eab40511364e",
      "IsHidden": "False"
    },
    {
      "Start": "feb53ae53ca74550aadb164bd76b466f",
      "End": "0c46cfc7bccb4bdeb1dba2f0d5f82cf6",
      "Id": "90a56ef6f7fb4404930d0748933cf82c",
      "IsHidden": "False"
    },
    {
      "Start": "c75b02ab7bf04329b077e61b1b766768",
      "End": "43d982094b5e401a82858188b1063062",
      "Id": "18958594bbce497989a61a8cfe0fb404",
      "IsHidden": "False"
    },
    {
      "Start": "c75b02ab7bf04329b077e61b1b766768",
      "End": "99439d1dd4e34944a2087ed62ce72922",
      "Id": "5f20201f34d74aa6a472466b8d30ef04",
      "IsHidden": "False"
    },
    {
      "Start": "b2f768add3c74cd5ae4c97a1870ff5bd",
      "End": "3125db494c11430bbfc96702af571902",
      "Id": "fe146dcb58f44460b50c8c3de4702c2c",
      "IsHidden": "False"
    },
    {
      "Start": "b2f768add3c74cd5ae4c97a1870ff5bd",
      "End": "0e51dcbbcf3e462fbbf8bae37f7d7fb6",
      "Id": "298a8f4d325446848b12f11fc5b89f4c",
      "IsHidden": "False"
    },
    {
      "Start": "09409640f302480a9b1e5ec324e60b1b",
      "End": "952b6368965746cbb65029d2fa2b81a1",
      "Id": "2e4961483b4c42209bf57bb473d04571",
      "IsHidden": "False"
    },
    {
      "Start": "e1cd062a6ad34326a2a74c378d63fa18",
      "End": "2a379d4d67b447a99ebbbe002e7a0212",
      "Id": "188469f3e91a4ddbac9ae879b3d2e0e6",
      "IsHidden": "False"
    },
    {
      "Start": "e1cd062a6ad34326a2a74c378d63fa18",
      "End": "f7d17140a25646c9ba64b8ba3b74aa78",
      "Id": "365b00393df14e259d2ddf0e7fb7e551",
      "IsHidden": "False"
    },
    {
      "Start": "8d3ac363bb844a3bbe82d6f17b2d0ae5",
      "End": "8189cf2631e24118baf52ed91d197e4e",
      "Id": "5fc7974f32964a35aaef05df55343838",
      "IsHidden": "False"
    },
    {
      "Start": "73a01727692c4d338a7393598d6bd70d",
      "End": "977fcbd140d84601bb6943894c5756e3",
      "Id": "b8a64ff9ad0c4ac680ba1a9217e615f7",
      "IsHidden": "False"
    },
    {
      "Start": "2ea6e69cc9664aceae0d724875a22cd0",
      "End": "0b0b5e0159034c28859f2b9a37038391",
      "Id": "e15d549ae6e341f7abe1c13a602345ce",
      "IsHidden": "False"
    },
    {
      "Start": "bd8ed5020143454cb8ff3615ccb493dd",
      "End": "814e6b1708184e00a0e3965114e528ed",
      "Id": "34a077a658f84b5e91dd26dc48897c22",
      "IsHidden": "False"
    },
    {
      "Start": "1859fdfb191e453e8b8f55371795ce8f",
      "End": "9ff36910520c40a0badf14e3e0799cfb",
      "Id": "a8fd5e6830d1454ca481d3ccde3c2934",
      "IsHidden": "False"
    },
    {
      "Start": "d31c9bd20eda44e4b39b455e5413a45c",
      "End": "b654c53734bf4e9c83d595cec174f5fb",
      "Id": "04025b7c0ac14d69bff09d01ea143838",
      "IsHidden": "False"
    },
    {
      "Start": "d31c9bd20eda44e4b39b455e5413a45c",
      "End": "fa1584b02b5948ed9a922a4c05e19af5",
      "Id": "57f4483c015345089c32ccc13f9c2c46",
      "IsHidden": "False"
    },
    {
      "Start": "4267a86a287d4b00979fa1152cb79461",
      "End": "bf276a9cf60b4ac4a7268633949b01e7",
      "Id": "908c13fca2d64766add02287ddfd9141",
      "IsHidden": "False"
    },
    {
      "Start": "86b16fc3c03947c8aaa839161533732b",
      "End": "d32cb76849d34af9935247f0331df73b",
      "Id": "e4a1c6cbc0354c829ecc75a46f9d867f",
      "IsHidden": "False"
    },
    {
      "Start": "0f7b957783024ce6bd12beb17e10aabb",
      "End": "54eb76491eea4dfeb698a6c047a08076",
      "Id": "8bb3eb309b714b2ea87acde09a7707c3",
      "IsHidden": "False"
    },
    {
      "Start": "2ff316b81bcd42ebab9a5ead3b060aec",
      "End": "a4a3ae7ce1734a52a0d4cb466b4e6d04",
      "Id": "dec39772123649e6ab56f3cba92edb66",
      "IsHidden": "False"
    },
    {
      "Start": "77bdf40bf44541d196d361eba54171a4",
      "End": "2b1ea63703cd40e2981733c3786ceafa",
      "Id": "e464812c381442128b0729e2225bc0d2",
      "IsHidden": "False"
    },
    {
      "Start": "84edabaaf10840dbbf39935d1cf9efe6",
      "End": "7af9c5df2f7741c48216a375bdfbda59",
      "Id": "cf62adb44552407d8788c62089314a6f",
      "IsHidden": "False"
    },
    {
      "Start": "2f08daa90f8c44eaac60a9ee7c6f2772",
      "End": "6dd5a7cb950649dfa498da4cecebae9a",
      "Id": "e74ae1d91cdb4299bff08fd6b88ee775",
      "IsHidden": "False"
    },
    {
      "Start": "6b4b14355df04a6f922ad9bb486446fa",
      "End": "cae75abd2339430d85a264aee7f17ed6",
      "Id": "d9715d726df54cff9aed9ba7960761da",
      "IsHidden": "False"
    },
    {
      "Start": "d4f2ef0b6559415f9b92239e8a9ebc18",
      "End": "ed5f96195c2c4916b7de60b6da840fc7",
      "Id": "8c5d84dd753b41ce985c10f8b53e3778",
      "IsHidden": "False"
    },
    {
      "Start": "9a33b7079b82463e8f6e6367e942c98d",
      "End": "d719e854ae00430b87b0927b1b79df4b",
      "Id": "2785d44bcb734795a8ff5faf69db3daa",
      "IsHidden": "False"
    },
    {
      "Start": "6d2f246bda5d4c18a66539270ce18c43",
      "End": "bafa90b49a1b40e887eef53d2a8d07c8",
      "Id": "90a8f4e2ce214dec82549cdcc14f3172",
      "IsHidden": "False"
    },
    {
      "Start": "53383c1d594c4470be004a79f7d1f337",
      "End": "541e82219f3645748d91d36d712e8f54",
      "Id": "c12ac096ca59446fba18d2aeec0f0368",
      "IsHidden": "False"
    },
    {
      "Start": "0711176949c14cd3a111a8d9b8bdb2b0",
      "End": "66007b29403547e5ba1a33a834a3dd3a",
      "Id": "20a15e4bd3674d5282f54320669a97e1",
      "IsHidden": "False"
    },
    {
      "Start": "86df073a50114494a619f41245e6b0dd",
      "End": "835368daaf1d44108174c8bd2b6daaaa",
      "Id": "61aee5f9fdce4e11a1792617d452b04c",
      "IsHidden": "False"
    },
    {
      "Start": "a2447d97ff4c4d25a23594d56a52403d",
      "End": "8eee0960f5d4469c9db47769d9765973",
      "Id": "16d6fb7cae3142f89e1523878aadf7a4",
      "IsHidden": "False"
    },
    {
      "Start": "3e0937923cb64451a72ff5268a50e214",
      "End": "5fe85350df174008b6b8cc06463b0227",
      "Id": "5defaf00ee4345459faf765fb27fe434",
      "IsHidden": "False"
    },
    {
      "Start": "a0d6ad4c3c0c43289008aec7d85778e8",
      "End": "d00898b1ae7b4d51829b3de8948c0531",
      "Id": "7329e9cf436e4f499530b9c951ca030d",
      "IsHidden": "False"
    },
    {
      "Start": "44f2f4a76a0c4922b144790ed4e708c5",
      "End": "d6b6d21705844e80a6ad101785f4e3ec",
      "Id": "b508f195e4a94b63947eb3e4aa5e1329",
      "IsHidden": "False"
    },
    {
      "Start": "eb0a7c7887ad4e4b9e523c63f3919765",
      "End": "6e75e6c613854ba2bf0b9c190a9ba821",
      "Id": "d38336920c3f4a2a9d73212da9a31b31",
      "IsHidden": "False"
    },
    {
      "Start": "f6863e8da21f4a5ab7e995506c728755",
      "End": "f11dbcacabef4f51895cb6a9492bebae",
      "Id": "2e5d4479882247248049d6fdbfbfddba",
      "IsHidden": "False"
    },
    {
      "Start": "056d9b41cb23417b8099cc6f27353776",
      "End": "462602ffb5604a3683aa1fe8ce740637",
      "Id": "5196b9ca08984dfd86c92afa9acb3a89",
      "IsHidden": "False"
    },
    {
      "Start": "848729fe6fa146af89c265c90e10d0cb",
      "End": "fb11fa889f4b44789b9b36a6121ad160",
      "Id": "51393a200b9c4a5c9f1db779ce1fd4b0",
      "IsHidden": "False"
    },
    {
      "Start": "63fbe3515c41473799f6457efd368796",
      "End": "b9643ed9b5e94b718beeb336a1573070",
      "Id": "609958146bdc4450bf7a8d91005ae9b2",
      "IsHidden": "False"
    },
    {
      "Start": "b6ac7410612741e9be73f83000f013ed",
      "End": "d17b3944b7ad43d4acac866b00603253",
      "Id": "930317fbe11d4fb09e95f16e32aa4ec3",
      "IsHidden": "False"
    },
    {
      "Start": "685d3091c404450a80405267beac11f0",
      "End": "753296d16b4b40c187f8242e512e6d37",
      "Id": "8297e06eed594889938de7c4ecd8ef33",
      "IsHidden": "False"
    },
    {
      "Start": "2476de45b01e487b82e7f9b8c39ef828",
      "End": "f2aaaf3d764e4e788a41b8af00f4d679",
      "Id": "afa5e4d3c2894fa3a28c38a7960820c8",
      "IsHidden": "False"
    },
    {
      "Start": "3f42b82140944ec69879976be8781803",
      "End": "616f06b1d7cb470ba922f6365c6e366b",
      "Id": "8a3552ab5e4d4591ac34425c12554a28",
      "IsHidden": "False"
    },
    {
      "Start": "b3b28bab5ec14ff4bedca8df0ed47e72",
      "End": "7efa61b3048b4883a9c1d156805abec3",
      "Id": "bc654fc2eff94ec89ce6a4d037b17372",
      "IsHidden": "False"
    },
    {
      "Start": "05450c871ee1488298f3b047a83e0a7f",
      "End": "569a5672505648849dc5a52d92feb39d",
      "Id": "327be9366f5347578992b252a726e4db",
      "IsHidden": "False"
    },
    {
      "Start": "e43563f886584282a92befee08e90cf3",
      "End": "fe0c09d8c3ff4762b13f5b61e46acd24",
      "Id": "99f10c847c0d4e4cae0955d53adf95cd",
      "IsHidden": "False"
    },
    {
      "Start": "c46d063c6f7a49ac9633b76bae2aea5b",
      "End": "84e212b8b16f4dcea645a8fa41aa899d",
      "Id": "37ad899408fd4000855c67599f49155e",
      "IsHidden": "False"
    },
    {
      "Start": "b99568f88caa408596729c4dfdfbbab9",
      "End": "ab297757eef7427a866e2e3687bc12af",
      "Id": "75a1ed1f056d42f2823048314a8fafb9",
      "IsHidden": "False"
    },
    {
      "Start": "4151430bc382462b9684d0b6bb15035c",
      "End": "c167cea3c0014b4e94d74504aa248fd6",
      "Id": "ee702474735b4804b9e80af46639e1d7",
      "IsHidden": "False"
    },
    {
      "Start": "06dc61c545f14183877819cca30e4ccc",
      "End": "f392355b1c194dc4a33a0ff34ac84a9b",
      "Id": "ea36b909ce1d4bf6991e538d24db9fc4",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "4abff87f-8dad-41a9-bcf6-98784ac456eb",
    "9fbd05c0-ec1f-4bd3-bf37-969a1552eab8",
    "b409775c-5d88-4d47-96a3-5135c775d26a",
    "c3a36eb7-8fe8-4417-b31e-ccc9fded769b"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Data-Shapes",
      "Version": "2021.2.92",
      "ReferenceType": "Package",
      "Nodes": [
        "a22fecf3170444b28a8f274b49189841",
        "34a856b06ef94a9fa1cff425e6b85281",
        "9780a4aaf96441239c3f1b4f996ec0a6",
        "88357308e25849ad9b01bd76e118488c",
        "405d6bd0625b4a18b5de8cee417501ea",
        "a9d50330a23b4220879b917f3d86347f",
        "9641107e6b164d57af8dabb0e4bbcba9"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "2.0",
      "Data": {}
    }
  ],
  "Author": "None provided",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.13.1.3887",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -17.0,
      "EyeY": 24.0,
      "EyeZ": 50.0,
      "LookX": 12.0,
      "LookY": -13.0,
      "LookZ": -58.0,
      "UpX": 0.0,
      "UpY": 1.0,
      "UpZ": 0.0
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Id": "1992d40de464401d88a79b4eab16b428",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -4262.446110892869,
        "Y": 4848.5807238225934
      },
      {
        "Id": "60e034fbddee4bba9fe6721e41063c35",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python: Pipe Network",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3734.8832289664092,
        "Y": 4509.4344733414136
      },
      {
        "Id": "bca4a2c43f404448bca9fb8e5e255036",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -4251.0127544067809,
        "Y": 4509.4194468606511
      },
      {
        "Id": "f919a17b1af8462d838a94a3182a897f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 4029.5049428620623,
        "Y": 4613.9408982779969
      },
      {
        "Id": "13fc91b270534bac865584add19fe541",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 3731.8469749786309,
        "Y": 4761.2610019900312
      },
      {
        "Id": "2f58e4f491aa48f7965ff22a04b24c88",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.UniqueItems",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 4380.2879296282808,
        "Y": 4810.8541594733842
      },
      {
        "Id": "2137f2040bfc422ab5653155bfd582c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Sort",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 4598.7499059604006,
        "Y": 4810.8541594733842
      },
      {
        "Id": "ac04a566a2114574892b3185db6b4742",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 4790.4385921070207,
        "Y": 4810.8541594733842
      },
      {
        "Id": "289ed23a5ee44569b22e3729363dd707",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.Length",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 5034.68461273812,
        "Y": 4670.2041906027944
      },
      {
        "Id": "e9bb49cf8ba74f44acb3f67fc018ff99",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 5263.08281286951,
        "Y": 4670.2041906027944
      },
      {
        "Id": "836ff35bb2ed4ae88eb1448f0ff7c4b7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.TrueForAll",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 5477.86788165127,
        "Y": 4670.2041906027944
      },
      {
        "Id": "3691af966a5c4c098f2b7cbca524ec3c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Object.Identity",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 5221.8892572564046,
        "Y": 4863.2258168938624
      },
      {
        "Id": "ed6b486ded01425eb7b6d1aaa67241b8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Join",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 5795.2625301111311,
        "Y": 4955.4655880986584
      },
      {
        "Id": "6378b1a4351e434cb36379e2349065db",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.TrueForAll",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 6005.3125724911633,
        "Y": 4827.9091717206838
      },
      {
        "Id": "577c7f0a4d90468aa81f7bbb863cd907",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -5688.56090349709,
        "Y": 5483.0195670195
      },
      {
        "Id": "3b5bc256c66640adbb7d764bf48ef1a1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.GetCategory",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -3275.5215637467568,
        "Y": 4325.5036148068721
      },
      {
        "Id": "f7b017915d4b45c08698b8cf8fdd72bb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Category.Name",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2997.0632096914064,
        "Y": 4326.7780237499173
      },
      {
        "Id": "db33459537184e34a17585b7834db6c6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2712.3555787500368,
        "Y": 4326.039587139443
      },
      {
        "Id": "6bb255afcc6440e1b5e030ac854de0d2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2941.0804513606522,
        "Y": 4453.0617318158556
      },
      {
        "Id": "fc00f9d7ef1f435798802ae59c03cb4f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -2403.3753530906629,
        "Y": 4509.335822562216
      },
      {
        "Id": "140db3a8d51c44fbb321f4e6814ef357",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 17650.540930056643,
        "Y": 5715.2923291451625
      },
      {
        "Id": "300e1985ad544960bc5e49bb3114bd2b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9714.5647141732225,
        "Y": 4557.5479957736979
      },
      {
        "Id": "8fff634a9de44d18a6ce4c30b20e9dbb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 9484.7006247577829,
        "Y": 4449.0879456168077
      },
      {
        "Id": "c8bdf417393841feb865e20cf329842b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10650.981376040187,
        "Y": 4854.4658906999794
      },
      {
        "Id": "313888face5b4f34b2d31205e9af4af8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 6342.4680019945672,
        "Y": 4985.1607203313915
      },
      {
        "Id": "849f6aac043a4a6e8bcb8b9d5fa9a8de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 10182.293378638518,
        "Y": 4958.0629833329867
      },
      {
        "Id": "5dd4d45871504ce7a6f4dfb3b9086b7b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "<",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 13138.035577539116,
        "Y": 4868.4181013538409
      },
      {
        "Id": "5a9cd82838714bc69f916e870829c691",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FirstIndexOf",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 13403.57545239331,
        "Y": 4866.8955458726114
      },
      {
        "Id": "a7cb7caff4dc46778bd4f0db0337f417",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 13642.739722593962,
        "Y": 4868.591203475632
      },
      {
        "Id": "86f8b98fc50d4c1ca157c24f97801675",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.GetLocation",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 12575.213473907479,
        "Y": 4716.1326929562483
      },
      {
        "Id": "43f6e7be38424afe9bda146d12df3dd9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Point.Z",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 12852.983451613978,
        "Y": 4715.7614089525487
      },
      {
        "Id": "e32cbbd6385a4d01aafaa535ee2120fe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 13139.669291517897,
        "Y": 4729.1763468932268
      },
      {
        "Id": "73c75d3beea3444ba3713ab5522ae34d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 13860.337631218315,
        "Y": 5049.3138539575957
      },
      {
        "Id": "f3af12a46b694584a009dfbe6bef4e09",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Level.Name",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 12585.138874927787,
        "Y": 5050.3544203326965
      },
      {
        "Id": "5c3c12c1cc054620a5d03867c9f0db1a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.SortByFunction",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 12177.187801294534,
        "Y": 4983.5508265429353
      },
      {
        "Id": "ca24493bdff34bc19be91d9a8a74998a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "All Elements of Category",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 11835.459880070433,
        "Y": 4983.5508265429353
      },
      {
        "Id": "7617cdba3ae2415b83f82fe41dcb37a8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GroupByKey",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 886.21505626821545,
        "Y": 3380.0421854423275
      },
      {
        "Id": "a36f5ab7a951410781bf2dd487879b9d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 29.815454783237328,
        "Y": 3374.4074573144558
      },
      {
        "Id": "db63d0bc58b94ca791dcdb165e0d3b50",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Network evaluator",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -315.89921210174452,
        "Y": 3709.331204618356
      },
      {
        "Id": "0a40ca02e17c4be196e3f2d98933207d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Get Tag",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 390.94555874361686,
        "Y": 3707.4308487080211
      },
      {
        "Id": "d0b4fd18b3c845c78e0e87d0a59a68a9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 13.502347354637095,
        "Y": 3714.3652072600612
      },
      {
        "Id": "3ccea3479e4c4c9181e1041ca51cb8e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 586.5342886843282,
        "Y": 3706.1469441614931
      },
      {
        "Id": "0412bec6640a4b69bdc7f1199ae2404f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -660.247809009167,
        "Y": 3707.4559000826262
      },
      {
        "Id": "7dbf9379fa3e48458b3277afc9cf5795",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -882.41588747465607,
        "Y": 3365.1408352359531
      },
      {
        "Id": "80c7c407d7014e7f869011b53324b64f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1506.9499866015656,
        "Y": 3365.84431631926
      },
      {
        "Id": "bae67ff8bcfb41f98c891ead6fa9e16a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1788.8556655612028,
        "Y": 3260.1346152140632
      },
      {
        "Id": "6f54122b872a42209a352172ffa244d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.MinimumItem",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -1123.7894333093432,
        "Y": 3480.8669434461649
      },
      {
        "Id": "dae92156b09d4c11977d8afff73e84cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.ElementType",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1513.6176600723024,
        "Y": 3162.35846228771
      },
      {
        "Id": "0e736c876f064590b60cbb81b225e87b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1819.4313959259823,
        "Y": 3162.35846228771
      },
      {
        "Id": "9c2040edd4564e5a911963de09105fa3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1517.9615419115883,
        "Y": 3305.0571432145553
      },
      {
        "Id": "6a8352ca88e84fce9cff8492c07e1e97",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2227.5914444729224,
        "Y": 3162.35846228771
      },
      {
        "Id": "0d766061becc43b792e26bc15c20b6a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1939.6979236788725,
        "Y": 3321.7600489509819
      },
      {
        "Id": "80e11b5668b54bf2854713df57bd0855",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2548.8646378406988,
        "Y": 3378.4907208706659
      },
      {
        "Id": "bf41fb1cfa9d428f84c8d0644080d1c3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.GetCategory",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1305.8994613975069,
        "Y": 4023.9562487578
      },
      {
        "Id": "faa5cea5d1764b4d808e613cfd91d0b8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Category.Name",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1584.3578154528573,
        "Y": 4025.23065770085
      },
      {
        "Id": "bfc5f444e01248188dfdac1a0b4d6137",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1869.0654463942269,
        "Y": 4024.49222109037
      },
      {
        "Id": "f8eb57b41757430394f6fc87e04a60e5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 1639.9279917327935,
        "Y": 4164.650054850219
      },
      {
        "Id": "960ece72c1ab4188aa7edda80291d9f6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2168.7964400904,
        "Y": 4203.16384053155
      },
      {
        "Id": "06eebc6e500c476ab914a873aefb35b9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2838.5947799541273,
        "Y": 3952.0934778809637
      },
      {
        "Id": "9da0f031ec9e4e15961e960287751fa6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2512.601796601477,
        "Y": 3855.812657032714
      },
      {
        "Id": "d970de63eedf41d9950c6404ef6041d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 3243.5521085616051,
        "Y": 3951.2855926993934
      },
      {
        "Id": "aa30823c15354919a1559539a30158fd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 3549.2675020564834,
        "Y": 4189.7389453415435
      },
      {
        "Id": "5ca5b7cf9321486b94f25d26dea4a89c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 2841.04056378346,
        "Y": 4115.3781773968722
      },
      {
        "Id": "ec794750f3164cc28dbfb0922c4be6a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 11281.908713175198,
        "Y": 3344.6841777538502
      },
      {
        "Id": "1b37da7083894359840cace6709785d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 11645.12153466694,
        "Y": 3467.1579334509788
      },
      {
        "Id": "8a77d83d53da40f8876a91650e977d73",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 12098.343167642312,
        "Y": 4277.5647531225213
      },
      {
        "Id": "05e0cc77233b49b6af0d605e620680a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 14178.360676119113,
        "Y": 4757.2279215531562
      },
      {
        "Id": "4bcb148e36db40798c1fc258cf6d4597",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.UniqueItems",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 15260.463233424683,
        "Y": 5591.463556645137
      },
      {
        "Id": "2793bbbbab0b4667a4eec480cac4a1cb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.AllIndicesOf",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 18462.945841049856,
        "Y": 4774.5932639211514
      },
      {
        "Id": "1bb475b884ea4abda02706981e22a60f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 18795.047583249827,
        "Y": 4776.0102890275166
      },
      {
        "Id": "6c62c408b34c42d78441d1f28f428a26",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 18503.745842392273,
        "Y": 4954.3334013224276
      },
      {
        "Id": "524a768617a4477f84ea519ea0a3e76d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 19247.72769701387,
        "Y": 4267.4311545947266
      },
      {
        "Id": "2a333299a7b5469581afe1f539206641",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 12475.160103844817,
        "Y": 4279.7326129531421
      },
      {
        "Id": "044cd3c514d44b50b748277811004c86",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.Delete",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 19611.888777684406,
        "Y": 4269.7548166000124
      },
      {
        "Id": "8d8f40a9f6b44024bd3facb1f796e944",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 4072.0362826855526,
        "Y": 5275.4119163882269
      },
      {
        "Id": "5d5632cc02564701a5048260132916a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 3731.3489538150657,
        "Y": 5306.9415560137
      },
      {
        "Id": "69d22a46bf9c4262886628fbb0028089",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List Create",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 5189.9246600001561,
        "Y": 5272.4866112866266
      },
      {
        "Id": "20ea2a44e9e041e6922a26cdadcc785e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 6942.3301819573771,
        "Y": 5261.137083270246
      },
      {
        "Id": "78cc4529bc7c4ad5bcca76a826e24544",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 6675.3146864062383,
        "Y": 5261.695126513745
      },
      {
        "Id": "a22fecf3170444b28a8f274b49189841",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "RadioButtons Data",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -6188.11828942936,
        "Y": 5683.99223773027
      },
      {
        "Id": "0996b25f289a4c33a875b860b3cfcd83",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -6708.1404956768192,
        "Y": 5531.0764369597
      },
      {
        "Id": "b80995ad718548f9bd49e356763abc81",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -5418.54021613731,
        "Y": 5146.13773039773
      },
      {
        "Id": "5001610997b64ea88e7d8a44a0fa17e6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Boolean",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -5314.03591971228,
        "Y": 5784.22506055325
      },
      {
        "Id": "34a856b06ef94a9fa1cff425e6b85281",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "MultipleInputForm ++",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -4983.37381339979,
        "Y": 5380.68307885109
      },
      {
        "Id": "0985240687db4493a307b43242d52ef5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 7242.5285802294275,
        "Y": 5460.5971819139595
      },
      {
        "Id": "2ceaf255b98c4fe897a3bb2a027335fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.IndexOf",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -7351.8071175665136,
        "Y": 5470.2559848260289
      },
      {
        "Id": "90b3d1dcf50e402994ea162e028584e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Python to sort strings with numbers",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -7738.7291069219646,
        "Y": 5286.3891688940976
      },
      {
        "Id": "44daa4089f1f408eacca229eeda5567f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -8022.2093217909824,
        "Y": 5469.0794916191817
      },
      {
        "Id": "1e5221d6f4854292a22a3f1ea8709746",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -7119.8666622813835,
        "Y": 5925.6149190438819
      },
      {
        "Id": "8c075496210343ad9fdfdfcb905eae1e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -8286.6220597968331,
        "Y": 5931.5790692246392
      },
      {
        "Id": "f5b309fb41dd4a67b0718ee1d1b5eaa7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.Name",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -9058.1635643226728,
        "Y": 5746.5607649285184
      },
      {
        "Id": "db5ba023fa304888af5d26b20b9d207f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -8811.1293579331432,
        "Y": 5745.5474467006179
      },
      {
        "Id": "8e07551d89264094917f065ce2feff7a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -9578.9107855090624,
        "Y": 5901.8547050633015
      },
      {
        "Id": "8bc3ac4715b6408db906711997b4ab31",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -8546.8513405965932,
        "Y": 5603.36712606957
      },
      {
        "Id": "741056a48df6470399e170de7f160aca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Element.ElementType",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -9361.5086626855737,
        "Y": 5747.0639626299326
      },
      {
        "Id": "a571a99014414947900f7bdf52b56b18",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "All Elements of Category",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -9662.7595055216934,
        "Y": 5602.8926775956461
      },
      {
        "Id": "3d0104d85fc249a6b0d23dba79281b31",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Category.ByName",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -9920.6721128154531,
        "Y": 5722.25178663625
      },
      {
        "Id": "4c831ce67ab3432cb0eac6e73b27d526",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -10177.866717620944,
        "Y": 5722.4905246365915
      },
      {
        "Id": "cadedcde2398403bbbba6c33f30f2a64",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -6522.99689367777,
        "Y": 5201.00137701627
      },
      {
        "Id": "9780a4aaf96441239c3f1b4f996ec0a6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "DropDown Data",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -6204.22734148427,
        "Y": 5255.66432788551
      },
      {
        "Id": "88357308e25849ad9b01bd76e118488c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Listview Data",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 7670.9302375427451,
        "Y": 4689.1974504088457
      },
      {
        "Id": "97d9d41882c84f21b27e86d94d127c70",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 7221.0432387337178,
        "Y": 4684.6534842692263
      },
      {
        "Id": "2c688731354b44468fa9fd37901fb26b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8233.5289594426777,
        "Y": 4443.1611619322075
      },
      {
        "Id": "405d6bd0625b4a18b5de8cee417501ea",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "MultipleInputForm ++",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 8701.073101588443,
        "Y": 4592.7732257552234
      },
      {
        "Id": "6304befc45544ced8bfd95879811ac6c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Category.ByName",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 11567.146697968756,
        "Y": 4888.7782997837867
      },
      {
        "Id": "9516410c350c412982acdc5f368eaf17",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "String",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 11377.465498114036,
        "Y": 4888.7782997837867
      },
      {
        "Id": "a9d50330a23b4220879b917f3d86347f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Listview Data",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 16308.091338789596,
        "Y": 5562.784344519936
      },
      {
        "Id": "caecce0b96214263a7839cd756eec3f3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 15886.761977349466,
        "Y": 5563.2045222242414
      },
      {
        "Id": "9641107e6b164d57af8dabb0e4bbcba9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "MultipleInputForm ++",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 17136.069180513077,
        "Y": 5945.9143877069055
      },
      {
        "Id": "8077622c55e9472fbd4adb7d1b6113ad",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 16261.535453581071,
        "Y": 5267.36723754538
      },
      {
        "Id": "4065e2eb62b14fd58dc7816f79ba275a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Code Block",
        "ShowGeometry": true,
        "Excluded": false,
        "X": -4087.5805001030531,
        "Y": 6064.5586304269764
      },
      {
        "Id": "a6ff3d5ee1734d13bdf9d72f7df03157",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Level.ProjectElevation",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 11849.819901341776,
        "Y": 5127.2260579490494
      },
      {
        "Id": "ae4abdec87b942d6b2d2df5c2f4f0910",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Name": "Level.ProjectElevation",
        "ShowGeometry": true,
        "Excluded": false,
        "X": 12588.766373912676,
        "Y": 4901.9062742129463
      }
    ],
    "Annotations": [
      {
        "Id": "76378289da924966927d0b718deb98f6",
        "Title": "DYNAMO COLOUR CODING LEGEND",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "f5dd72914bfe42d3851df34801fa192e",
          "4026ec7910d2401b8f83b3fe6d5c5147"
        ],
        "HasNestedGroups": false,
        "Left": -10203.188577441217,
        "Top": 4184.3709568332615,
        "Width": 1523.6544997558685,
        "Height": 159.03847230434349,
        "FontSize": 24.0,
        "InitialTop": 4243.1709568332617,
        "InitialHeight": 195.83847230434367,
        "TextblockHeight": 48.8,
        "Background": "#FF848484"
      },
      {
        "Id": "1f95f4f88c0d4221bec3e76d9adf07be",
        "Title": "Monitor",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a292848c8c694c00a5ee3a768b7807d1"
        ],
        "HasNestedGroups": false,
        "Left": -8897.1339920950031,
        "Top": 4387.1442240042043,
        "Width": 218.79999999999927,
        "Height": 122.60000000000036,
        "FontSize": 24.0,
        "InitialTop": 4445.9442240042044,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFA4E1FF"
      },
      {
        "Id": "1bfbff63ad404be48e128e83d33542e8",
        "Title": "Conditional",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0717c80e93b84bc8ad793e2b64407824"
        ],
        "HasNestedGroups": false,
        "Left": -9101.410765922059,
        "Top": 4387.3313746229405,
        "Width": 189.20000000000073,
        "Height": 122.60000000000036,
        "FontSize": 24.0,
        "InitialTop": 4446.1313746229407,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFFFA500"
      },
      {
        "Id": "720a4d875d234a23ada9d3b5a35abbbf",
        "Title": "Python",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "360c27b0e7d042398f66e558acf31a4f"
        ],
        "HasNestedGroups": false,
        "Left": -9275.4370115338788,
        "Top": 4387.4054792286879,
        "Width": 158.0,
        "Height": 122.60000000000036,
        "FontSize": 24.0,
        "InitialTop": 4446.2054792286881,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFFFFF00"
      },
      {
        "Id": "f6660c6851674d8fab736115615d6760",
        "Title": "To Revit",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "03a1e6b60de245dcbabd859cbd7be851"
        ],
        "HasNestedGroups": false,
        "Left": -9465.4848128995382,
        "Top": 4386.588253228555,
        "Width": 174.39999999999964,
        "Height": 122.60000000000036,
        "FontSize": 24.0,
        "InitialTop": 4445.3882532285552,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFFF6347"
      },
      {
        "Id": "17d3104c427d464da7d51f90913819ca",
        "Title": "Control",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "b097fe8612eb4749b87dcdcee6b75aed"
        ],
        "HasNestedGroups": false,
        "Left": -9711.95392587465,
        "Top": 4385.7382785940908,
        "Width": 232.39999999999964,
        "Height": 122.60000000000036,
        "FontSize": 24.0,
        "InitialTop": 4444.538278594091,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FF90EE90"
      },
      {
        "Id": "7cf084237d514fdfa352df45b66eaff4",
        "Title": "Input",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "48d0d59ae57e4a3e8bf068836aa29077"
        ],
        "HasNestedGroups": false,
        "Left": -9959.60451747987,
        "Top": 4385.3129138411514,
        "Width": 230.39999999999964,
        "Height": 122.60000000000036,
        "FontSize": 24.0,
        "InitialTop": 4444.1129138411516,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFDDA0DD"
      },
      {
        "Id": "45f337d28d3e439c8eb4f68f62ac00ad",
        "Title": "Background",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e920de4cd5184acd8b9f54f8374b2930"
        ],
        "HasNestedGroups": false,
        "Left": -10205.50466587466,
        "Top": 4385.245056698931,
        "Width": 230.0,
        "Height": 122.60000000000036,
        "FontSize": 24.0,
        "InitialTop": 4444.0450566989311,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "06839928833a4965a0516f72a7479cc6",
        "Title": "User Selection: Was Run & Was Cancelled",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0985240687db4493a307b43242d52ef5"
        ],
        "HasNestedGroups": false,
        "Left": 7232.5285802294275,
        "Top": 5401.7971819139593,
        "Width": 876.0,
        "Height": 256.60000000000036,
        "FontSize": 24.0,
        "InitialTop": 5460.5971819139595,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFFFA500"
      },
      {
        "Id": "7ae29435381845099cdade93e7d4874d",
        "Title": "Python to get all elements in network",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "60e034fbddee4bba9fe6721e41063c35"
        ],
        "HasNestedGroups": false,
        "Left": -3744.8832289664092,
        "Top": 4421.8344733414133,
        "Width": 254.80000000000018,
        "Height": 220.20000000000073,
        "FontSize": 24.0,
        "InitialTop": 4509.4344733414136,
        "InitialHeight": 145.0,
        "TextblockHeight": 77.6,
        "Background": "#FFFFFF00"
      },
      {
        "Id": "8917278f259d456f9817aa4926a79fa5",
        "Title": "Get only pipes",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3b5bc256c66640adbb7d764bf48ef1a1",
          "f7b017915d4b45c08698b8cf8fdd72bb",
          "db33459537184e34a17585b7834db6c6",
          "6bb255afcc6440e1b5e030ac854de0d2",
          "fc00f9d7ef1f435798802ae59c03cb4f"
        ],
        "HasNestedGroups": false,
        "Left": -3285.5215637467568,
        "Top": 4266.7036148068719,
        "Width": 1126.9462106560941,
        "Height": 410.03220775534373,
        "FontSize": 24.0,
        "InitialTop": 4325.5036148068721,
        "InitialHeight": 328.83220775534392,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "e3df91f7db0b46b1bc8b369d666c7f06",
        "Title": "Python to sort strings with numbers",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "90b3d1dcf50e402994ea162e028584e3"
        ],
        "HasNestedGroups": false,
        "Left": -7748.7291069219646,
        "Top": 5198.7891688940972,
        "Width": 365.19999999999982,
        "Height": 220.20000000000073,
        "FontSize": 24.0,
        "InitialTop": 5286.3891688940976,
        "InitialHeight": 145.0,
        "TextblockHeight": 77.6,
        "Background": "#FFFFFF00"
      },
      {
        "Id": "ee92246ff1e148e2867c168da8cfdf31",
        "Title": "Get all piping systems, filter them to only show Discharge",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "f5b309fb41dd4a67b0718ee1d1b5eaa7",
          "741056a48df6470399e170de7f160aca",
          "a571a99014414947900f7bdf52b56b18",
          "db5ba023fa304888af5d26b20b9d207f",
          "8e07551d89264094917f065ce2feff7a",
          "8c075496210343ad9fdfdfcb905eae1e",
          "8bc3ac4715b6408db906711997b4ab31",
          "44daa4089f1f408eacca229eeda5567f",
          "3d0104d85fc249a6b0d23dba79281b31",
          "4c831ce67ab3432cb0eac6e73b27d526"
        ],
        "HasNestedGroups": false,
        "Left": -10187.866717620944,
        "Top": 5410.2794916191815,
        "Width": 2383.6573958299614,
        "Height": 683.899577605458,
        "FontSize": 24.0,
        "InitialTop": 5469.0794916191817,
        "InitialHeight": 607.49957760545749,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "3f2307d5d57846fc8f485ceff147f113",
        "Title": "User Interface",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "577c7f0a4d90468aa81f7bbb863cd907",
          "a22fecf3170444b28a8f274b49189841",
          "0996b25f289a4c33a875b860b3cfcd83",
          "b80995ad718548f9bd49e356763abc81",
          "5001610997b64ea88e7d8a44a0fa17e6",
          "34a856b06ef94a9fa1cff425e6b85281",
          "cadedcde2398403bbbba6c33f30f2a64",
          "9780a4aaf96441239c3f1b4f996ec0a6"
        ],
        "HasNestedGroups": false,
        "Left": -6718.1404956768192,
        "Top": 5087.3377303977295,
        "Width": 2106.3666822770292,
        "Height": 829.65450733254056,
        "FontSize": 24.0,
        "InitialTop": 5146.13773039773,
        "InitialHeight": 783.08733015552025,
        "TextblockHeight": 48.8,
        "Background": "#FF90EE90"
      },
      {
        "Id": "87f982a983304c2eb9822b3d8c8265da",
        "Title": "Get lowest pipe in the system",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0412bec6640a4b69bdc7f1199ae2404f",
          "7dbf9379fa3e48458b3277afc9cf5795",
          "80c7c407d7014e7f869011b53324b64f",
          "bae67ff8bcfb41f98c891ead6fa9e16a",
          "6f54122b872a42209a352172ffa244d4"
        ],
        "HasNestedGroups": false,
        "Left": -1798.8556655612028,
        "Top": 3201.334615214063,
        "Width": 1372.207856552036,
        "Height": 668.72128486856309,
        "FontSize": 24.0,
        "InitialTop": 3260.1346152140632,
        "InitialHeight": 592.321284868563,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "dc6e9003ff204edcbf0a1b1bb65b47f0",
        "Title": "Python to evaluate elements in each network and output a \r\nsublist for each branch",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "db63d0bc58b94ca791dcdb165e0d3b50"
        ],
        "HasNestedGroups": false,
        "Left": -325.89921210174452,
        "Top": 3506.5312046183558,
        "Width": 231.6,
        "Height": 335.40000000000009,
        "FontSize": 24.0,
        "InitialTop": 3709.331204618356,
        "InitialHeight": 145.0,
        "TextblockHeight": 192.8,
        "Background": "#FFFFFF00"
      },
      {
        "Id": "c8f1586568054ab499244b4856ffd36f",
        "Title": "Python to get a number for each item in a list depending on depth and sub list number",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0a40ca02e17c4be196e3f2d98933207d",
          "d0b4fd18b3c845c78e0e87d0a59a68a9",
          "3ccea3479e4c4c9181e1041ca51cb8e6"
        ],
        "HasNestedGroups": false,
        "Left": 3.5023473546370951,
        "Top": 3618.5469441614932,
        "Width": 781.83194132969106,
        "Height": 251.8839045465279,
        "FontSize": 24.0,
        "InitialTop": 3706.1469441614931,
        "InitialHeight": 153.21826309856806,
        "TextblockHeight": 77.6,
        "Background": "#FFFFFF00"
      },
      {
        "Id": "94fa266d4efb44bf9d0d3b8c7c17b3f8",
        "Title": "Get only sizing connections",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "dae92156b09d4c11977d8afff73e84cb",
          "0e736c876f064590b60cbb81b225e87b",
          "9c2040edd4564e5a911963de09105fa3",
          "6a8352ca88e84fce9cff8492c07e1e97",
          "0d766061becc43b792e26bc15c20b6a6",
          "80e11b5668b54bf2854713df57bd0855"
        ],
        "HasNestedGroups": false,
        "Left": 1503.6176600723024,
        "Top": 3103.55846228771,
        "Width": 1290.0469777683966,
        "Height": 442.332258582956,
        "FontSize": 24.0,
        "InitialTop": 3162.35846228771,
        "InitialHeight": 361.13225858295573,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "f3e66150b9bd49febbea1ee89bf9c589",
        "Title": "Get only pipes",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "bf41fb1cfa9d428f84c8d0644080d1c3",
          "faa5cea5d1764b4d808e613cfd91d0b8",
          "bfc5f444e01248188dfdac1a0b4d6137",
          "f8eb57b41757430394f6fc87e04a60e5",
          "960ece72c1ab4188aa7edda80291d9f6"
        ],
        "HasNestedGroups": false,
        "Left": 1295.8994613975069,
        "Top": 3965.1562487578,
        "Width": 1117.6969786928935,
        "Height": 405.40759177374957,
        "FontSize": 24.0,
        "InitialTop": 4023.9562487578,
        "InitialHeight": 324.20759177374975,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "86673a33e7154a8cb6df7512f3e338b0",
        "Title": "Get only Sanitary pipes",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "06eebc6e500c476ab914a873aefb35b9",
          "9da0f031ec9e4e15961e960287751fa6",
          "d970de63eedf41d9950c6404ef6041d8",
          "aa30823c15354919a1559539a30158fd",
          "5ca5b7cf9321486b94f25d26dea4a89c"
        ],
        "HasNestedGroups": false,
        "Left": 2502.601796601477,
        "Top": 3797.0126570327138,
        "Width": 1291.4657054550066,
        "Height": 560.12628830882932,
        "FontSize": 24.0,
        "InitialTop": 3855.812657032714,
        "InitialHeight": 478.9262883088295,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "4be06be5c1aa48e3b9152716e57bd53b",
        "Title": "Check whether Use Manual System Name option was used  & if Manual System Name parameter has a value",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "f919a17b1af8462d838a94a3182a897f",
          "13fc91b270534bac865584add19fe541",
          "2f58e4f491aa48f7965ff22a04b24c88",
          "2137f2040bfc422ab5653155bfd582c1",
          "ac04a566a2114574892b3185db6b4742",
          "289ed23a5ee44569b22e3729363dd707",
          "e9bb49cf8ba74f44acb3f67fc018ff99",
          "836ff35bb2ed4ae88eb1448f0ff7c4b7",
          "3691af966a5c4c098f2b7cbca524ec3c",
          "ed6b486ded01425eb7b6d1aaa67241b8",
          "6378b1a4351e434cb36379e2349065db"
        ],
        "HasNestedGroups": false,
        "Left": 3721.8469749786309,
        "Top": 4555.1408982779967,
        "Width": 2527.8655975125321,
        "Height": 562.924689820662,
        "FontSize": 24.0,
        "InitialTop": 4613.9408982779969,
        "InitialHeight": 486.52468982066148,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "077c5ffa50844f5eb9a3ec419ec822b2",
        "Title": "Conditional",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "313888face5b4f34b2d31205e9af4af8"
        ],
        "HasNestedGroups": false,
        "Left": 6332.4680019945672,
        "Top": 4926.3607203313913,
        "Width": 251.19999999999982,
        "Height": 191.0,
        "FontSize": 24.0,
        "InitialTop": 4985.1607203313915,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFFFA500"
      },
      {
        "Id": "4f0302b7521143ad9a4447aa32b4e102",
        "Title": "Get Levels & sort them based on elevation",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5c3c12c1cc054620a5d03867c9f0db1a",
          "ca24493bdff34bc19be91d9a8a74998a",
          "6304befc45544ced8bfd95879811ac6c",
          "9516410c350c412982acdc5f368eaf17",
          "a6ff3d5ee1734d13bdf9d72f7df03157"
        ],
        "HasNestedGroups": false,
        "Left": 11367.465498114036,
        "Top": 4829.9782997837865,
        "Width": 1076.5223031804981,
        "Height": 429.44775816526271,
        "FontSize": 24.0,
        "InitialTop": 4888.7782997837867,
        "InitialHeight": 383.44775816526271,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "db1d7287a1ca4c8fb9f23062ac59525c",
        "Title": "Determine Levels for Sizing Connections",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "5dd4d45871504ce7a6f4dfb3b9086b7b",
          "5a9cd82838714bc69f916e870829c691",
          "a7cb7caff4dc46778bd4f0db0337f417",
          "86f8b98fc50d4c1ca157c24f97801675",
          "43f6e7be38424afe9bda146d12df3dd9",
          "e32cbbd6385a4d01aafaa535ee2120fe",
          "73c75d3beea3444ba3713ab5522ae34d",
          "f3af12a46b694584a009dfbe6bef4e09",
          "ae4abdec87b942d6b2d2df5c2f4f0910"
        ],
        "HasNestedGroups": false,
        "Left": 12565.213473907479,
        "Top": 4656.9614089525485,
        "Width": 1528.7241573108367,
        "Height": 554.95244500504759,
        "FontSize": 24.0,
        "InitialTop": 4715.7614089525487,
        "InitialHeight": 479.5930113801478,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "da1bb53a457f408b88965394d83e43ea",
        "Title": "User Selection: Was Run & Was Cancelled",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "4065e2eb62b14fd58dc7816f79ba275a"
        ],
        "HasNestedGroups": false,
        "Left": -4097.5805001030531,
        "Top": 6005.7586304269762,
        "Width": 618.40000000000009,
        "Height": 221.40000000000055,
        "FontSize": 24.0,
        "InitialTop": 6064.5586304269764,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFFFA500"
      },
      {
        "Id": "9d9ef8b7373c4c3dbab5618c5dfefc25",
        "Title": "User Selection: Selected Levels",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "140db3a8d51c44fbb321f4e6814ef357"
        ],
        "HasNestedGroups": false,
        "Left": 17640.540930056643,
        "Top": 5656.4923291451623,
        "Width": 344.79999999999927,
        "Height": 191.0,
        "FontSize": 24.0,
        "InitialTop": 5715.2923291451625,
        "InitialHeight": 145.0,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "25d0e731634a45e1b5a2030794f28019",
        "Title": "Delete sizing connections at selected level(s)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "044cd3c514d44b50b748277811004c86"
        ],
        "HasNestedGroups": false,
        "Left": 19601.888777684406,
        "Top": 4153.3548166000128,
        "Width": 219.20000000000073,
        "Height": 248.59999999999945,
        "FontSize": 24.0,
        "InitialTop": 4269.7548166000124,
        "InitialHeight": 145.0,
        "TextblockHeight": 106.4,
        "Background": "#FFFF0000"
      },
      {
        "Id": "fd8168cfd16d469582206d3c1d369346",
        "Title": "Sizing Connections",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "8a77d83d53da40f8876a91650e977d73",
          "2a333299a7b5469581afe1f539206641"
        ],
        "HasNestedGroups": false,
        "Left": 12088.343167642312,
        "Top": 4218.7647531225211,
        "Width": 585.6169362025048,
        "Height": 223.56785983062127,
        "FontSize": 24.0,
        "InitialTop": 4277.5647531225213,
        "InitialHeight": 147.16785983062073,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "18ba2d51e7134ecdaf67bf9ae070e2f4",
        "Title": "User Interface",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "88357308e25849ad9b01bd76e118488c",
          "97d9d41882c84f21b27e86d94d127c70",
          "2c688731354b44468fa9fd37901fb26b",
          "405d6bd0625b4a18b5de8cee417501ea"
        ],
        "HasNestedGroups": false,
        "Left": 7211.0432387337178,
        "Top": 4384.3611619322073,
        "Width": 1861.6298628547256,
        "Height": 749.03628847663822,
        "FontSize": 24.0,
        "InitialTop": 4443.1611619322075,
        "InitialHeight": 391.03628847663822,
        "TextblockHeight": 48.8,
        "Background": "#FF90EE90"
      },
      {
        "Id": "467cccbc52674f8f9a67063e4a0116e0",
        "Title": "User Interface",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a9d50330a23b4220879b917f3d86347f",
          "caecce0b96214263a7839cd756eec3f3",
          "9641107e6b164d57af8dabb0e4bbcba9",
          "8077622c55e9472fbd4adb7d1b6113ad"
        ],
        "HasNestedGroups": false,
        "Left": 15876.761977349466,
        "Top": 5208.56723754538,
        "Width": 1630.9072031636097,
        "Height": 1181.5471501615257,
        "FontSize": 24.0,
        "InitialTop": 5267.36723754538,
        "InitialHeight": 823.54715016152568,
        "TextblockHeight": 48.8,
        "Background": "#FF90EE90"
      },
      {
        "Id": "08955a94740c41eeae2a781d0f1a5043",
        "Title": "User selection: Selected Piping System",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "bca4a2c43f404448bca9fb8e5e255036"
        ],
        "HasNestedGroups": false,
        "Left": -4261.0127544067809,
        "Top": 4450.6194468606509,
        "Width": 433.59999999999991,
        "Height": 191.0,
        "FontSize": 24.0,
        "InitialTop": 4509.4194468606511,
        "InitialHeight": 162.19999999999982,
        "TextblockHeight": 48.8,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "bd1b7dce2e8d4c0abbda8807f0cd2825",
        "Title": "User selection: Use Manual System Name",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1992d40de464401d88a79b4eab16b428"
        ],
        "HasNestedGroups": false,
        "Left": -4272.446110892869,
        "Top": 4760.9807238225931,
        "Width": 436.80000000000018,
        "Height": 219.80000000000018,
        "FontSize": 24.0,
        "InitialTop": 4848.5807238225934,
        "InitialHeight": 162.19999999999982,
        "TextblockHeight": 77.6,
        "Background": "#FFD3D3D3"
      },
      {
        "Id": "4026ec7910d2401b8f83b3fe6d5c5147",
        "Title": "COLOUR CODING LEGEND",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -8854.3340776853474,
        "Top": 4294.0094291376054,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "a292848c8c694c00a5ee3a768b7807d1",
        "Title": "USE:\r\nFOR IMPORTANT WATCH NODES",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -8887.1339920950031,
        "Top": 4445.9442240042044,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0717c80e93b84bc8ad793e2b64407824",
        "Title": "USE:\r\nFOR CONDITIONAL NODES",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -9091.410765922059,
        "Top": 4446.1313746229407,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "360c27b0e7d042398f66e558acf31a4f",
        "Title": "USE:\r\nFOR PYTHON NODES",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -9265.4370115338788,
        "Top": 4446.2054792286881,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "f5dd72914bfe42d3851df34801fa192e",
        "Title": "COLOUR CODING LEGEND",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -10193.188577441217,
        "Top": 4243.1709568332617,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "03a1e6b60de245dcbabd859cbd7be851",
        "Title": "USE:\r\nFOR CHANGES TO REVIT",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -9455.4848128995382,
        "Top": 4445.3882532285552,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "b097fe8612eb4749b87dcdcee6b75aed",
        "Title": "USE:\r\nFOR USER CONTROL (SLIDERS ETC.)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -9701.95392587465,
        "Top": 4444.538278594091,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "48d0d59ae57e4a3e8bf068836aa29077",
        "Title": "USE:\r\nFOR FIXED INPUT (FILE PATHS ETC.)",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -9949.60451747987,
        "Top": 4444.1129138411516,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "e920de4cd5184acd8b9f54f8374b2930",
        "Title": "USE:\r\nFOR GENERAL WORKFLOW NODES",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -10195.50466587466,
        "Top": 4444.0450566989311,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": 4329.8248831228439,
    "Y": -1540.0079617649862,
    "Zoom": 0.42138998064937794
  }
}